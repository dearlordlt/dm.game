<asdoc>

<classRec name='ByteArrayLoader' fullname='flare.loaders:ByteArrayLoader' sourcefile='Z:\projects\flare3d 2.5\src\flare\loaders\ByteArrayLoader.as' namespace='flare.loaders' access='public' baseclass='flash.events:EventDispatcher' interfaces='flare.system:ILibraryExternalItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='ByteArrayLoader' fullname='flare.loaders:ByteArrayLoader/ByteArrayLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='request' param_types='*' param_defaults='undefined' result_type='*'>
</method>
<method name='close' fullname='flare.loaders:ByteArrayLoader/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='completeEvent' fullname='flare.loaders:ByteArrayLoader/private:completeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='flare.loaders:ByteArrayLoader/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='load' fullname='flare.loaders:ByteArrayLoader/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='progressEvent' fullname='flare.loaders:ByteArrayLoader/private:progressEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='bytesLoaded' fullname='flare.loaders:ByteArrayLoader/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='bytesTotal' fullname='flare.loaders:ByteArrayLoader/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='data' fullname='flare.loaders:ByteArrayLoader/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='loaded' fullname='flare.loaders:ByteArrayLoader/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='_bytesLoaded' fullname='flare.loaders:ByteArrayLoader/private:_bytesLoaded' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_bytesTotal' fullname='flare.loaders:ByteArrayLoader/private:_bytesTotal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_loaded' fullname='flare.loaders:ByteArrayLoader/private:_loaded' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_loader' fullname='flare.loaders:ByteArrayLoader/private:_loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<field name='_request' fullname='flare.loaders:ByteArrayLoader/private:_request' type='' isStatic='false' isConst='false' >
</field>
<classRec name='ZF3DLoader' fullname='flare.loaders:ZF3DLoader' sourcefile='Z:\projects\flare3d 2.5\src\flare\loaders\ZF3DLoader.as' namespace='flare.loaders' access='public' baseclass='flare.core:Pivot3D' interfaces='flare.system:ILibraryExternalItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='ZF3DLoader' fullname='flare.loaders:ZF3DLoader/ZF3DLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='request;parent;sceneContext' param_types='*;flare.core:Pivot3D;flare.basic:Scene3D' param_defaults='undefined;null;null' result_type='void'>
</method>
<method name='close' fullname='flare.loaders:ZF3DLoader/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='completeEvent' fullname='flare.loaders:ZF3DLoader/private:completeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='completeResourcesEvent' fullname='flare.loaders:ZF3DLoader/private:completeResourcesEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='fromXMLColor' fullname='flare.loaders:ZF3DLoader/private:fromXMLColor' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='int'>
</method>
<method name='getFile' fullname='flare.loaders:ZF3DLoader/private:getFile' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='loadBytes' fullname='flare.loaders:ZF3DLoader/loadBytes' isStatic='false' isFinal='false' isOverride='false'  param_names='byteArray' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='flare.loaders:ZF3DLoader/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='progressEvent' fullname='flare.loaders:ZF3DLoader/private:progressEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='progressResourcesEvent' fullname='flare.loaders:ZF3DLoader/private:progressResourcesEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='readBounds' fullname='flare.loaders:ZF3DLoader/private:readBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='flare.core:Boundings3D'>
</method>
<method name='readFilter' fullname='flare.loaders:ZF3DLoader/private:readFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='XML' param_defaults='undefined' result_type='flare.flsl:FLSLFilter'>
</method>
<method name='readMap' fullname='flare.loaders:ZF3DLoader/private:readMap' isStatic='false' isFinal='false' isOverride='false'  param_names='maps;map;filter' param_types='XMLList;int;flare.flsl:FLSLFilter' param_defaults='undefined;undefined;undefined' result_type='flare.flsl:FLSLFilter'>
</method>
<method name='readMaterial' fullname='flare.loaders:ZF3DLoader/private:readMaterial' isStatic='false' isFinal='false' isOverride='false'  param_names='xml;maps' param_types='XML;XMLList' param_defaults='undefined;undefined' result_type='flare.materials:Material3D'>
</method>
<method name='readMatrix' fullname='flare.loaders:ZF3DLoader/private:readMatrix' isStatic='false' isFinal='false' isOverride='false'  param_names='transform;out' param_types='Array;flash.geom:Matrix3D' param_defaults='undefined;undefined' result_type='flash.geom:Matrix3D'>
</method>
<method name='readModifier' fullname='flare.loaders:ZF3DLoader/private:readModifier' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='readNode' fullname='flare.loaders:ZF3DLoader/private:readNode' isStatic='false' isFinal='false' isOverride='false'  param_names='xml;modifiers' param_types='XML;XMLList' param_defaults='undefined;undefined' result_type='flare.core:Pivot3D'>
</method>
<method name='readPoint' fullname='flare.loaders:ZF3DLoader/private:readPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='value;out' param_types='String;flash.geom:Point' param_defaults='undefined;null' result_type='flash.geom:Point'>
</method>
<method name='readSkin' fullname='flare.loaders:ZF3DLoader/private:readSkin' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='readTextureMap' fullname='flare.loaders:ZF3DLoader/private:readTextureMap' isStatic='false' isFinal='false' isOverride='false'  param_names='map;maps' param_types='XMLList;XMLList' param_defaults='undefined;undefined' result_type='flare.core:Texture3D'>
</method>
<method name='readVector3D' fullname='flare.loaders:ZF3DLoader/private:readVector3D' isStatic='false' isFinal='false' isOverride='false'  param_names='value;out' param_types='String;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
</method>
<method name='setLayerMode' fullname='flare.loaders:ZF3DLoader/private:setLayerMode' isStatic='false' isFinal='false' isOverride='false'  param_names='m' param_types='flare.core:Mesh3D' param_defaults='undefined' result_type='void'>
</method>
<method name='split' fullname='flare.loaders:ZF3DLoader/private:split' isStatic='true' isFinal='false' isOverride='false'  param_names='surf' param_types='flare.core:Surface3D' param_defaults='undefined' result_type='Vector$flare.core:Surface3D'>
</method>
<method name='bytesLoaded' fullname='flare.loaders:ZF3DLoader/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='bytesTotal' fullname='flare.loaders:ZF3DLoader/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='loaded' fullname='flare.loaders:ZF3DLoader/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='MAX_INDEX' fullname='flare.loaders:ZF3DLoader/private:MAX_INDEX' type='int' isStatic='true' isConst='true' defaultValue='524287' >
</field>
<field name='MAX_VERTEX' fullname='flare.loaders:ZF3DLoader/private:MAX_VERTEX' type='int' isStatic='true' isConst='true' defaultValue='0x10000' >
</field>
<field name='_animations' fullname='flare.loaders:ZF3DLoader/private:_animations' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_autoSort' fullname='flare.loaders:ZF3DLoader/private:_autoSort' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_bytesLoaded' fullname='flare.loaders:ZF3DLoader/private:_bytesLoaded' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_bytesTotal' fullname='flare.loaders:ZF3DLoader/private:_bytesTotal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_filters' fullname='flare.loaders:ZF3DLoader/private:_filters' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_library' fullname='flare.loaders:ZF3DLoader/private:_library' type='flare.system:Library3D' isStatic='false' isConst='false' >
</field>
<field name='_loaded' fullname='flare.loaders:ZF3DLoader/private:_loaded' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_materials' fullname='flare.loaders:ZF3DLoader/private:_materials' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_modifiers' fullname='flare.loaders:ZF3DLoader/private:_modifiers' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_nodes' fullname='flare.loaders:ZF3DLoader/private:_nodes' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_parent' fullname='flare.loaders:ZF3DLoader/private:_parent' type='flare.core:Pivot3D' isStatic='false' isConst='false' >
</field>
<field name='_request' fullname='flare.loaders:ZF3DLoader/private:_request' type='' isStatic='false' isConst='false' >
</field>
<field name='_sceneContext' fullname='flare.loaders:ZF3DLoader/private:_sceneContext' type='flare.basic:Scene3D' isStatic='false' isConst='false' >
</field>
<field name='_skinRoot' fullname='flare.loaders:ZF3DLoader/private:_skinRoot' type='flare.core:Pivot3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_splines' fullname='flare.loaders:ZF3DLoader/private:_splines' type='Vector$flare.core:Spline3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_stream' fullname='flare.loaders:ZF3DLoader/private:_stream' type='flash.net:URLStream' isStatic='false' isConst='false' >
</field>
<field name='_surfCloned' fullname='flare.loaders:ZF3DLoader/private:_surfCloned' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_surfaces' fullname='flare.loaders:ZF3DLoader/private:_surfaces' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_textures' fullname='flare.loaders:ZF3DLoader/private:_textures' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_xml' fullname='flare.loaders:ZF3DLoader/private:_xml' type='XML' isStatic='false' isConst='false' >
</field>
<field name='_zipFile' fullname='flare.loaders:ZF3DLoader/private:_zipFile' type='deng.fzip:FZip' isStatic='false' isConst='false' >
</field>
<field name='activeCamera' fullname='flare.loaders:ZF3DLoader/activeCamera' type='flare.core:Camera3D' isStatic='false' isConst='false' >
</field>
<field name='magic' fullname='flare.loaders:ZF3DLoader/flare.loaders:magic' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='resourcesPath' fullname='flare.loaders:ZF3DLoader/flare.loaders:resourcesPath' type='String' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='version' fullname='flare.loaders:ZF3DLoader/flare.loaders:version' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='Flare3DLoader' fullname='flare.loaders:Flare3DLoader' sourcefile='Z:\projects\flare3d 2.5\src\flare\loaders\Flare3DLoader.as' namespace='flare.loaders' access='public' baseclass='flare.core:Pivot3D' interfaces='flare.system:ILibraryExternalItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Flare3DLoader class is the base class to load F3D files.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Flare3DLoader' fullname='flare.loaders:Flare3DLoader/Flare3DLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='request;parent;sceneContext' param_types='*;flare.core:Pivot3D;flare.basic:Scene3D' param_defaults='undefined;null;null' result_type='void'>
</method>
<method name='close' fullname='flare.loaders:Flare3DLoader/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='completeEvent' fullname='flare.loaders:Flare3DLoader/private:completeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='loadBytes' fullname='flare.loaders:Flare3DLoader/private:loadBytes' isStatic='false' isFinal='false' isOverride='false'  param_names='bytes' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='flare.loaders:Flare3DLoader/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='parse' fullname='flare.loaders:Flare3DLoader/private:parse' isStatic='false' isFinal='false' isOverride='false'  param_names='bytes' param_types='flash.utils:IDataInput' param_defaults='undefined' result_type='void'>
</method>
<method name='progressEvent' fullname='flare.loaders:Flare3DLoader/private:progressEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='activeCamera' fullname='flare.loaders:Flare3DLoader/activeCamera/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Camera3D'>
</method>
<method name='bytesLoaded' fullname='flare.loaders:Flare3DLoader/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='bytesTotal' fullname='flare.loaders:Flare3DLoader/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='loaded' fullname='flare.loaders:Flare3DLoader/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='_format' fullname='flare.loaders:Flare3DLoader/private:_format' type='String' isStatic='false' isConst='false' defaultValue='f3d' >
</field>
<field name='_loader' fullname='flare.loaders:Flare3DLoader/private:_loader' type='flare.system:ILibraryExternalItem' isStatic='false' isConst='false' >
</field>
<field name='_parent' fullname='flare.loaders:Flare3DLoader/private:_parent' type='flare.core:Pivot3D' isStatic='false' isConst='false' >
</field>
<field name='_request' fullname='flare.loaders:Flare3DLoader/private:_request' type='' isStatic='false' isConst='false' >
</field>
<field name='_resourcesPath' fullname='flare.loaders:Flare3DLoader/private:_resourcesPath' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_sceneContext' fullname='flare.loaders:Flare3DLoader/private:_sceneContext' type='flare.basic:Scene3D' isStatic='false' isConst='false' >
</field>
<field name='_stream' fullname='flare.loaders:Flare3DLoader/private:_stream' type='flash.net:URLStream' isStatic='false' isConst='false' >
</field>
<field name='magic' fullname='flare.loaders:Flare3DLoader/flare.loaders:magic' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='version' fullname='flare.loaders:Flare3DLoader/flare.loaders:version' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='Flare3DLoader2' fullname='flare.loaders:Flare3DLoader2' sourcefile='Z:\projects\flare3d 2.5\src\flare\loaders\Flare3DLoader2.as' namespace='flare.loaders' access='public' baseclass='flare.core:Pivot3D' interfaces='flare.system:ILibraryExternalItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Flare3DLoader2 class is the base class to load F3D-V2 files.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Flare3DLoader2' fullname='flare.loaders:Flare3DLoader2/Flare3DLoader2' isStatic='false' isFinal='false' isOverride='false'  param_names='request;parent;sceneContext' param_types='*;flare.core:Pivot3D;flare.basic:Scene3D' param_defaults='undefined;null;null' result_type='void'>
</method>
<method name='close' fullname='flare.loaders:Flare3DLoader2/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='completeEvent' fullname='flare.loaders:Flare3DLoader2/private:completeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='completeResourcesEvent' fullname='flare.loaders:Flare3DLoader2/private:completeResourcesEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='flare.loaders:Flare3DLoader2/dispose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='loadAsync' fullname='flare.loaders:Flare3DLoader2/loadAsync' isStatic='false' isFinal='false' isOverride='false'  param_names='count;interval' param_types='int;int' param_defaults='10;1' result_type='void'>
</method>
<method name='loadBytes' fullname='flare.loaders:Flare3DLoader2/private:loadBytes' isStatic='false' isFinal='false' isOverride='false'  param_names='bytes' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='flare.loaders:Flare3DLoader2/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='nextChunk' fullname='flare.loaders:Flare3DLoader2/private:nextChunk' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='progressEvent' fullname='flare.loaders:Flare3DLoader2/private:progressEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:ProgressEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='progressResourcesEvent' fullname='flare.loaders:Flare3DLoader2/private:progressResourcesEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='readAnimation' fullname='flare.loaders:Flare3DLoader2/private:readAnimation' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readBounds' fullname='flare.loaders:Flare3DLoader2/private:readBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readBuffer' fullname='flare.loaders:Flare3DLoader2/private:readBuffer' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readCamera' fullname='flare.loaders:Flare3DLoader2/private:readCamera' isStatic='false' isFinal='false' isOverride='false'  param_names='camera;chunk' param_types='flare.core:Camera3D;Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='readData' fullname='flare.loaders:Flare3DLoader2/private:readData' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readFLSLByteCode' fullname='flare.loaders:Flare3DLoader2/private:readFLSLByteCode' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readFilter' fullname='flare.loaders:Flare3DLoader2/private:readFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readFrames' fullname='flare.loaders:Flare3DLoader2/private:readFrames' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readHeader' fullname='flare.loaders:Flare3DLoader2/private:readHeader' isStatic='false' isFinal='false' isOverride='false'  param_names='bytes' param_types='flash.utils:IDataInput' param_defaults='undefined' result_type='void'>
</method>
<method name='readIndices' fullname='flare.loaders:Flare3DLoader2/private:readIndices' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readLight' fullname='flare.loaders:Flare3DLoader2/private:readLight' isStatic='false' isFinal='false' isOverride='false'  param_names='light;chunk' param_types='flare.core:Light3D;Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='readMatrix3D' fullname='flare.loaders:Flare3DLoader2/private:readMatrix3D' isStatic='true' isFinal='false' isOverride='false'  param_names='input;compression' param_types='flash.utils:ByteArray;int' param_defaults='undefined;0' result_type='flare.core:Frame3D'>
</method>
<method name='readObject' fullname='flare.loaders:Flare3DLoader2/private:readObject' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='flare.core:Pivot3D'>
</method>
<method name='readShader' fullname='flare.loaders:Flare3DLoader2/private:readShader' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readSkin' fullname='flare.loaders:Flare3DLoader2/private:readSkin' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readSurface' fullname='flare.loaders:Flare3DLoader2/private:readSurface' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='readTexture' fullname='flare.loaders:Flare3DLoader2/private:readTexture' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk' param_types='Flare3DLoader2.as$37:ReadChunk' param_defaults='undefined' result_type='void'>
</method>
<method name='bytesLoaded' fullname='flare.loaders:Flare3DLoader2/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='bytesTotal' fullname='flare.loaders:Flare3DLoader2/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='loaded' fullname='flare.loaders:Flare3DLoader2/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='_bytesLoaded' fullname='flare.loaders:Flare3DLoader2/private:_bytesLoaded' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_bytesTotal' fullname='flare.loaders:Flare3DLoader2/private:_bytesTotal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_bytes' fullname='flare.loaders:Flare3DLoader2/private:_bytes' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='_header' fullname='flare.loaders:Flare3DLoader2/private:_header' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_ids' fullname='flare.loaders:Flare3DLoader2/private:_ids' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_library' fullname='flare.loaders:Flare3DLoader2/private:_library' type='flare.system:Library3D' isStatic='false' isConst='false' >
</field>
<field name='_loaded' fullname='flare.loaders:Flare3DLoader2/private:_loaded' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_nullMaterial' fullname='flare.loaders:Flare3DLoader2/private:_nullMaterial' type='flare.materials:Shader3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_parent' fullname='flare.loaders:Flare3DLoader2/private:_parent' type='flare.core:Pivot3D' isStatic='false' isConst='false' >
</field>
<field name='_request' fullname='flare.loaders:Flare3DLoader2/private:_request' type='' isStatic='false' isConst='false' >
</field>
<field name='_resourcesTotal' fullname='flare.loaders:Flare3DLoader2/private:_resourcesTotal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_sceneContext' fullname='flare.loaders:Flare3DLoader2/private:_sceneContext' type='flare.basic:Scene3D' isStatic='false' isConst='false' >
</field>
<field name='_stream' fullname='flare.loaders:Flare3DLoader2/private:_stream' type='flash.net:URLStream' isStatic='false' isConst='false' >
</field>
<field name='activeCamera' fullname='flare.loaders:Flare3DLoader2/activeCamera' type='flare.core:Camera3D' isStatic='false' isConst='false' >
</field>
<field name='asyncCount' fullname='flare.loaders:Flare3DLoader2/private:asyncCount' type='int' isStatic='false' isConst='false' defaultValue='-1' >
</field>
<field name='asyncInterval' fullname='flare.loaders:Flare3DLoader2/private:asyncInterval' type='int' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='compressionLevel' fullname='flare.loaders:Flare3DLoader2/private:compressionLevel' type='int' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='floatPrecision' fullname='flare.loaders:Flare3DLoader2/private:floatPrecision' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='magic' fullname='flare.loaders:Flare3DLoader2/flare.loaders:magic' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='resourcesPath' fullname='flare.loaders:Flare3DLoader2/flare.loaders:resourcesPath' type='String' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='version' fullname='flare.loaders:Flare3DLoader2/flare.loaders:version' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ColladaLoader' fullname='flare.loaders:ColladaLoader' sourcefile='Z:\projects\flare3d 2.5\src\flare\loaders\ColladaLoader.as' namespace='flare.loaders' access='public' baseclass='flare.core:Pivot3D' interfaces='flare.system:ILibraryExternalItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ColladaLoader class allows to import Collada (DAE) files.

	 

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='ColladaLoader' fullname='flare.loaders:ColladaLoader/ColladaLoader' isStatic='false' isFinal='false' isOverride='false'  param_names='request;parent;sceneContext;texturesFolder;flipNormals;cullFace' param_types='*;flare.core:Pivot3D;flare.basic:Scene3D;String;Boolean;String' param_defaults='undefined;null;null;null;false;unknown' result_type='*'>
</method>
<method name='bindMaterial3' fullname='flare.loaders:ColladaLoader/private:bindMaterial3' isStatic='false' isFinal='false' isOverride='false'  param_names='node;mesh;technique' param_types='XMLList;flare.core:Mesh3D;flare.flsl:FLSLFilter' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='bindMaterial' fullname='flare.loaders:ColladaLoader/private:bindMaterial' isStatic='false' isFinal='false' isOverride='false'  param_names='node;mesh;technique' param_types='XMLList;flare.core:Mesh3D;flare.flsl:FLSLFilter' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='close' fullname='flare.loaders:ColladaLoader/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='combineRGB' fullname='flare.loaders:ColladaLoader/private:combineRGB' isStatic='false' isFinal='false' isOverride='false'  param_names='r;g;b' param_types='int;int;int' param_defaults='undefined;undefined;undefined' result_type='int'>
</method>
<method name='completeEvent' fullname='flare.loaders:ColladaLoader/private:completeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='extract' fullname='flare.loaders:ColladaLoader/extract' isStatic='true' isFinal='false' isOverride='false'  param_names='weightTable;surface;indices' param_types='Vector$Array;flare.core:Surface3D;Vector$uint' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getAnimation' fullname='flare.loaders:ColladaLoader/private:getAnimation' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='getCamera' fullname='flare.loaders:ColladaLoader/private:getCamera' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='flare.core:Camera3D'>
</method>
<method name='getController' fullname='flare.loaders:ColladaLoader/private:getController' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='flare.modifiers:Modifier'>
</method>
<method name='getEffect' fullname='flare.loaders:ColladaLoader/private:getEffect' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='getGeometry' fullname='flare.loaders:ColladaLoader/private:getGeometry' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='Vector$flare.core:Surface3D'>
</method>
<method name='getImage' fullname='flare.loaders:ColladaLoader/private:getImage' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='getLight' fullname='flare.loaders:ColladaLoader/private:getLight' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='flare.core:Light3D'>
</method>
<method name='getMatrix' fullname='flare.loaders:ColladaLoader/private:getMatrix' isStatic='false' isFinal='false' isOverride='false'  param_names='values' param_types='Array' param_defaults='undefined' result_type='flare.core:Frame3D'>
</method>
<method name='getNode' fullname='flare.loaders:ColladaLoader/private:getNode' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='flare.core:Pivot3D'>
</method>
<method name='load' fullname='flare.loaders:ColladaLoader/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='optimizeSurfaces' fullname='flare.loaders:ColladaLoader/private:optimizeSurfaces' isStatic='false' isFinal='false' isOverride='false'  param_names='mesh' param_types='flare.core:Mesh3D' param_defaults='undefined' result_type='void'>
</method>
<method name='resourceCompleteEvent' fullname='flare.loaders:ColladaLoader/private:resourceCompleteEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='resourceProgressEvent' fullname='flare.loaders:ColladaLoader/private:resourceProgressEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='start' fullname='flare.loaders:ColladaLoader/private:start' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='updateController' fullname='flare.loaders:ColladaLoader/private:updateController' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='bytesLoaded' fullname='flare.loaders:ColladaLoader/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='bytesTotal' fullname='flare.loaders:ColladaLoader/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='libraryContext' fullname='flare.loaders:ColladaLoader/private:libraryContext/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.system:Library3D'>
</method>
<method name='loaded' fullname='flare.loaders:ColladaLoader/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_axis' fullname='flare.loaders:ColladaLoader/private:_axis' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_cullFace' fullname='flare.loaders:ColladaLoader/private:_cullFace' type='String' isStatic='false' isConst='false' >
</field>
<field name='_daeAnimation' fullname='flare.loaders:ColladaLoader/private:_daeAnimation' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeCameras' fullname='flare.loaders:ColladaLoader/private:_daeCameras' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeControllers' fullname='flare.loaders:ColladaLoader/private:_daeControllers' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeFilters' fullname='flare.loaders:ColladaLoader/private:_daeFilters' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeGeometry' fullname='flare.loaders:ColladaLoader/private:_daeGeometry' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeImages' fullname='flare.loaders:ColladaLoader/private:_daeImages' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeIndices' fullname='flare.loaders:ColladaLoader/private:_daeIndices' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeLights' fullname='flare.loaders:ColladaLoader/private:_daeLights' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeMaterials' fullname='flare.loaders:ColladaLoader/private:_daeMaterials' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeNodes' fullname='flare.loaders:ColladaLoader/private:_daeNodes' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeSid' fullname='flare.loaders:ColladaLoader/private:_daeSid' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeSkinRoots' fullname='flare.loaders:ColladaLoader/private:_daeSkinRoots' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeSurfaces' fullname='flare.loaders:ColladaLoader/private:_daeSurfaces' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeUpdateControllers' fullname='flare.loaders:ColladaLoader/private:_daeUpdateControllers' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_daeUpdateSkeletons' fullname='flare.loaders:ColladaLoader/private:_daeUpdateSkeletons' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_dae' fullname='flare.loaders:ColladaLoader/private:_dae' type='XML' isStatic='false' isConst='false' >
</field>
<field name='_file' fullname='flare.loaders:ColladaLoader/private:_file' type='String' isStatic='false' isConst='false' >
</field>
<field name='_flipNormals' fullname='flare.loaders:ColladaLoader/private:_flipNormals' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_folder' fullname='flare.loaders:ColladaLoader/private:_folder' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_fuckingInstanceNodes' fullname='flare.loaders:ColladaLoader/private:_fuckingInstanceNodes' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_library' fullname='flare.loaders:ColladaLoader/private:_library' type='flare.system:Library3D' isStatic='false' isConst='false' >
</field>
<field name='_loadCount' fullname='flare.loaders:ColladaLoader/private:_loadCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_loaded' fullname='flare.loaders:ColladaLoader/private:_loaded' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_loader' fullname='flare.loaders:ColladaLoader/private:_loader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<field name='_nullMaterials' fullname='flare.loaders:ColladaLoader/private:_nullMaterials' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_parent' fullname='flare.loaders:ColladaLoader/private:_parent' type='flare.core:Pivot3D' isStatic='false' isConst='false' >
</field>
<field name='_parsed' fullname='flare.loaders:ColladaLoader/private:_parsed' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_request' fullname='flare.loaders:ColladaLoader/private:_request' type='' isStatic='false' isConst='false' >
</field>
<field name='_sceneContext' fullname='flare.loaders:ColladaLoader/private:_sceneContext' type='flare.basic:Scene3D' isStatic='false' isConst='false' >
</field>
<field name='_skinRoot' fullname='flare.loaders:ColladaLoader/private:_skinRoot' type='flare.core:Pivot3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_texturesFolder' fullname='flare.loaders:ColladaLoader/private:_texturesFolder' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='Device3D' fullname='flare.system:Device3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\system\Device3D.as' namespace='flare.system' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	 The Device3D class manages the main configuration, states and data processing.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='maxBonesPerVertex' fullname='flare.system:Device3D/maxBonesPerVertex/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='maxBonesPerVertex' fullname='flare.system:Device3D/maxBonesPerVertex/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets and returns the maximum number of bones per vertex (1 to 4).

		 This property works as a global configuration, and should be defined before creating the scene.

		 ]]></description>
</method>
<field name='_maxBonesPerVertex' fullname='flare.system:Device3D/private:_maxBonesPerVertex' type='int' isStatic='true' isConst='false' defaultValue='2' >
</field>
<field name='bones' fullname='flare.system:Device3D/bones' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Buffer used to store bones transformations.

		 ]]></description>
</field>
<field name='cameraGlobal' fullname='flare.system:Device3D/cameraGlobal' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Current view matrix. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='camera' fullname='flare.system:Device3D/camera' type='flare.core:Camera3D' isStatic='true' isConst='false' >
<description><![CDATA[

		 Current rendering camera. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='cam' fullname='flare.system:Device3D/cam' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='cos_time' fullname='flare.system:Device3D/cos_time' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='defaultCullFace' fullname='flare.system:Device3D/defaultCullFace' type='String' isStatic='true' isConst='false' defaultValue='back' >
<description><![CDATA[

		 The default cull face mode to use when some material is created.

		 ]]></description>
</field>
<field name='defaultDestFactor' fullname='flare.system:Device3D/defaultDestFactor' type='String' isStatic='true' isConst='false' defaultValue='zero' >
<description><![CDATA[

		 The default destination factor to use when some material is created.

		 ]]></description>
</field>
<field name='defaultSourceFactor' fullname='flare.system:Device3D/defaultSourceFactor' type='String' isStatic='true' isConst='false' defaultValue='one' >
<description><![CDATA[

		 The default source factor to use when some material is created.

		 ]]></description>
</field>
<field name='drawCalls' fullname='flare.system:Device3D/drawCalls' type='int' isStatic='true' isConst='false' >
<description><![CDATA[

		 The number of draw operations of the last frame.

		 ]]></description>
</field>
<field name='frameCount' fullname='flare.system:Device3D/frameCount' type='int' isStatic='true' isConst='false' >
<description><![CDATA[

		 The ammount of frames rendered.

		 ]]></description>
</field>
<field name='global' fullname='flare.system:Device3D/global' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Global matrix of current rendering object. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='h' fullname='flare.system:Device3D/private:h' type='int' isStatic='true' isConst='false' >
</field>
<field name='ignoreStates' fullname='flare.system:Device3D/ignoreStates' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
<description><![CDATA[

		 This property sets if materials should use define render states.

		 If it is sets to false, all blending states, culling, depth testing, masks and scissors are ignored and is to 

		 the user to set the state manually.

		 This may be used in cases where an user defined pass needs to be drawn and an specific state is required.

		 All textures, constants parameters and surface buffers will still be defined by the engine.

		 ]]></description>
</field>
<field name='invGlobal' fullname='flare.system:Device3D/invGlobal' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Inverse global matrix of current rendering object. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='invertCullMode' fullname='flare.system:Device3D/invertCullMode' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
<description><![CDATA[

		 Allow to invert the culling state.

		 This property may be used when drawing mirros for example.

		 ]]></description>
</field>
<field name='lastMaterial' fullname='flare.system:Device3D/lastMaterial' type='flare.materials:Material3D' isStatic='true' isConst='false' >
<description><![CDATA[

		 Sets or gets the last used material.

		 This value is used by the engine to clear only the necesary states.

		 ]]></description>
</field>
<field name='maxBonesPerSurface' fullname='flare.system:Device3D/maxBonesPerSurface' type='int' isStatic='true' isConst='false' defaultValue='34' >
<description><![CDATA[

		 The maximim number of bones per surface.

		 This value should not be changed if it is not really necesary, it could affect dramatically the performance and stability of the engine.

		 ]]></description>
</field>
<field name='maxTextureSize' fullname='flare.system:Device3D/maxTextureSize' type='int' isStatic='true' isConst='false' defaultValue='2048' >
<description><![CDATA[

		 The maximum texture size allowed.

		 ]]></description>
</field>
<field name='mouse' fullname='flare.system:Device3D/mouse' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='nearFar' fullname='flare.system:Device3D/nearFar' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='nullBitmapData' fullname='flare.system:Device3D/nullBitmapData' type='flash.display:BitmapData' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='objectsDrawn' fullname='flare.system:Device3D/objectsDrawn' type='int' isStatic='true' isConst='false' >
<description><![CDATA[

		 The number of objects that was drawn on the last frame.

		 ]]></description>
</field>
<field name='profile' fullname='flare.system:Device3D/profile' type='String' isStatic='true' isConst='false' defaultValue='baseline' >
<description><![CDATA[

		 Defines which profile will be used when the context is created.

		 This property should be set before the scene context is created.

		 ]]></description>
</field>
<field name='proj' fullname='flare.system:Device3D/proj' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Current projection matrix. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='random' fullname='flare.system:Device3D/random' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='scene' fullname='flare.system:Device3D/scene' type='flare.basic:Scene3D' isStatic='true' isConst='false' >
<description><![CDATA[

		 Current scene. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='screen' fullname='flare.system:Device3D/screen' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='sin_time' fullname='flare.system:Device3D/sin_time' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='special0' fullname='flare.system:Device3D/special0' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='special1' fullname='flare.system:Device3D/special1' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='special2' fullname='flare.system:Device3D/special2' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='temporal0' fullname='flare.system:Device3D/temporal0' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='temporal1' fullname='flare.system:Device3D/temporal1' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='time' fullname='flare.system:Device3D/time' type='Vector$Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='trianglesDrawn' fullname='flare.system:Device3D/trianglesDrawn' type='int' isStatic='true' isConst='false' >
<description><![CDATA[

		 The number of triangles drawn on the last frame.

		 ]]></description>
</field>
<field name='usedBuffers' fullname='flare.system:Device3D/usedBuffers' type='int' isStatic='true' isConst='false' >
<description><![CDATA[

		 Sets or gets the amount of used buffers in last draw call.

		 This value is used by the engine to clear only the necesary states.

		 ]]></description>
</field>
<field name='usedSamples' fullname='flare.system:Device3D/usedSamples' type='int' isStatic='true' isConst='false' >
<description><![CDATA[

		 Sets or gets the amount of used samples in last draw call.

		 This value is used by the engine to clear only the necesary states.

		 ]]></description>
</field>
<field name='viewPort' fullname='flare.system:Device3D/viewPort' type='flash.geom:Rectangle' isStatic='true' isConst='false' >
<description><![CDATA[

		 Current viewport rectangle. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='viewProj' fullname='flare.system:Device3D/viewProj' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Current view-projection matrix. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='view' fullname='flare.system:Device3D/view' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Current inverted view matrix. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='v' fullname='flare.system:Device3D/private:v' type='int' isStatic='true' isConst='false' >
</field>
<field name='worldViewProj' fullname='flare.system:Device3D/worldViewProj' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Current world-view-projection matrix. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<field name='worldView' fullname='flare.system:Device3D/worldView' type='flash.geom:Matrix3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Current world-view matrix. This property is automatically set during the rendereing process.

		 ]]></description>
</field>
<classRec name='Input3D' fullname='flare.system:Input3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\system\Input3D.as' namespace='flare.system' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Input3D class manages keyboard and mouse inputs.

	 

	 <p><a href="http://www.flare3d.com/examples/05 - keyboard input.zip" target="external">Download example - 05 - keyboard input.zip</a></p>

	 

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='deactivateEvent' fullname='flare.system:Input3D/private:deactivateEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='flare.system:Input3D/dispose' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initialize' fullname='flare.system:Input3D/initialize' isStatic='true' isFinal='false' isOverride='false'  param_names='stage' param_types='flash.display:Stage' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Initializes the Input3D class. This method is automatically called when a new scene is created.

		 ]]></description>
<param><![CDATA[stage Stage container object.

		 ]]></param>
</method>
<method name='keyDownEvent' fullname='flare.system:Input3D/private:keyDownEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='keyDown' fullname='flare.system:Input3D/keyDown' isStatic='true' isFinal='false' isOverride='false'  param_names='keyCode' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns 'true' all the time the specified key is being pressed.

		 ]]></description>
<param><![CDATA[keyCode Code of the key to be tested.

		 ]]></param>
<return><![CDATA['true' if it is pressed.

		 ]]></return>
<see><![CDATA[#keyHit()

		 ]]></see>
</method>
<method name='keyHit' fullname='flare.system:Input3D/keyHit' isStatic='true' isFinal='false' isOverride='false'  param_names='keyCode' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns 'true' if the specified key has been pressed. Unlike the keyDown method, this method will return

		 'true' only in the first test. Then it will return 'false' until the key is released, thus avoiding repetitions.

		 ]]></description>
<param><![CDATA[keyCode Code of the key to be tested.

		 ]]></param>
<return><![CDATA['true' if it is pressed.

		 ]]></return>
<see><![CDATA[#keyDown()

		 ]]></see>
</method>
<method name='keyUpEvent' fullname='flare.system:Input3D/private:keyUpEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='keyUp' fullname='flare.system:Input3D/keyUp' isStatic='true' isFinal='false' isOverride='false'  param_names='keyCode' param_types='int' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='middleMouseDownEvent' fullname='flare.system:Input3D/private:middleMouseDownEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='middleMouseUpEvent' fullname='flare.system:Input3D/private:middleMouseUpEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseDobleClickEvent' fullname='flare.system:Input3D/private:mouseDobleClickEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseDownEvent' fullname='flare.system:Input3D/private:mouseDownEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseUpEvent' fullname='flare.system:Input3D/private:mouseUpEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseUpdate' fullname='flare.system:Input3D/private:mouseUpdate' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseWheelEvent' fullname='flare.system:Input3D/private:mouseWheelEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='reset' fullname='flare.system:Input3D/reset' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Resets all Input states.

		 ]]></description>
</method>
<method name='rightMouseDownEvent' fullname='flare.system:Input3D/private:rightMouseDownEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='rightMouseUpEvent' fullname='flare.system:Input3D/private:rightMouseUpEvent' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='update' fullname='flare.system:Input3D/update' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Updates keyboard and mouse inputs. This method is automatically called by the scene.

		 ]]></description>
</method>
<method name='delta' fullname='flare.system:Input3D/delta/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a count of the number of detents the mouse wheel has rotated.

		 ]]></description>
</method>
<method name='doubleClickEnabled' fullname='flare.system:Input3D/doubleClickEnabled/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns or sets whether the double-click detection mode is enabled. The default value is 'false'.

		 ]]></description>
</method>
<method name='downs' fullname='flare.system:Input3D/downs/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='hits' fullname='flare.system:Input3D/hits/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='keyCode' fullname='flare.system:Input3D/keyCode/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the key code of the last pressed key.

		 ]]></description>
</method>
<method name='middleMouseDown' fullname='flare.system:Input3D/middleMouseDown/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero if the mouse button is pressed.

		 ]]></description>
</method>
<method name='middleMouseHit' fullname='flare.system:Input3D/middleMouseHit/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero if the mouse button has been pressed.

		 ]]></description>
</method>
<method name='middleMouseUp' fullname='flare.system:Input3D/middleMouseUp/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero when the mouse button is released after clicking.

		 ]]></description>
</method>
<method name='mouseDobleClick' fullname='flare.system:Input3D/mouseDobleClick/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero if the mouse button has been double clicked.

		 ]]></description>
</method>
<method name='mouseDown' fullname='flare.system:Input3D/mouseDown/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero if the mouse button is pressed.

		 ]]></description>
</method>
<method name='mouseHit' fullname='flare.system:Input3D/mouseHit/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero if the mouse button has been pressed.

		 ]]></description>
</method>
<method name='mouseMoved' fullname='flare.system:Input3D/mouseMoved/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns whatever the mouse was moved.

		 ]]></description>
</method>
<method name='mouseUp' fullname='flare.system:Input3D/mouseUp/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero when the mouse button is released after clicking.

		 ]]></description>
</method>
<method name='mouseXSpeed' fullname='flare.system:Input3D/mouseXSpeed/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the displacement of the mouse on the X axis starting from the position of the last frame.

		 ]]></description>
</method>
<method name='mouseX' fullname='flare.system:Input3D/mouseX/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the position of the mouse on the X axis.

		 ]]></description>
</method>
<method name='mouseYSpeed' fullname='flare.system:Input3D/mouseYSpeed/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the displacement of the mouse on the Y axis starting from the position of the last frame.

		 ]]></description>
</method>
<method name='mouseY' fullname='flare.system:Input3D/mouseY/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the position of the mouse on the Y axis.

		 ]]></description>
</method>
<method name='rightClickEnabled' fullname='flare.system:Input3D/rightClickEnabled/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns or sets whether the right-click detection mode is enabled. The default value is 'false'.

		 ]]></description>
</method>
<method name='rightMouseDown' fullname='flare.system:Input3D/rightMouseDown/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero if the mouse button is pressed.

		 ]]></description>
</method>
<method name='rightMouseHit' fullname='flare.system:Input3D/rightMouseHit/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero if the mouse button has been pressed.

		 ]]></description>
</method>
<method name='rightMouseUp' fullname='flare.system:Input3D/rightMouseUp/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns a number greater than zero when the mouse button is released after clicking.

		 ]]></description>
</method>
<method name='delta' fullname='flare.system:Input3D/delta/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='doubleClickEnabled' fullname='flare.system:Input3D/doubleClickEnabled/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseX' fullname='flare.system:Input3D/mouseX/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseY' fullname='flare.system:Input3D/mouseY/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='rightClickEnabled' fullname='flare.system:Input3D/rightClickEnabled/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='ALTERNATE' fullname='flare.system:Input3D/ALTERNATE' type='uint' isStatic='true' isConst='true' defaultValue='18' >
</field>
<field name='A' fullname='flare.system:Input3D/A' type='uint' isStatic='true' isConst='true' defaultValue='65' >
</field>
<field name='BACKQUOTE' fullname='flare.system:Input3D/BACKQUOTE' type='uint' isStatic='true' isConst='true' defaultValue='192' >
</field>
<field name='BACKSLASH' fullname='flare.system:Input3D/BACKSLASH' type='uint' isStatic='true' isConst='true' defaultValue='220' >
</field>
<field name='BACKSPACE' fullname='flare.system:Input3D/BACKSPACE' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='B' fullname='flare.system:Input3D/B' type='uint' isStatic='true' isConst='true' defaultValue='66' >
</field>
<field name='CAPS_LOCK' fullname='flare.system:Input3D/CAPS_LOCK' type='uint' isStatic='true' isConst='true' defaultValue='20' >
</field>
<field name='COMMAND' fullname='flare.system:Input3D/COMMAND' type='uint' isStatic='true' isConst='true' defaultValue='19' >
</field>
<field name='COMMA' fullname='flare.system:Input3D/COMMA' type='uint' isStatic='true' isConst='true' defaultValue='188' >
</field>
<field name='CONTROL' fullname='flare.system:Input3D/CONTROL' type='uint' isStatic='true' isConst='true' defaultValue='17' >
</field>
<field name='C' fullname='flare.system:Input3D/C' type='uint' isStatic='true' isConst='true' defaultValue='67' >
</field>
<field name='DELETE' fullname='flare.system:Input3D/DELETE' type='uint' isStatic='true' isConst='true' defaultValue='46' >
</field>
<field name='DOWN' fullname='flare.system:Input3D/DOWN' type='uint' isStatic='true' isConst='true' defaultValue='40' >
</field>
<field name='D' fullname='flare.system:Input3D/D' type='uint' isStatic='true' isConst='true' defaultValue='68' >
</field>
<field name='END' fullname='flare.system:Input3D/END' type='uint' isStatic='true' isConst='true' defaultValue='35' >
</field>
<field name='ENTER' fullname='flare.system:Input3D/ENTER' type='uint' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='EQUAL' fullname='flare.system:Input3D/EQUAL' type='uint' isStatic='true' isConst='true' defaultValue='187' >
</field>
<field name='ESCAPE' fullname='flare.system:Input3D/ESCAPE' type='uint' isStatic='true' isConst='true' defaultValue='27' >
</field>
<field name='E' fullname='flare.system:Input3D/E' type='uint' isStatic='true' isConst='true' defaultValue='69' >
</field>
<field name='F10' fullname='flare.system:Input3D/F10' type='uint' isStatic='true' isConst='true' defaultValue='121' >
</field>
<field name='F11' fullname='flare.system:Input3D/F11' type='uint' isStatic='true' isConst='true' defaultValue='122' >
</field>
<field name='F12' fullname='flare.system:Input3D/F12' type='uint' isStatic='true' isConst='true' defaultValue='123' >
</field>
<field name='F13' fullname='flare.system:Input3D/F13' type='uint' isStatic='true' isConst='true' defaultValue='124' >
</field>
<field name='F14' fullname='flare.system:Input3D/F14' type='uint' isStatic='true' isConst='true' defaultValue='125' >
</field>
<field name='F15' fullname='flare.system:Input3D/F15' type='uint' isStatic='true' isConst='true' defaultValue='126' >
</field>
<field name='F1' fullname='flare.system:Input3D/F1' type='uint' isStatic='true' isConst='true' defaultValue='112' >
</field>
<field name='F2' fullname='flare.system:Input3D/F2' type='uint' isStatic='true' isConst='true' defaultValue='113' >
</field>
<field name='F3' fullname='flare.system:Input3D/F3' type='uint' isStatic='true' isConst='true' defaultValue='114' >
</field>
<field name='F4' fullname='flare.system:Input3D/F4' type='uint' isStatic='true' isConst='true' defaultValue='115' >
</field>
<field name='F5' fullname='flare.system:Input3D/F5' type='uint' isStatic='true' isConst='true' defaultValue='116' >
</field>
<field name='F6' fullname='flare.system:Input3D/F6' type='uint' isStatic='true' isConst='true' defaultValue='117' >
</field>
<field name='F7' fullname='flare.system:Input3D/F7' type='uint' isStatic='true' isConst='true' defaultValue='118' >
</field>
<field name='F8' fullname='flare.system:Input3D/F8' type='uint' isStatic='true' isConst='true' defaultValue='119' >
</field>
<field name='F9' fullname='flare.system:Input3D/F9' type='uint' isStatic='true' isConst='true' defaultValue='120' >
</field>
<field name='F' fullname='flare.system:Input3D/F' type='uint' isStatic='true' isConst='true' defaultValue='70' >
</field>
<field name='G' fullname='flare.system:Input3D/G' type='uint' isStatic='true' isConst='true' defaultValue='71' >
</field>
<field name='HOME' fullname='flare.system:Input3D/HOME' type='uint' isStatic='true' isConst='true' defaultValue='36' >
</field>
<field name='H' fullname='flare.system:Input3D/H' type='uint' isStatic='true' isConst='true' defaultValue='72' >
</field>
<field name='INSERT' fullname='flare.system:Input3D/INSERT' type='uint' isStatic='true' isConst='true' defaultValue='45' >
</field>
<field name='I' fullname='flare.system:Input3D/I' type='uint' isStatic='true' isConst='true' defaultValue='73' >
</field>
<field name='J' fullname='flare.system:Input3D/J' type='uint' isStatic='true' isConst='true' defaultValue='74' >
</field>
<field name='K' fullname='flare.system:Input3D/K' type='uint' isStatic='true' isConst='true' defaultValue='75' >
</field>
<field name='LEFTBRACKET' fullname='flare.system:Input3D/LEFTBRACKET' type='uint' isStatic='true' isConst='true' defaultValue='219' >
</field>
<field name='LEFT' fullname='flare.system:Input3D/LEFT' type='uint' isStatic='true' isConst='true' defaultValue='37' >
</field>
<field name='L' fullname='flare.system:Input3D/L' type='uint' isStatic='true' isConst='true' defaultValue='76' >
</field>
<field name='MINUS' fullname='flare.system:Input3D/MINUS' type='uint' isStatic='true' isConst='true' defaultValue='189' >
</field>
<field name='M' fullname='flare.system:Input3D/M' type='uint' isStatic='true' isConst='true' defaultValue='77' >
</field>
<field name='NUMBER_0' fullname='flare.system:Input3D/NUMBER_0' type='uint' isStatic='true' isConst='true' defaultValue='48' >
</field>
<field name='NUMBER_1' fullname='flare.system:Input3D/NUMBER_1' type='uint' isStatic='true' isConst='true' defaultValue='49' >
</field>
<field name='NUMBER_2' fullname='flare.system:Input3D/NUMBER_2' type='uint' isStatic='true' isConst='true' defaultValue='50' >
</field>
<field name='NUMBER_3' fullname='flare.system:Input3D/NUMBER_3' type='uint' isStatic='true' isConst='true' defaultValue='51' >
</field>
<field name='NUMBER_4' fullname='flare.system:Input3D/NUMBER_4' type='uint' isStatic='true' isConst='true' defaultValue='52' >
</field>
<field name='NUMBER_5' fullname='flare.system:Input3D/NUMBER_5' type='uint' isStatic='true' isConst='true' defaultValue='53' >
</field>
<field name='NUMBER_6' fullname='flare.system:Input3D/NUMBER_6' type='uint' isStatic='true' isConst='true' defaultValue='54' >
</field>
<field name='NUMBER_7' fullname='flare.system:Input3D/NUMBER_7' type='uint' isStatic='true' isConst='true' defaultValue='55' >
</field>
<field name='NUMBER_8' fullname='flare.system:Input3D/NUMBER_8' type='uint' isStatic='true' isConst='true' defaultValue='56' >
</field>
<field name='NUMBER_9' fullname='flare.system:Input3D/NUMBER_9' type='uint' isStatic='true' isConst='true' defaultValue='57' >
</field>
<field name='NUMPAD_0' fullname='flare.system:Input3D/NUMPAD_0' type='uint' isStatic='true' isConst='true' defaultValue='96' >
</field>
<field name='NUMPAD_1' fullname='flare.system:Input3D/NUMPAD_1' type='uint' isStatic='true' isConst='true' defaultValue='97' >
</field>
<field name='NUMPAD_2' fullname='flare.system:Input3D/NUMPAD_2' type='uint' isStatic='true' isConst='true' defaultValue='98' >
</field>
<field name='NUMPAD_3' fullname='flare.system:Input3D/NUMPAD_3' type='uint' isStatic='true' isConst='true' defaultValue='99' >
</field>
<field name='NUMPAD_4' fullname='flare.system:Input3D/NUMPAD_4' type='uint' isStatic='true' isConst='true' defaultValue='100' >
</field>
<field name='NUMPAD_5' fullname='flare.system:Input3D/NUMPAD_5' type='uint' isStatic='true' isConst='true' defaultValue='101' >
</field>
<field name='NUMPAD_6' fullname='flare.system:Input3D/NUMPAD_6' type='uint' isStatic='true' isConst='true' defaultValue='102' >
</field>
<field name='NUMPAD_7' fullname='flare.system:Input3D/NUMPAD_7' type='uint' isStatic='true' isConst='true' defaultValue='103' >
</field>
<field name='NUMPAD_8' fullname='flare.system:Input3D/NUMPAD_8' type='uint' isStatic='true' isConst='true' defaultValue='104' >
</field>
<field name='NUMPAD_9' fullname='flare.system:Input3D/NUMPAD_9' type='uint' isStatic='true' isConst='true' defaultValue='105' >
</field>
<field name='NUMPAD_ADD' fullname='flare.system:Input3D/NUMPAD_ADD' type='uint' isStatic='true' isConst='true' defaultValue='107' >
</field>
<field name='NUMPAD_DECIMAL' fullname='flare.system:Input3D/NUMPAD_DECIMAL' type='uint' isStatic='true' isConst='true' defaultValue='110' >
</field>
<field name='NUMPAD_DIVIDE' fullname='flare.system:Input3D/NUMPAD_DIVIDE' type='uint' isStatic='true' isConst='true' defaultValue='111' >
</field>
<field name='NUMPAD_ENTER' fullname='flare.system:Input3D/NUMPAD_ENTER' type='uint' isStatic='true' isConst='true' defaultValue='108' >
</field>
<field name='NUMPAD_MULTIPLY' fullname='flare.system:Input3D/NUMPAD_MULTIPLY' type='uint' isStatic='true' isConst='true' defaultValue='106' >
</field>
<field name='NUMPAD_SUBTRACT' fullname='flare.system:Input3D/NUMPAD_SUBTRACT' type='uint' isStatic='true' isConst='true' defaultValue='109' >
</field>
<field name='NUMPAD' fullname='flare.system:Input3D/NUMPAD' type='uint' isStatic='true' isConst='true' defaultValue='21' >
</field>
<field name='N' fullname='flare.system:Input3D/N' type='uint' isStatic='true' isConst='true' defaultValue='78' >
</field>
<field name='O' fullname='flare.system:Input3D/O' type='uint' isStatic='true' isConst='true' defaultValue='79' >
</field>
<field name='PAGE_DOWN' fullname='flare.system:Input3D/PAGE_DOWN' type='uint' isStatic='true' isConst='true' defaultValue='34' >
</field>
<field name='PAGE_UP' fullname='flare.system:Input3D/PAGE_UP' type='uint' isStatic='true' isConst='true' defaultValue='33' >
</field>
<field name='PERIOD' fullname='flare.system:Input3D/PERIOD' type='uint' isStatic='true' isConst='true' defaultValue='190' >
</field>
<field name='P' fullname='flare.system:Input3D/P' type='uint' isStatic='true' isConst='true' defaultValue='80' >
</field>
<field name='QUOTE' fullname='flare.system:Input3D/QUOTE' type='uint' isStatic='true' isConst='true' defaultValue='222' >
</field>
<field name='Q' fullname='flare.system:Input3D/Q' type='uint' isStatic='true' isConst='true' defaultValue='81' >
</field>
<field name='RIGHTBRACKET' fullname='flare.system:Input3D/RIGHTBRACKET' type='uint' isStatic='true' isConst='true' defaultValue='221' >
</field>
<field name='RIGHT' fullname='flare.system:Input3D/RIGHT' type='uint' isStatic='true' isConst='true' defaultValue='39' >
</field>
<field name='R' fullname='flare.system:Input3D/R' type='uint' isStatic='true' isConst='true' defaultValue='82' >
</field>
<field name='SEMICOLON' fullname='flare.system:Input3D/SEMICOLON' type='uint' isStatic='true' isConst='true' defaultValue='186' >
</field>
<field name='SHIFT' fullname='flare.system:Input3D/SHIFT' type='uint' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='SLASH' fullname='flare.system:Input3D/SLASH' type='uint' isStatic='true' isConst='true' defaultValue='191' >
</field>
<field name='SPACE' fullname='flare.system:Input3D/SPACE' type='uint' isStatic='true' isConst='true' defaultValue='32' >
</field>
<field name='S' fullname='flare.system:Input3D/S' type='uint' isStatic='true' isConst='true' defaultValue='83' >
</field>
<field name='TAB' fullname='flare.system:Input3D/TAB' type='uint' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='T' fullname='flare.system:Input3D/T' type='uint' isStatic='true' isConst='true' defaultValue='84' >
</field>
<field name='UP' fullname='flare.system:Input3D/UP' type='uint' isStatic='true' isConst='true' defaultValue='38' >
</field>
<field name='U' fullname='flare.system:Input3D/U' type='uint' isStatic='true' isConst='true' defaultValue='85' >
</field>
<field name='V' fullname='flare.system:Input3D/V' type='uint' isStatic='true' isConst='true' defaultValue='86' >
</field>
<field name='W' fullname='flare.system:Input3D/W' type='uint' isStatic='true' isConst='true' defaultValue='87' >
</field>
<field name='X' fullname='flare.system:Input3D/X' type='uint' isStatic='true' isConst='true' defaultValue='88' >
</field>
<field name='Y' fullname='flare.system:Input3D/Y' type='uint' isStatic='true' isConst='true' defaultValue='89' >
</field>
<field name='Z' fullname='flare.system:Input3D/Z' type='uint' isStatic='true' isConst='true' defaultValue='90' >
</field>
<field name='_currFrame' fullname='flare.system:Input3D/private:_currFrame' type='int' isStatic='true' isConst='false' >
</field>
<field name='_deltaMove' fullname='flare.system:Input3D/private:_deltaMove' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_delta' fullname='flare.system:Input3D/private:_delta' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_doubleClickEnabled' fullname='flare.system:Input3D/private:_doubleClickEnabled' type='Boolean' isStatic='true' isConst='false' >
</field>
<field name='_downs' fullname='flare.system:Input3D/private:_downs' type='Array' isStatic='true' isConst='false' >
</field>
<field name='_hits' fullname='flare.system:Input3D/private:_hits' type='Array' isStatic='true' isConst='false' >
</field>
<field name='_keyCode' fullname='flare.system:Input3D/private:_keyCode' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_middleMouseDown' fullname='flare.system:Input3D/private:_middleMouseDown' type='int' isStatic='true' isConst='false' >
</field>
<field name='_middleMouseHit' fullname='flare.system:Input3D/private:_middleMouseHit' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_middleMouseUp' fullname='flare.system:Input3D/private:_middleMouseUp' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_mouseDobleClick' fullname='flare.system:Input3D/private:_mouseDobleClick' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_mouseDown' fullname='flare.system:Input3D/private:_mouseDown' type='int' isStatic='true' isConst='false' >
</field>
<field name='_mouseHit' fullname='flare.system:Input3D/private:_mouseHit' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_mouseUpdated' fullname='flare.system:Input3D/private:_mouseUpdated' type='Boolean' isStatic='true' isConst='false' defaultValue='true' >
</field>
<field name='_mouseUp' fullname='flare.system:Input3D/private:_mouseUp' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_mouseXSpeed' fullname='flare.system:Input3D/private:_mouseXSpeed' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_mouseX' fullname='flare.system:Input3D/private:_mouseX' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_mouseYSpeed' fullname='flare.system:Input3D/private:_mouseYSpeed' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_mouseY' fullname='flare.system:Input3D/private:_mouseY' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_rightClickEnabled' fullname='flare.system:Input3D/private:_rightClickEnabled' type='Boolean' isStatic='true' isConst='false' >
</field>
<field name='_rightMouseDown' fullname='flare.system:Input3D/private:_rightMouseDown' type='int' isStatic='true' isConst='false' >
</field>
<field name='_rightMouseHit' fullname='flare.system:Input3D/private:_rightMouseHit' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_rightMouseUp' fullname='flare.system:Input3D/private:_rightMouseUp' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_stageX' fullname='flare.system:Input3D/private:_stageX' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_stageY' fullname='flare.system:Input3D/private:_stageY' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_stage' fullname='flare.system:Input3D/private:_stage' type='flash.display:Stage' isStatic='true' isConst='false' >
</field>
<field name='_ups' fullname='flare.system:Input3D/private:_ups' type='Array' isStatic='true' isConst='false' >
</field>
<field name='enableEventPhase' fullname='flare.system:Input3D/enableEventPhase' type='Boolean' isStatic='true' isConst='false' defaultValue='true' >
</field>
<field name='eventPhase' fullname='flare.system:Input3D/eventPhase' type='uint' isStatic='true' isConst='false' >
</field>
<interfaceRec name='ILibraryItem' fullname='flare.system:ILibraryItem' sourcefile='Z:\projects\flare3d 2.5\src\flare\system\ILibraryItem.as' namespace='flare.system' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</interfaceRec>
<method name='dispose' fullname='flare.system:ILibraryItem/flare.system:ILibraryItem:dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<interfaceRec name='ILibraryExternalItem' fullname='flare.system:ILibraryExternalItem' sourcefile='Z:\projects\flare3d 2.5\src\flare\system\ILibraryExternalItem.as' namespace='flare.system' access='public' baseClasses='flare.system:ILibraryItem;flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</interfaceRec>
<method name='close' fullname='flare.system:ILibraryExternalItem/flare.system:ILibraryExternalItem:close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='load' fullname='flare.system:ILibraryExternalItem/flare.system:ILibraryExternalItem:load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='bytesLoaded' fullname='flare.system:ILibraryExternalItem/flare.system:ILibraryExternalItem:bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='bytesTotal' fullname='flare.system:ILibraryExternalItem/flare.system:ILibraryExternalItem:bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='loaded' fullname='flare.system:ILibraryExternalItem/flare.system:ILibraryExternalItem:loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<classRec name='Library3D' fullname='flare.system:Library3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\system\Library3D.as' namespace='flare.system' access='public' baseclass='flash.events:EventDispatcher' interfaces='flare.system:ILibraryExternalItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Library3D class loads and manages the resources used by 3d objects.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
<metadata>
	<Event owner='flare.system:Library3D' name='ioError' type='flash.events.IOErrorEvent' >
<description><![CDATA[

	 Dispatched if a call to load() results in a fatal error that terminates the download.

	 ]]></description>
<eventType><![CDATA[flash.events.IOErrorEvent.IO_ERROR

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.system:Library3D' name='progress' type='flash.events.ProgressEvent' >
<description><![CDATA[

	 This event occurs whenever the loading progress of the elements of a library is modified.                 

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.system:Library3D' name='complete' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs once the loading process of all the library elements has been completed.               

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.system:Library3D' name='updated' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs when the library has been updated.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='Library3D' fullname='flare.system:Library3D/Library3D' isStatic='false' isFinal='false' isOverride='false'  param_names='connections;autoStart;allowEventsAfterComplete' param_types='int;Boolean;Boolean' param_defaults='10;true;true' result_type='*'>
<description><![CDATA[

		 Creates a new library object.

		 ]]></description>
<param><![CDATA[connections The number of connections used for download at the same time.

		 ]]></param>
<param><![CDATA[autoStart Define if the library starts automatically to download the files when the first file is added.

		 ]]></param>
<param><![CDATA[allowEventsAfterComplete Allow to fire events (progress and complete) after the first complete events. It can be used to load multiple packages.

		 ]]></param>
</method>
<method name='addItem' fullname='flare.system:Library3D/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='key;item' param_types='*;flare.system:ILibraryItem' param_defaults='undefined;undefined' result_type='flare.system:ILibraryItem'>
<description><![CDATA[

		 Adds a new item to the library. This method asociates the item instance to a key-path to be used with the getItem() method.

		 Also adds the item to a collecion of items.

		 ]]></description>
<param><![CDATA[path Path or key to associate the item.

		 ]]></param>
<param><![CDATA[item The item instance.

		 ]]></param>
<see><![CDATA[#getItem()

		 ]]></see>
<see><![CDATA[#items

		 ]]></see>
</method>
<method name='close' fullname='flare.system:Library3D/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Closes all connections.

		 ]]></description>
</method>
<method name='completeQueuedEvent' fullname='flare.system:Library3D/private:completeQueuedEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='dispose' fullname='flare.system:Library3D/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Eliminates cached resources.

		 ]]></description>
</method>
<method name='getItem' fullname='flare.system:Library3D/getItem' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='*' param_defaults='undefined' result_type='flare.system:ILibraryItem'>
<description><![CDATA[

		 Returns an item instance previosuly associated to a path.

		 ]]></description>
<param><![CDATA[path Path of the item instance.

		 ]]></param>
<return><![CDATA[The item corresponding to the path, null othwrwise.

		 ]]></return>
<see><![CDATA[#addItem()

		 ]]></see>
<see><![CDATA[#items

		 ]]></see>
</method>
<method name='load' fullname='flare.system:Library3D/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Start downloading.

		 If autoStart propery was seted to true in the constructor, this method will be automatically called when loads the first file.

		 ]]></description>
</method>
<method name='progressQueuedEvent' fullname='flare.system:Library3D/private:progressQueuedEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:ProgressEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='push' fullname='flare.system:Library3D/push' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='flare.system:ILibraryExternalItem' param_defaults='undefined' result_type='flare.system:ILibraryExternalItem'>
<description><![CDATA[

		 Loads a new item object. If the item can not be loaded inmediately (depending of the amount of available connections), it will be added to a queue to be load when connections are available.

		 ]]></description>
<return><![CDATA[true if was sucesful, false otherwise.

		 ]]></return>
</method>
<method name='reset' fullname='flare.system:Library3D/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes all items and clean all references.

		 ]]></description>
</method>
<method name='allowEventsAfterComplete' fullname='flare.system:Library3D/allowEventsAfterComplete/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='bytesLoaded' fullname='flare.system:Library3D/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[

		 Returns the amount of bytes loaded.

		 ]]></description>
</method>
<method name='bytesTotal' fullname='flare.system:Library3D/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[

		 Returns the amount of bytes that will be loaded.

		 ]]></description>
</method>
<method name='itemsToLoad' fullname='flare.system:Library3D/itemsToLoad/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$flare.system:ILibraryExternalItem'>
<description><![CDATA[

		 Returns a copy of the stored items to be loaded.

		 ]]></description>
</method>
<method name='items' fullname='flare.system:Library3D/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$flare.system:ILibraryItem'>
<description><![CDATA[

		 Returns a copy of the stored items.

		 ]]></description>
</method>
<method name='loaded' fullname='flare.system:Library3D/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='progress' fullname='flare.system:Library3D/progress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the global progress of all the resources being currently loaded.

		 Once the 'complete' event has been received, it will be set back to zero and a new progress stage will begin if new resources are loaded only if allowEventsAfterComplete is seted to true in the class constructor,

		 ]]></description>
</method>
<method name='allowEventsAfterComplete' fullname='flare.system:Library3D/allowEventsAfterComplete/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Allow to fire events (progress and complete) after the first complete event were dispatched. It can be used to load multiple packages.

		 ]]></description>
</method>
<field name='_allowEventsAfterComplete' fullname='flare.system:Library3D/private:_allowEventsAfterComplete' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_autoStart' fullname='flare.system:Library3D/private:_autoStart' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_bytesLoaded' fullname='flare.system:Library3D/private:_bytesLoaded' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_bytesTotal' fullname='flare.system:Library3D/private:_bytesTotal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_completed' fullname='flare.system:Library3D/private:_completed' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_connectionsCount' fullname='flare.system:Library3D/private:_connectionsCount' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_connections' fullname='flare.system:Library3D/private:_connections' type='int' isStatic='false' isConst='false' defaultValue='2' >
</field>
<field name='_items' fullname='flare.system:Library3D/private:_items' type='Vector$flare.system:ILibraryItem' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_loadCount' fullname='flare.system:Library3D/private:_loadCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_loadInQueued' fullname='flare.system:Library3D/private:_loadInQueued' type='Vector$flare.system:ILibraryExternalItem' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_loaded' fullname='flare.system:Library3D/private:_loaded' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_loading' fullname='flare.system:Library3D/private:_loading' type='Vector$flare.system:ILibraryExternalItem' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_path' fullname='flare.system:Library3D/private:_path' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_progress' fullname='flare.system:Library3D/private:_progress' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='Vector3DUtils' fullname='flare.utils:Vector3DUtils' sourcefile='Z:\projects\flare3d 2.5\src\flare\utils\Vector3DUtils.as' namespace='flare.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Vector3DUtils class contains help tools to work with Vector3D-type objects.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='abs' fullname='flare.utils:Vector3DUtils/abs' isStatic='true' isFinal='false' isOverride='false'  param_names='a' param_types='flash.geom:Vector3D' param_defaults='undefined' result_type='void'>
</method>
<method name='add' fullname='flare.utils:Vector3DUtils/add' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Calculates the sum of two vectors.

		 ]]></description>
<param><![CDATA[a First vector.

		 ]]></param>
<param><![CDATA[b Second vector.

		 ]]></param>
<param><![CDATA[out Vector3D-type object where the result is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the result will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='cross' fullname='flare.utils:Vector3DUtils/cross' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Calculates the crossed product of two vectors.

		 ]]></description>
<param><![CDATA[a First vector to be tested.

		 ]]></param>
<param><![CDATA[b Second vector to be tested.

		 ]]></param>
<param><![CDATA[out Vector3D-type object where the result is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the result will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='interpolate' fullname='flare.utils:Vector3DUtils/interpolate' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b;value;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;Number;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Calculates the interpolation between two vectors.

		 ]]></description>
<param><![CDATA[a Source vector.

		 ]]></param>
<param><![CDATA[b Destination vector.

		 ]]></param>
<param><![CDATA[value Interpolation value (0-1).

		 ]]></param>
<param><![CDATA[out Vector where the result is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the result will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='lengthSquared' fullname='flare.utils:Vector3DUtils/lengthSquared' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Calculates the squared length between two vectors.

		 ]]></description>
<param><![CDATA[a First  vector to be tested.

		 ]]></param>
<param><![CDATA[b Second vector to be tested.

		 ]]></param>
<return><![CDATA[Distance aquared between vectors 'a' and 'b'.

		 ]]></return>
</method>
<method name='length' fullname='flare.utils:Vector3DUtils/length' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Calculates the length between two vectors.

		 ]]></description>
<param><![CDATA[a First vector to be tested.

		 ]]></param>
<param><![CDATA[b Second vector to be tested.

		 ]]></param>
<return><![CDATA[Distance between vectors 'a' and 'b'.

		 ]]></return>
</method>
<method name='max' fullname='flare.utils:Vector3DUtils/max' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
</method>
<method name='min' fullname='flare.utils:Vector3DUtils/min' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
</method>
<method name='mirror' fullname='flare.utils:Vector3DUtils/mirror' isStatic='true' isFinal='false' isOverride='false'  param_names='vector;normal;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the vector mirrored with respect to another.

		 ]]></description>
<param><![CDATA[vector Source vector that is to be mirrored.

		 ]]></param>
<param><![CDATA[normal Plane normal on which the source vector is to be mirrored.

		 ]]></param>
<param><![CDATA[out Vector where the result is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the result will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='negate' fullname='flare.utils:Vector3DUtils/negate' isStatic='true' isFinal='false' isOverride='false'  param_names='a;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Calculates the inverse vector of another vector.

		 ]]></description>
<param><![CDATA[a Vector to be tested.

		 ]]></param>
<param><![CDATA[out Vector where the result is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the result will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='random' fullname='flare.utils:Vector3DUtils/random' isStatic='true' isFinal='false' isOverride='false'  param_names='min;max;out' param_types='Number;Number;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Fills a vector with random numbers in a defined range.

		 ]]></description>
<param><![CDATA[min Minimum number that values can hold.

		 ]]></param>
<param><![CDATA[max Maximum number that values can hold.

		 ]]></param>
<param><![CDATA[out Vector where the result is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the result will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='setLength' fullname='flare.utils:Vector3DUtils/setLength' isStatic='true' isFinal='false' isOverride='false'  param_names='a;length' param_types='flash.geom:Vector3D;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Sets a scale for a vector.

		 ]]></description>
<param><![CDATA[a Vector whose scale is to be set.

		 ]]></param>
<param><![CDATA[length Scale to be set.

		 ]]></param>
</method>
<method name='sub' fullname='flare.utils:Vector3DUtils/sub' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Calculates the subtraction of two vectors.

		 ]]></description>
<param><![CDATA[a First vector.

		 ]]></param>
<param><![CDATA[b Second vector.

		 ]]></param>
<param><![CDATA[out Vector3D-type object where the result is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the result will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='set' fullname='flare.utils:Vector3DUtils/set' isStatic='true' isFinal='false' isOverride='false'  param_names='a;x;y;z;w' param_types='flash.geom:Vector3D;Number;Number;Number;Number' param_defaults='undefined;0;0;0;0' result_type='void'>
<description><![CDATA[

		 Sets the values for a vector.

		 ]]></description>
<param><![CDATA[a Vector to be set.

		 ]]></param>
<param><![CDATA[x X component of the vector.

		 ]]></param>
<param><![CDATA[y Y component of the vector.

		 ]]></param>
<param><![CDATA[z Z component fo the vector.

		 ]]></param>
</method>
<field name='BACK' fullname='flare.utils:Vector3DUtils/BACK' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (0,0,-1) constant.

		 ]]></description>
</field>
<field name='DOWN' fullname='flare.utils:Vector3DUtils/DOWN' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (0,-1,0) constant.

		 ]]></description>
</field>
<field name='FORWARD' fullname='flare.utils:Vector3DUtils/FORWARD' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (0,0,1) constant.

		 ]]></description>
</field>
<field name='LEFT' fullname='flare.utils:Vector3DUtils/LEFT' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (-1,0,0) constant.

		 ]]></description>
</field>
<field name='ONE' fullname='flare.utils:Vector3DUtils/ONE' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (1,1,1) constant.

		 ]]></description>
</field>
<field name='RIGHT' fullname='flare.utils:Vector3DUtils/RIGHT' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (1,0,0) constant.

		 ]]></description>
</field>
<field name='UP' fullname='flare.utils:Vector3DUtils/UP' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (0,1,0) constant.

		 ]]></description>
</field>
<field name='ZERO' fullname='flare.utils:Vector3DUtils/ZERO' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Vector that defines the (0,0,0) constant.

		 ]]></description>
</field>
<classRec name='Matrix3DUtils' fullname='flare.utils:Matrix3DUtils' sourcefile='Z:\projects\flare3d 2.5\src\flare\utils\Matrix3DUtils.as' namespace='flare.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Matrix3DUtils class contains help tools to work with Matrix3D-type objects.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='deltaTransformVector' fullname='flare.utils:Matrix3DUtils/deltaTransformVector' isStatic='true' isFinal='false' isOverride='false'  param_names='m;vector;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Transforms a given point multiplying it by a matrix, but without considering translation.

		 ]]></description>
<param><![CDATA[m Matrix that will be used to transform the point.

		 ]]></param>
<param><![CDATA[v Vector3D that represents the point to be transformed.

		 ]]></param>
<param><![CDATA[out Vector3D where the transformed point is to be returned.

		 ]]></param>
</method>
<method name='equal' fullname='flare.utils:Matrix3DUtils/equal' isStatic='true' isFinal='false' isOverride='false'  param_names='a;b' param_types='flash.geom:Matrix3D;flash.geom:Matrix3D' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns 'true' if 'a' and 'b' matrices are equal.

		 ]]></description>
<param><![CDATA[a First matrix to be compared.

		 ]]></param>
<param><![CDATA[b Second matrix to be compared.

		 ]]></param>
<return><![CDATA['true' if they are equal.

		 ]]></return>
</method>
<method name='getBackward' fullname='flare.utils:Matrix3DUtils/getBackward' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector pointing to the back side of the matrix.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the direction of the right vector of the matrix is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the direccion will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getDir' fullname='flare.utils:Matrix3DUtils/getDir' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the dirección vector pointing to the front side of the matrix.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the direction of the front vector of the matrix is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the direction will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getDown' fullname='flare.utils:Matrix3DUtils/getDown' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the dirección vector pointing to the bottom side of the matrix.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the direction of the front vector of the matrix is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the direction will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getLeft' fullname='flare.utils:Matrix3DUtils/getLeft' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the dirección vector pointing to the left side of the matrix.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the direction of the front vector of the matrix is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the direction will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getPosition' fullname='flare.utils:Matrix3DUtils/getPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns a matrix position.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the matrix position is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' is 'null', a new Vector3D with the position will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getRight' fullname='flare.utils:Matrix3DUtils/getRight' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector pointing to the right side of the matrix.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the direction of the right vector of the matrix is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the direccion will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getRotation' fullname='flare.utils:Matrix3DUtils/getRotation' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the current rotation of the object in euler angles.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the matrix rotation is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the rotation will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getScale' fullname='flare.utils:Matrix3DUtils/getScale' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns a matrix scale.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the matrix scale is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new vector3D with the scale will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='getUp' fullname='flare.utils:Matrix3DUtils/getUp' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector pointing to the upper side of the matrix.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the direction of the upper vector of the matrix is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' parameter is 'null', a new Vector3D with the direction will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='interpolateTo' fullname='flare.utils:Matrix3DUtils/interpolateTo' isStatic='true' isFinal='false' isOverride='false'  param_names='src;dest;percent' param_types='flash.geom:Matrix3D;flash.geom:Matrix3D;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='invert' fullname='flare.utils:Matrix3DUtils/invert' isStatic='true' isFinal='false' isOverride='false'  param_names='m;out' param_types='flash.geom:Matrix3D;flash.geom:Matrix3D' param_defaults='undefined;null' result_type='flash.geom:Matrix3D'>
<description><![CDATA[

		 Inverts a matrix3D.

		 ]]></description>
<param><![CDATA[m Matrix to be inverted.

		 ]]></param>
<param><![CDATA[out Matrix where the inverted matrix is returned.

		 ]]></param>
<return><![CDATA[If the 'out' is 'null', a new matrix will be returned. Otherwise, the same matrix, passed to the 'out' parameter, will be returned.

		 ]]></return>
</method>
<method name='lookAt' fullname='flare.utils:Matrix3DUtils/lookAt' isStatic='true' isFinal='false' isOverride='false'  param_names='m;x;y;z;up;smooth' param_types='flash.geom:Matrix3D;Number;Number;Number;flash.geom:Vector3D;Number' param_defaults='undefined;undefined;undefined;undefined;null;1' result_type='void'>
<description><![CDATA[

		 Directs the object towards the specified position. Coordinates are related to the local space of the object.

		 ]]></description>
<param><![CDATA[m Marix to be tested.

		 ]]></param>
<param><![CDATA[x Position on x

		 ]]></param>
<param><![CDATA[y Position on Y

		 ]]></param>
<param><![CDATA[z Position on z

		 ]]></param>
<param><![CDATA[up Vector3D related to the direction of the upper side of the object. The default value is (0, 1, 0). 

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value towards final transformation (0-1).

		 ]]></param>
</method>
<method name='resetPosition' fullname='flare.utils:Matrix3DUtils/resetPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='m' param_types='flash.geom:Matrix3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Resets the matrix position. The position is to be set to (0,0,0).

		 ]]></description>
<param><![CDATA[m Matrix whose position is to be reset.

		 ]]></param>
</method>
<method name='resetRotation' fullname='flare.utils:Matrix3DUtils/resetRotation' isStatic='true' isFinal='false' isOverride='false'  param_names='m' param_types='flash.geom:Matrix3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Resets the matrix rotation. The rotation is to be set to (0,0,0).

		 ]]></description>
<param><![CDATA[m Matrix whose rotation is to be reset.

		 ]]></param>
</method>
<method name='resetScale' fullname='flare.utils:Matrix3DUtils/resetScale' isStatic='true' isFinal='false' isOverride='false'  param_names='m' param_types='flash.geom:Matrix3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Resets a matrix scale. The scale is to be set to (1,1,1).

		 ]]></description>
<param><![CDATA[m Matrix whose scale is to be reset.

		 ]]></param>
</method>
<method name='rotateAxis' fullname='flare.utils:Matrix3DUtils/rotateAxis' isStatic='true' isFinal='false' isOverride='false'  param_names='m;angle;axis;pivotPoint' param_types='flash.geom:Matrix3D;Number;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[

		 Rotates the object on the specified axis from its current position.              

		 The pivotPoint parameter can be used to rotate around a point.

		 ]]></description>
<param><![CDATA[m Source Matrix3D.

		 ]]></param>
<param><![CDATA[angle Angles to be rotated.     

		 ]]></param>
<param><![CDATA[axis Direction vector or axis on which to rotate.          

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.                

		 ]]></param>
</method>
<method name='rotateX' fullname='flare.utils:Matrix3DUtils/rotateX' isStatic='true' isFinal='false' isOverride='false'  param_names='m;angle;local;pivotPoint' param_types='flash.geom:Matrix3D;Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;undefined;true;null' result_type='void'>
<description><![CDATA[

		 Rotates the matrix on the X axis from its current position.

		 The pivotPoint parameter can be used to rotate around a point.

		 ]]></description>
<param><![CDATA[m Source Matrix3D.

		 ]]></param>
<param><![CDATA[angle Angles to be rotated.     

		 ]]></param>
<param><![CDATA[local true to rotate respecting current orientation, or false to rotate according to orientation relative to parent. 

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.                

		 ]]></param>
</method>
<method name='rotateY' fullname='flare.utils:Matrix3DUtils/rotateY' isStatic='true' isFinal='false' isOverride='false'  param_names='m;angle;local;pivotPoint' param_types='flash.geom:Matrix3D;Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;undefined;true;null' result_type='void'>
<description><![CDATA[

		 Rotates the matrix on the Y axis from its current position.

		 The pivotPoint parameter can be used to rotate around a point.

		 ]]></description>
<param><![CDATA[m Source Matrix3D.

		 ]]></param>
<param><![CDATA[angle Angles to be rotated.     

		 ]]></param>
<param><![CDATA[local true to rotate respecting current orientation, or false to rotate according to orientation relative to parent. 

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.                

		 ]]></param>
</method>
<method name='rotateZ' fullname='flare.utils:Matrix3DUtils/rotateZ' isStatic='true' isFinal='false' isOverride='false'  param_names='m;angle;local;pivotPoint' param_types='flash.geom:Matrix3D;Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;undefined;true;null' result_type='void'>
<description><![CDATA[

		 Rotates the matrix on the Z axis from its current position.

		 The pivotPoint parameter can be used to rotate around a point.

		 ]]></description>
<param><![CDATA[m Source Matrix3D.

		 ]]></param>
<param><![CDATA[angle Angles to be rotated.     

		 ]]></param>
<param><![CDATA[local true to rotate respecting current orientation, or false to rotate according to orientation relative to parent. 

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.                

		 ]]></param>
</method>
<method name='scaleX' fullname='flare.utils:Matrix3DUtils/scaleX' isStatic='true' isFinal='false' isOverride='false'  param_names='m;scale' param_types='flash.geom:Matrix3D;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Increases or decreases the matrix scale on the X axis.

		 Use a value greater than one to increase or less than one to decrease.

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half of their original size.

		 ]]></description>
<param><![CDATA[m Soruce Matrix3D object.

		 ]]></param>
<param><![CDATA[scale Scale value.

		 ]]></param>
</method>
<method name='scaleY' fullname='flare.utils:Matrix3DUtils/scaleY' isStatic='true' isFinal='false' isOverride='false'  param_names='m;scale' param_types='flash.geom:Matrix3D;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Increases or decreases the matrix scale on the Y axis.

		 Use a value greater than one to increase or less than one to decrease.

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half of their original size.

		 ]]></description>
<param><![CDATA[m Soruce Matrix3D object.

		 ]]></param>
<param><![CDATA[scale Scale value.

		 ]]></param>
</method>
<method name='scaleZ' fullname='flare.utils:Matrix3DUtils/scaleZ' isStatic='true' isFinal='false' isOverride='false'  param_names='m;scale' param_types='flash.geom:Matrix3D;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Increases or decreases the matrix scale on the Z axis.

		 Use a value greater than one to increase or less than one to decrease.

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half of their original size.

		 ]]></description>
<param><![CDATA[m Soruce Matrix3D object.

		 ]]></param>
<param><![CDATA[scale Scale value.

		 ]]></param>
</method>
<method name='setNormalOrientation' fullname='flare.utils:Matrix3DUtils/setNormalOrientation' isStatic='true' isFinal='false' isOverride='false'  param_names='m;normal;smooth' param_types='flash.geom:Matrix3D;flash.geom:Vector3D;Number' param_defaults='undefined;undefined;1' result_type='void'>
<description><![CDATA[

		 Aligns the object to a normal.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[normal Normal used for alignment.                    

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value (0-1).

		 ]]></param>
</method>
<method name='setOrientation' fullname='flare.utils:Matrix3DUtils/setOrientation' isStatic='true' isFinal='false' isOverride='false'  param_names='m;dir;up;smooth' param_types='flash.geom:Matrix3D;flash.geom:Vector3D;flash.geom:Vector3D;Number' param_defaults='undefined;undefined;null;1' result_type='void'>
<description><![CDATA[

		 Orients the object in a specific direction.  

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[dir Direction set for orientation.       

		 ]]></param>
<param><![CDATA[up Upper side of the object. The default value is (0,1,0).

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value (0-1).

		 ]]></param>
</method>
<method name='setPosition' fullname='flare.utils:Matrix3DUtils/setPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='m;x;y;z;smooth' param_types='flash.geom:Matrix3D;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;1' result_type='void'>
<description><![CDATA[

		 Returns a matrix position.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[out Output vector3D where the matrix position is to be returned.

		 ]]></param>
<return><![CDATA[If the 'out' is 'null', a new Vector3D with the position will be returned. Otherwise, the same vector passed to the 'out' parameter will be returned.

		 ]]></return>
</method>
<method name='setRotation' fullname='flare.utils:Matrix3DUtils/setRotation' isStatic='true' isFinal='false' isOverride='false'  param_names='m;x;y;z' param_types='flash.geom:Matrix3D;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Rotates a matrix using euler angles. Rotation is absolute; therefore, any previous rotation is to be omitted.

		 ]]></description>
<param><![CDATA[m Matrix to be rotated.

		 ]]></param>
<param><![CDATA[x Rotation on X axis in angles.

		 ]]></param>
<param><![CDATA[y Rotation on Y axis in angles.

		 ]]></param>
<param><![CDATA[z Rotation on Z axis in angles.

		 ]]></param>
</method>
<method name='setScale' fullname='flare.utils:Matrix3DUtils/setScale' isStatic='true' isFinal='false' isOverride='false'  param_names='m;x;y;z;smooth' param_types='flash.geom:Matrix3D;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;1' result_type='void'>
<description><![CDATA[

		 Sets the object scale. This method sets the scale in an absolute manner; therefore, any previous scale will be ignored.              

		 Default value is 1, use a value greater than one to increase or less than 1 to decrease the scale. 

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half of their original size.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[x Scale on x

		 ]]></param>
<param><![CDATA[y Scale on y

		 ]]></param>
<param><![CDATA[z Scale on z

		 ]]></param>
</method>
<method name='setTranslation' fullname='flare.utils:Matrix3DUtils/setTranslation' isStatic='true' isFinal='false' isOverride='false'  param_names='m;x;y;z;local' param_types='flash.geom:Matrix3D;Number;Number;Number;Boolean' param_defaults='undefined;0;0;0;true' result_type='void'>
<description><![CDATA[

		 Translates the object from its current position to the specified distance.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[x Distance in units to translate on X axis.         

		 ]]></param>
<param><![CDATA[y Distance in units to translate on Y axis.            

		 ]]></param>
<param><![CDATA[z Distance in units to translate on Z axis.            

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation or false to translate on the coordinates relative to the parent.         

		 ]]></param>
<see><![CDATA[#translateX()

		 ]]></see>
<see><![CDATA[#translateY()

		 ]]></see>
<see><![CDATA[#translateZ()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<method name='setVectors' fullname='flare.utils:Matrix3DUtils/private:setVectors' isStatic='true' isFinal='false' isOverride='false'  param_names='m;right;up;dir' param_types='flash.geom:Matrix3D;flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Construct a matrix using vectors.

		 ]]></description>
<param><![CDATA[m Matrix to construct.

		 ]]></param>
<param><![CDATA[right Right vector.

		 ]]></param>
<param><![CDATA[up Up vector.

		 ]]></param>
<param><![CDATA[dir Dir vector.

		 ]]></param>
</method>
<method name='transformVector' fullname='flare.utils:Matrix3DUtils/transformVector' isStatic='true' isFinal='false' isOverride='false'  param_names='m;vector;out' param_types='flash.geom:Matrix3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Transforms a given point multiplying it by a matrix.

		 ]]></description>
<param><![CDATA[m Matrix that will be used to transform the point.

		 ]]></param>
<param><![CDATA[v Vector3D that represents the point to be transformed.

		 ]]></param>
<param><![CDATA[out out Vector3D where the transformed point is to be returned.

		 ]]></param>
</method>
<method name='translateAxis' fullname='flare.utils:Matrix3DUtils/translateAxis' isStatic='true' isFinal='false' isOverride='false'  param_names='m;distance;axis' param_types='flash.geom:Matrix3D;Number;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Translates the object on a certain axis from its current position.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[distance Distance to translate. 

		 ]]></param>
<param><![CDATA[axis Direction vector or axis on which to translate.                     

		 ]]></param>
<see><![CDATA[#translateX()

		 ]]></see>
<see><![CDATA[#translateY()

		 ]]></see>
<see><![CDATA[#translateZ()

		 ]]></see>
<see><![CDATA[#setTranslation()

		 ]]></see>
</method>
<method name='translateX' fullname='flare.utils:Matrix3DUtils/translateX' isStatic='true' isFinal='false' isOverride='false'  param_names='m;distance;local' param_types='flash.geom:Matrix3D;Number;Boolean' param_defaults='undefined;undefined;true' result_type='void'>
<description><![CDATA[

		 Translates the object on the X axis from its current position.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[distance Distance to translate.          

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation, or false to translate on the coordinates relative to parent.         

		 ]]></param>
<see><![CDATA[#setTranslation()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<method name='translateY' fullname='flare.utils:Matrix3DUtils/translateY' isStatic='true' isFinal='false' isOverride='false'  param_names='m;distance;local' param_types='flash.geom:Matrix3D;Number;Boolean' param_defaults='undefined;undefined;true' result_type='void'>
<description><![CDATA[

		 Translates the object on the Y axis from its current position.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[distance Distance to translate.          

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation, or false to translate on the coordinates relative to parent.         

		 ]]></param>
<see><![CDATA[#setTranslation()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<method name='translateZ' fullname='flare.utils:Matrix3DUtils/translateZ' isStatic='true' isFinal='false' isOverride='false'  param_names='m;distance;local' param_types='flash.geom:Matrix3D;Number;Boolean' param_defaults='undefined;undefined;true' result_type='void'>
<description><![CDATA[

		 Translates the object on the Z axis from its current position.

		 ]]></description>
<param><![CDATA[m Matrix to be tested.

		 ]]></param>
<param><![CDATA[distance Distance to translate.          

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation, or false to translate on the coordinates relative to parent.         

		 ]]></param>
<see><![CDATA[#setTranslation()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<field name='_dir' fullname='flare.utils:Matrix3DUtils/private:_dir' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_pos' fullname='flare.utils:Matrix3DUtils/private:_pos' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_right' fullname='flare.utils:Matrix3DUtils/private:_right' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_scale' fullname='flare.utils:Matrix3DUtils/private:_scale' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_toAng' fullname='flare.utils:Matrix3DUtils/private:_toAng' type='Number' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_toRad' fullname='flare.utils:Matrix3DUtils/private:_toRad' type='Number' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_up' fullname='flare.utils:Matrix3DUtils/private:_up' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_vector' fullname='flare.utils:Matrix3DUtils/private:_vector' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_x' fullname='flare.utils:Matrix3DUtils/private:_x' type='Number' isStatic='true' isConst='false' >
</field>
<field name='_y' fullname='flare.utils:Matrix3DUtils/private:_y' type='Number' isStatic='true' isConst='false' >
</field>
<field name='_z' fullname='flare.utils:Matrix3DUtils/private:_z' type='Number' isStatic='true' isConst='false' >
</field>
<classRec name='Texture3DUtils' fullname='flare.utils:Texture3DUtils' sourcefile='Z:\projects\flare3d 2.5\src\flare\utils\Texture3DUtils.as' namespace='flare.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Texture3DUtils class contains help tools to work with Texture3D or BitmapData-type objects.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='extractCubeMap' fullname='flare.utils:Texture3DUtils/extractCubeMap' isStatic='true' isFinal='false' isOverride='false'  param_names='bitmapData' param_types='flash.display:BitmapData' param_defaults='undefined' result_type='Array'>
</method>
<method name='toNormalMap' fullname='flare.utils:Texture3DUtils/toNormalMap' isStatic='true' isFinal='false' isOverride='false'  param_names='bitmapData;x;y' param_types='flash.display:BitmapData;Number;Number' param_defaults='undefined;1;1' result_type='flash.display:BitmapData'>
</method>
<field name='NormalMap' fullname='flare.utils:Texture3DUtils/private:NormalMap' type='Class' isStatic='true' isConst='false' >
</field>
<field name='filter' fullname='flare.utils:Texture3DUtils/private:filter' type='flash.filters:ShaderFilter' isStatic='true' isConst='false' >
</field>
<field name='normalMapData' fullname='flare.utils:Texture3DUtils/private:normalMapData' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='shader' fullname='flare.utils:Texture3DUtils/private:shader' type='flash.display:Shader' isStatic='true' isConst='false' >
</field>
<classRec name='Surface3DUtils' fullname='flare.utils:Surface3DUtils' sourcefile='Z:\projects\flare3d 2.5\src\flare\utils\Surface3DUtils.as' namespace='flare.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Surface3DUtils class contains help tools to work with Surface3D-type objects.

	 

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='buildPolys' fullname='flare.utils:Surface3DUtils/buildPolys' isStatic='true' isFinal='false' isOverride='false'  param_names='surface;force' param_types='flare.core:Surface3D;Boolean' param_defaults='undefined;false' result_type='Vector$flare.core:Poly3D'>
</method>
<method name='buildTangentsAndBitangents' fullname='flare.utils:Surface3DUtils/buildTangentsAndBitangents' isStatic='true' isFinal='false' isOverride='false'  param_names='surface' param_types='flare.core:Surface3D' param_defaults='undefined' result_type='void'>
</method>
<method name='compress' fullname='flare.utils:Surface3DUtils/compress' isStatic='true' isFinal='false' isOverride='false'  param_names='surf;vertex;indices' param_types='flare.core:Surface3D;Vector$Number;Vector$uint' param_defaults='undefined;null;null' result_type='void'>
</method>
<method name='concat' fullname='flare.utils:Surface3DUtils/concat' isStatic='true' isFinal='false' isOverride='false'  param_names='source;dest' param_types='flare.core:Surface3D;flare.core:Surface3D' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='flipNormals' fullname='flare.utils:Surface3DUtils/flipNormals' isStatic='true' isFinal='false' isOverride='false'  param_names='surface' param_types='flare.core:Surface3D' param_defaults='undefined' result_type='void'>
</method>
<method name='transform' fullname='flare.utils:Surface3DUtils/transform' isStatic='true' isFinal='false' isOverride='false'  param_names='surface;matrix;firstIndex;numTriangles' param_types='flare.core:Surface3D;flash.geom:Matrix3D;int;int' param_defaults='undefined;undefined;-1;-1' result_type='void'>
</method>
<classRec name='Mesh3DUtils' fullname='flare.utils:Mesh3DUtils' sourcefile='Z:\projects\flare3d 2.5\src\flare\utils\Mesh3DUtils.as' namespace='flare.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Mesh3DUtils class contains help tools to work with Mesh3D-type objects.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='cloneMaterialsAux' fullname='flare.utils:Mesh3DUtils/private:cloneMaterialsAux' isStatic='true' isFinal='false' isOverride='false'  param_names='mesh' param_types='flare.core:Mesh3D' param_defaults='undefined' result_type='void'>
</method>
<method name='cloneMaterials' fullname='flare.utils:Mesh3DUtils/cloneMaterials' isStatic='true' isFinal='false' isOverride='false'  param_names='pivot' param_types='flare.core:Pivot3D' param_defaults='undefined' result_type='void'>
</method>
<method name='merge' fullname='flare.utils:Mesh3DUtils/merge' isStatic='true' isFinal='false' isOverride='false'  param_names='vector;removeOiriginal;material;includeChildren' param_types='Vector$flare.core:Pivot3D;Boolean;flare.materials:Material3D;Boolean' param_defaults='undefined;true;null;false' result_type='flare.core:Mesh3D'>
</method>
<method name='split' fullname='flare.utils:Mesh3DUtils/split' isStatic='true' isFinal='false' isOverride='false'  param_names='mesh' param_types='flare.core:Mesh3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Split the surfaces of the mesh if they exceds the limit of the buffer size.

		 ]]></description>
<param><![CDATA[mesh The mess to be splited.

		 ]]></param>
</method>
<classRec name='Pivot3DUtils' fullname='flare.utils:Pivot3DUtils' sourcefile='Z:\projects\flare3d 2.5\src\flare\utils\Pivot3DUtils.as' namespace='flare.utils' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Pivot3DUtils class contains help tools to work with Pivot3D-type objects.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='abs' fullname='flare.utils:Pivot3DUtils/private:abs' isStatic='true' isFinal='false' isOverride='false'  param_names='a' param_types='flash.geom:Vector3D' param_defaults='undefined' result_type='void'>
</method>
<method name='appendAnimationAux' fullname='flare.utils:Pivot3DUtils/private:appendAnimationAux' isStatic='true' isFinal='false' isOverride='false'  param_names='dest;animation;label;from;length;includeMaterials' param_types='flare.core:Pivot3D;flare.core:Pivot3D;flare.core:Label3D;int;int;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined;false' result_type='void'>
</method>
<method name='appendAnimation' fullname='flare.utils:Pivot3DUtils/appendAnimation' isStatic='true' isFinal='false' isOverride='false'  param_names='dest;animation;label;includeMaterials' param_types='flare.core:Pivot3D;flare.core:Pivot3D;String;Boolean' param_defaults='undefined;undefined;null;false' result_type='void'>
<description><![CDATA[

		 Add animation frames and labels to source pivot from another pivot, including children.

		 <p>The pivot names and hierarchy must be the same.</p>

		 ]]></description>
<param><![CDATA[dest Pivot who want to append the animations.

		 ]]></param>
<param><![CDATA[animation The pivot that contains the animations to add to dest pivot.

		 ]]></param>
<param><![CDATA[label Optionally, you can set a new label name to define the appened animation.

		 ]]></param>
<param><![CDATA[includeMaterials If materials has animated parameters, they will be append.

		 ]]></param>
</method>
<method name='appendMaterials' fullname='flare.utils:Pivot3DUtils/private:appendMaterials' isStatic='true' isFinal='false' isOverride='false'  param_names='source;dest;from;length' param_types='flare.core:Mesh3D;flare.core:Mesh3D;int;int' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='getAnimationLength' fullname='flare.utils:Pivot3DUtils/private:getAnimationLength' isStatic='true' isFinal='false' isOverride='false'  param_names='animation;length' param_types='flare.core:Pivot3D;int' param_defaults='undefined;0' result_type='int'>
</method>
<method name='getBounds' fullname='flare.utils:Pivot3DUtils/getBounds' isStatic='true' isFinal='false' isOverride='false'  param_names='pivot;out;relativeTo;includeChildren' param_types='flare.core:Pivot3D;flare.core:Boundings3D;flare.core:Pivot3D;Boolean' param_defaults='undefined;null;null;true' result_type='flare.core:Boundings3D'>
</method>
<method name='getChildByNameAux' fullname='flare.utils:Pivot3DUtils/private:getChildByNameAux' isStatic='true' isFinal='false' isOverride='false'  param_names='source;name' param_types='flare.core:Pivot3D;String' param_defaults='undefined;undefined' result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 Returns the first child or bone that matches the specified name.

		 ]]></description>
</method>
<method name='getDistance' fullname='flare.utils:Pivot3DUtils/getDistance' isStatic='true' isFinal='false' isOverride='false'  param_names='pivot1;pivot2' param_types='flare.core:Pivot3D;flare.core:Pivot3D' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Returns the distance between two objects. This method uses the global space of the scene.

		 ]]></description>
<param><![CDATA[pivot1 First object to be tested.

		 ]]></param>
<param><![CDATA[pivot2 Second object to be tested.

		 ]]></param>
<return><![CDATA[Distance between the two objects.

		 ]]></return>
</method>
<method name='growBounds' fullname='flare.utils:Pivot3DUtils/private:growBounds' isStatic='true' isFinal='false' isOverride='false'  param_names='parent;pivot;out;includeChildren' param_types='flare.core:Pivot3D;flare.core:Pivot3D;flare.core:Boundings3D;Boolean' param_defaults='undefined;undefined;undefined;true' result_type='void'>
</method>
<method name='lookAtWithReference' fullname='flare.utils:Pivot3DUtils/lookAtWithReference' isStatic='true' isFinal='false' isOverride='false'  param_names='pivot;x;y;z;reference;up;smooth' param_types='flare.core:Pivot3D;Number;Number;Number;flare.core:Pivot3D;flash.geom:Vector3D;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;null;1' result_type='void'>
<description><![CDATA[

		 Points the object direction towards a given position using a reference object. The coordinates used correspond to the local space of the 'reference' parameter.

		 ]]></description>
<param><![CDATA[x Reference object position on the x axis.

		 ]]></param>
<param><![CDATA[y Reference object position on the Y axis.

		 ]]></param>
<param><![CDATA[z Reference object position on the Z axis.

		 ]]></param>
<param><![CDATA[reference Object to be used as referente for "x", "y" and "z" parameters.

		 ]]></param>
<param><![CDATA[up Vector3D corresponding to the direction of the object upper side. If omitted, the default value (0, 1, 0) will be used.

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value towards final transformation (0-1).

		 ]]></param>
<see><![CDATA[../core/Pivot3D.html#lookAt() flare.core.Pivot3D.lookAt()

		 ]]></see>
<see><![CDATA[#lookAt()

		 ]]></see>
</method>
<method name='normalizeFrames' fullname='flare.utils:Pivot3DUtils/private:normalizeFrames' isStatic='true' isFinal='false' isOverride='false'  param_names='source;length' param_types='flare.core:Pivot3D;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='normalizeSkinFrames' fullname='flare.utils:Pivot3DUtils/private:normalizeSkinFrames' isStatic='true' isFinal='false' isOverride='false'  param_names='source;length' param_types='flare.core:Pivot3D;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setPositionWithReference' fullname='flare.utils:Pivot3DUtils/setPositionWithReference' isStatic='true' isFinal='false' isOverride='false'  param_names='pivot;x;y;z;reference;smooth' param_types='flare.core:Pivot3D;Number;Number;Number;flare.core:Pivot3D;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;1' result_type='void'>
<description><![CDATA[

		 Positions an object using another as reference.

		 ]]></description>
<param><![CDATA[pivot Object to be positioned.

		 ]]></param>
<param><![CDATA[x Reference object position on the X axis.

		 ]]></param>
<param><![CDATA[y Reference object position on the Y axis.

		 ]]></param>
<param><![CDATA[z Reference object position on the Z axis.

		 ]]></param>
<param><![CDATA[reference Object to be used as reference.

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value towards final transformation (0-1).

		 ]]></param>
</method>
<method name='traceChild' fullname='flare.utils:Pivot3DUtils/private:traceChild' isStatic='true' isFinal='false' isOverride='false'  param_names='pivot;level;includeMaterials;includeChildren' param_types='flare.core:Pivot3D;int;Boolean;Boolean' param_defaults='undefined;0;true;true' result_type='void'>
</method>
<method name='traceInfo' fullname='flare.utils:Pivot3DUtils/traceInfo' isStatic='true' isFinal='false' isOverride='false'  param_names='pivot;includeMaterials;includeChildren' param_types='flare.core:Pivot3D;Boolean;Boolean' param_defaults='undefined;false;true' result_type='void'>
<description><![CDATA[

		 Returns information about an object and its properties at the Flash output.

		 ]]></description>
<param><![CDATA[pivot Object to be tested.

		 ]]></param>
<param><![CDATA[includeMaterials 'true' if information about the materials is to be included.

		 ]]></param>
<param><![CDATA[includeChildren 'true' if all the hierarchy is to be included.

		 ]]></param>
</method>
<field name='_added' fullname='flare.utils:Pivot3DUtils/private:_added' type='flash.utils:Dictionary' isStatic='true' isConst='false' >
</field>
<field name='_bounds' fullname='flare.utils:Pivot3DUtils/private:_bounds' type='Boolean' isStatic='true' isConst='false' >
</field>
<field name='_center' fullname='flare.utils:Pivot3DUtils/private:_center' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_length' fullname='flare.utils:Pivot3DUtils/private:_length' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_md' fullname='flare.utils:Pivot3DUtils/private:_md' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_mr' fullname='flare.utils:Pivot3DUtils/private:_mr' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_mu' fullname='flare.utils:Pivot3DUtils/private:_mu' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_tmp' fullname='flare.utils:Pivot3DUtils/private:_tmp' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_transform' fullname='flare.utils:Pivot3DUtils/private:_transform' type='flash.geom:Matrix3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='Spline3D' fullname='flare.core:Spline3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Spline3D.as' namespace='flare.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Spline3D class represents a 3d spline.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Spline3D' fullname='flare.core:Spline3D/Spline3D' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Creates a new spline.

		 ]]></description>
</method>
<method name='clone' fullname='flare.core:Spline3D/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Spline3D'>
<description><![CDATA[

		 Creates a copy of the spline.

		 ]]></description>
<return><![CDATA[The new copy of the spline. 

		 ]]></return>
</method>
<method name='getPoint' fullname='flare.core:Spline3D/getPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='value;out' param_types='Number;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the position on the spline depending on the “value” parameter.

		 ]]></description>
<param><![CDATA[value 0 to 1 value that represents the position in time on the spline. 

		 ]]></param>
<param><![CDATA[out Vector where the position will be returned.

		 ]]></param>
<return><![CDATA[If an 'out' value has been specified, the same object is returned. Otherwise, a new vector with the position is returned.

		 ]]></return>
</method>
<method name='getSegmentPoint' fullname='flare.core:Spline3D/private:getSegmentPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='k0;k1;value;out' param_types='flare.core:Knot3D;flare.core:Knot3D;Number;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<method name='getSetgmentTangent' fullname='flare.core:Spline3D/private:getSetgmentTangent' isStatic='false' isFinal='false' isOverride='false'  param_names='k0;k1;value;out' param_types='flare.core:Knot3D;flare.core:Knot3D;Number;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='getTangent' fullname='flare.core:Spline3D/getTangent' isStatic='false' isFinal='false' isOverride='false'  param_names='value;out' param_types='Number;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction on the spline in a given position.    

		 ]]></description>
<param><![CDATA[value 0 to 1 value that represents the position in time on the spline.

		 ]]></param>
<param><![CDATA[out Vector where the direction will be returned.

		 ]]></param>
<return><![CDATA[If an 'out' value has been specified, the same object is returned. Otherwise, a new vector with the position is returned.

		 ]]></return>
</method>
<method name='toString' fullname='flare.core:Spline3D/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='closed' fullname='flare.core:Spline3D/closed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns or sets whether this is a closed spline. In that case, the last Knot3D will be joined to the first. 

		 ]]></description>
</method>
<method name='closed' fullname='flare.core:Spline3D/closed/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_closed' fullname='flare.core:Spline3D/private:_closed' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_count' fullname='flare.core:Spline3D/private:_count' type='int' isStatic='false' isConst='false' >
</field>
<field name='_dir' fullname='flare.core:Spline3D/private:_dir' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_pos' fullname='flare.core:Spline3D/private:_pos' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='knots' fullname='flare.core:Spline3D/knots' type='Vector$flare.core:Knot3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Knot3D-type vector with the spline knots.                    

		 ]]></description>
</field>
<interfaceRec name='IComponent' fullname='flare.core:IComponent' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\IComponent.as' namespace='flare.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ...

	 ]]></description>
<author><![CDATA[

	 ]]></author>
</interfaceRec>
<method name='added' fullname='flare.core:IComponent/flare.core:IComponent:added' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='flare.core:Pivot3D' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='removed' fullname='flare.core:IComponent/flare.core:IComponent:removed' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<classRec name='Poly3D' fullname='flare.core:Poly3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Poly3D.as' namespace='flare.core' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
<private><![CDATA[]]></private>
</classRec>
<method name='Poly3D' fullname='flare.core:Poly3D/Poly3D' isStatic='false' isFinal='false' isOverride='false'  param_names='v0;v1;v2;uv0;uv1;uv2' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Point;flash.geom:Point;flash.geom:Point' param_defaults='undefined;undefined;undefined;null;null;null' result_type='*'>
</method>
<method name='closetPointOnLine' fullname='flare.core:Poly3D/private:closetPointOnLine' isStatic='false' isFinal='false' isOverride='false'  param_names='a;b;p;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='closetPoint' fullname='flare.core:Poly3D/closetPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='p;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Returns the closest point belonging to the polygon of the point given by the 'p' parameter.

		 ]]></description>
<param><![CDATA[p Point to be tested.              

		 ]]></param>
<param><![CDATA[out Point belonging to the polygon that is closest to the 'p' parameter.

		 ]]></param>
</method>
<method name='getPointU' fullname='flare.core:Poly3D/getPointU' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the coordinate on the polygon horizontal axis of the last call to getPoint.

		 ]]></description>
<return><![CDATA[The polygon horizontal coordinate.   

		 ]]></return>
<see><![CDATA[#getPoint()

		 ]]></see>
</method>
<method name='getPointV' fullname='flare.core:Poly3D/getPointV' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the coordinate on the polygon vertical axis of the last call to getPoint.

		 ]]></description>
<return><![CDATA[The polygon vertical coordinate.   

		 ]]></return>
<see><![CDATA[#getPoint()

		 ]]></see>
</method>
<method name='isPoint' fullname='flare.core:Poly3D/isPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='update' fullname='flare.core:Poly3D/update' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='Rab' fullname='flare.core:Poly3D/private:Rab' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='Rbc' fullname='flare.core:Poly3D/private:Rbc' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='Rca' fullname='flare.core:Poly3D/private:Rca' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='V' fullname='flare.core:Poly3D/private:V' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_alpha' fullname='flare.core:Poly3D/private:_alpha' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_a' fullname='flare.core:Poly3D/private:_a' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_axis' fullname='flare.core:Poly3D/private:_axis' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_beta' fullname='flare.core:Poly3D/private:_beta' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_b' fullname='flare.core:Poly3D/private:_b' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_tu0' fullname='flare.core:Poly3D/private:_tu0' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_tu1' fullname='flare.core:Poly3D/private:_tu1' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_tu2' fullname='flare.core:Poly3D/private:_tu2' type='Number' isStatic='false' isConst='false' >
</field>
<field name='c' fullname='flare.core:Poly3D/private:c' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='normal' fullname='flare.core:Poly3D/normal' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
</field>
<field name='plane' fullname='flare.core:Poly3D/plane' type='Number' isStatic='false' isConst='false' >
</field>
<field name='sub' fullname='flare.core:Poly3D/private:sub' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='uv0' fullname='flare.core:Poly3D/uv0' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='uv1' fullname='flare.core:Poly3D/uv1' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='uv2' fullname='flare.core:Poly3D/uv2' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='v0' fullname='flare.core:Poly3D/v0' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
</field>
<field name='v1' fullname='flare.core:Poly3D/v1' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
</field>
<field name='v2' fullname='flare.core:Poly3D/v2' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
</field>
<interfaceRec name='IDrawable' fullname='flare.core:IDrawable' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\IDrawable.as' namespace='flare.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</interfaceRec>
<method name='draw' fullname='flare.core:IDrawable/flare.core:IDrawable:draw' isStatic='false' isFinal='false' isOverride='false'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
</method>
<method name='inView' fullname='flare.core:IDrawable/flare.core:IDrawable:inView/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns whether the object should be drawn. The property usually uses a Boundings3D-class values and determines whether it is visible or not based on the object radius. Therefore, the returned value is only an approximation. 

		 ]]></description>
</method>
<classRec name='Boundings3D' fullname='flare.core:Boundings3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Boundings3D.as' namespace='flare.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Boundings3D class has the information about Pivot3D-type object dimensions.

	 

	 <p>The values established in this class will not affect objects physically; they are just informative.</p>

	 

	 <p>The values returned are represented in the local space of each object.        

	 To transform them to a global space use localToGlobal or localToGlobalVector of the Pivot3D objects.</p>

	 

	 <p>Although values can be modified, this is not advisable as these properties are often used by the visibility 

	 and collision calculation system, for example.

	 Preferably, create a copy using the clone system and modify that copy.</p>

	 

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Boundings3D' fullname='flare.core:Boundings3D/Boundings3D' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Creates a new Boundings3D object.

		 ]]></description>
</method>
<method name='clone' fullname='flare.core:Boundings3D/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Boundings3D'>
<description><![CDATA[

		 Creates a copy of a Boundings3D object.

		 ]]></description>
<return><![CDATA[Returns a new Boundings3D object.

		 ]]></return>
</method>
<method name='reset' fullname='flare.core:Boundings3D/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Resets the object properties to its default values.    

		 ]]></description>
</method>
<method name='toString' fullname='flare.core:Boundings3D/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='center' fullname='flare.core:Boundings3D/center' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Center of the object. The center does not correspond to (0,0,0) of the object, but it is the calculated center of all the vertices.

		 ]]></description>
</field>
<field name='length' fullname='flare.core:Boundings3D/length' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Lengths of the bounding box of the object. (Maximum corner minus minimum corner).

		 ]]></description>
</field>
<field name='max' fullname='flare.core:Boundings3D/max' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Maximum corner of the bounding box of the object. 

		 ]]></description>
</field>
<field name='min' fullname='flare.core:Boundings3D/min' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Minimum corner of the bounding box of the object.  

		 ]]></description>
</field>
<field name='radius' fullname='flare.core:Boundings3D/radius' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 Radius of the object count from the center of the object (not from the object).

		 ]]></description>
</field>
<classRec name='Label3D' fullname='flare.core:Label3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Label3D.as' namespace='flare.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Label3D class defines labels to be used for 3d object animation.                          

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
<see><![CDATA[flare.core.Pivot3D

	 ]]></see>
<see><![CDATA[../core/Pivot3D.html#labels Pivot3D labels

	 ]]></see>
<see><![CDATA[../core/Pivot3D.html#addLabel() Pivot3D addLabel()

	 ]]></see>
<see><![CDATA[../core/Pivot3D.html#getLabel() Pivot3D getLabel()

	 ]]></see>
<see><![CDATA[../core/Pivot3D.html#playLabel() Pivot3D playLabel()

	 ]]></see>
<see><![CDATA[../core/Pivot3D.html#removeLabel() Pivot3D removeLabel()

	 ]]></see>
</classRec>
<method name='Label3D' fullname='flare.core:Label3D/Label3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name;from;to' param_types='String;int;int' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Creates a new Label3D object.

		 ]]></description>
<param><![CDATA[name Animation name.                     

		 ]]></param>
<param><![CDATA[from Frame where animation begins. The frame number is zero-based.                                 

		 ]]></param>
<param><![CDATA[to Frame where animation ends. The frame number is zero-based.                  

		 ]]></param>
</method>
<method name='toString' fullname='flare.core:Label3D/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<return><![CDATA[]]></return>
</method>
<method name='length' fullname='flare.core:Label3D/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the length of the animation label.

		 ]]></description>
</method>
<field name='from' fullname='flare.core:Label3D/from' type='int' isStatic='false' isConst='false' >
<description><![CDATA[

		 Frame where animation begins. The frame number is zero-based.                       

		 ]]></description>
</field>
<field name='name' fullname='flare.core:Label3D/name' type='String' isStatic='false' isConst='false' >
<description><![CDATA[

		 Name given to the animation.            

		 ]]></description>
</field>
<field name='to' fullname='flare.core:Label3D/to' type='int' isStatic='false' isConst='false' >
<description><![CDATA[

		 Frame where animation ends. The frame number is zero-based.                           

		 ]]></description>
</field>
<classRec name='ParticleInit3D' fullname='flare.core:ParticleInit3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\ParticleInit3D.as' namespace='flare.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ParticleInit3D class defines a structure to use for particles initialization.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='ParticleInit3D' fullname='flare.core:ParticleInit3D/ParticleInit3D' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Creates a new particles initialization class.

		 ]]></description>
</method>
<field name='position' fullname='flare.core:ParticleInit3D/position' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 The position of the particle.

		 ]]></description>
</field>
<field name='scale' fullname='flare.core:ParticleInit3D/scale' type='Number' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[

		 The scale of the particle.

		 ]]></description>
</field>
<field name='spin' fullname='flare.core:ParticleInit3D/spin' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 The spin value of the particle.

		 ]]></description>
</field>
<field name='velocity' fullname='flare.core:ParticleInit3D/velocity' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 The velocity of the particle.

		 ]]></description>
</field>
<classRec name='Knot3D' fullname='flare.core:Knot3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Knot3D.as' namespace='flare.core' access='public' baseclass='flash.geom:Vector3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Knot3D class defines points for the splines (Spline3D).

	 

	 <p>Knot3D objects not only define the points as vertices do in a mesh, but also define control 

	 points to generate and move bezier curves through “inVec” and  “outVec” vectors.</p>

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Knot3D' fullname='flare.core:Knot3D/Knot3D' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		  Creates a new Knot3D.

		 ]]></description>
</method>
<method name='clone' fullname='flare.core:Knot3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns a copy of Knot3D.

		 ]]></description>
<return><![CDATA[a new Knot3D.

		 ]]></return>
</method>
<method name='toString' fullname='flare.core:Knot3D/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='inVec' fullname='flare.core:Knot3D/inVec' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Input vector for splines (Spline3D)

		 ]]></description>
</field>
<field name='outVec' fullname='flare.core:Knot3D/outVec' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Output vector for splines (Spline3D)

		 ]]></description>
</field>
<classRec name='Frame3D' fullname='flare.core:Frame3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Frame3D.as' namespace='flare.core' access='public' baseclass='flash.geom:Matrix3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
<private><![CDATA[]]></private>
</classRec>
<method name='Frame3D' fullname='flare.core:Frame3D/Frame3D' isStatic='false' isFinal='false' isOverride='false'  param_names='vector;type' param_types='Vector$Number;int' param_defaults='null;0' result_type='*'>
</method>
<method name='clone' fullname='flare.core:Frame3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.geom:Matrix3D'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='TYPE_FRAME' fullname='flare.core:Frame3D/TYPE_FRAME' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='TYPE_NULL' fullname='flare.core:Frame3D/TYPE_NULL' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='TYPE_TWEEN' fullname='flare.core:Frame3D/TYPE_TWEEN' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='callback' fullname='flare.core:Frame3D/callback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='flare.core:Frame3D/type' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='Surface3D' fullname='flare.core:Surface3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Surface3D.as' namespace='flare.core' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Surface3D class represents a set of vertices, polygons and surfaces which can be drawn.

	 
	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Surface3D' fullname='flare.core:Surface3D/Surface3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='null' result_type='*'>
<description><![CDATA[

		 Creates a new Surface3D object.

		 ]]></description>
</method>
<method name='addVertexData' fullname='flare.core:Surface3D/addVertexData' isStatic='false' isFinal='false' isOverride='false'  param_names='dataIndex;size;vector' param_types='uint;int;Vector$Number' param_defaults='undefined;-1;null' result_type='int'>
<description><![CDATA[

		 Define a new attribute for each vertex. Each attribute can be a vector of 1-4 values (flotas) associated to each vertex.

		 <p>The vertexVector can be for example: x,y,z,nx,ny,nz,u,v,  x,y,z,nx,ny,nz,u,v, x,y,z,nx,ny,nz,u,v... </p>

		 ]]></description>
<param><![CDATA[dataIndex A value from 0 to 7 that define the type of data to be assocciated. The common values may be one of the POSITION, NORMALS, UV0, UV1, etc. constans of the Surface3D class.

		 ]]></param>
<param><![CDATA[size The size of data associated to the attribute for each vertex (1 to 4).

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='changedMaterialEvent' fullname='flare.core:Surface3D/private:changedMaterialEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='clone' fullname='flare.core:Surface3D/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Surface3D'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='contextEvent' fullname='flare.core:Surface3D/private:contextEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='dispose' fullname='flare.core:Surface3D/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='download' fullname='flare.core:Surface3D/download' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='instanceStateEvent' fullname='flare.core:Surface3D/private:instanceStateEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='flare.core:Surface3D/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateBoundings' fullname='flare.core:Surface3D/updateBoundings' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Boundings3D'>
</method>
<method name='upload' fullname='flare.core:Surface3D/upload' isStatic='false' isFinal='false' isOverride='false'  param_names='scene' param_types='flare.basic:Scene3D' param_defaults='undefined' result_type='void'>
</method>
<method name='indexVector' fullname='flare.core:Surface3D/indexVector/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$uint'>
<description><![CDATA[

		 Vector of indices that reference to a vertex buffers of the Surface3D.

		 ]]></description>
</method>
<method name='instanceOf' fullname='flare.core:Surface3D/instanceOf/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Surface3D'>
<description><![CDATA[

		 Gets or sets the instance reference of the surface if there is one.

		 ]]></description>
</method>
<method name='material' fullname='flare.core:Surface3D/material/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.materials:Material3D'>
</method>
<method name='polys' fullname='flare.core:Surface3D/polys/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$flare.core:Poly3D'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='vertexVector' fullname='flare.core:Surface3D/vertexVector/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$Number'>
<description><![CDATA[

		 Vector of vertices that reference to a vertex buffers of the Surface3D.

		 ]]></description>
</method>
<method name='indexVector' fullname='flare.core:Surface3D/indexVector/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Vector$uint' param_defaults='undefined' result_type='void'>
</method>
<method name='instanceOf' fullname='flare.core:Surface3D/instanceOf/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flare.core:Surface3D' param_defaults='undefined' result_type='void'>
</method>
<method name='material' fullname='flare.core:Surface3D/material/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flare.materials:Material3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Material instance to render the surface.

		 ]]></description>
</method>
<method name='polys' fullname='flare.core:Surface3D/polys/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Vector$flare.core:Poly3D' param_defaults='undefined' result_type='void'>
</method>
<method name='vertexVector' fullname='flare.core:Surface3D/vertexVector/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Vector$Number' param_defaults='undefined' result_type='void'>
</method>
<field name='BITANGENT' fullname='flare.core:Surface3D/BITANGENT' type='int' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 Vertex bi-tangents attribute (float3).

		 ]]></description>
</field>
<field name='COLOR0' fullname='flare.core:Surface3D/COLOR0' type='int' isStatic='true' isConst='true' defaultValue='9' >
<description><![CDATA[

		 Vertex color attribute (float3).

		 ]]></description>
</field>
<field name='COLOR1' fullname='flare.core:Surface3D/COLOR1' type='int' isStatic='true' isConst='true' defaultValue='10' >
<description><![CDATA[

		 Vertex color attribute (float3).

		 ]]></description>
</field>
<field name='COLOR2' fullname='flare.core:Surface3D/COLOR2' type='int' isStatic='true' isConst='true' defaultValue='11' >
<description><![CDATA[

		 Vertex color attribute (float3).

		 ]]></description>
</field>
<field name='NORMAL' fullname='flare.core:Surface3D/NORMAL' type='int' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 Vertex normals attribute (float3).

		 ]]></description>
</field>
<field name='PARTICLE' fullname='flare.core:Surface3D/PARTICLE' type='int' isStatic='true' isConst='true' defaultValue='6' >
<description><![CDATA[

		 Vertex particles attribute (float4). Life (0-1), rotation in radians and size x and y (-1 to 1).

		 ]]></description>
</field>
<field name='POSITION' fullname='flare.core:Surface3D/POSITION' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 Vertex position attribute (float3).

		 ]]></description>
</field>
<field name='SKIN_INDICES' fullname='flare.core:Surface3D/SKIN_INDICES' type='int' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 Vertex skin indices attribute (could be float1 to float4 depending of the Device3D.maxBonesPerVertex property).

		 ]]></description>
</field>
<field name='SKIN_WEIGHTS' fullname='flare.core:Surface3D/SKIN_WEIGHTS' type='int' isStatic='true' isConst='true' defaultValue='7' >
<description><![CDATA[

		 Vertex skin weights attribute (could be float1 to float4 depending of the Device3D.maxBonesPerVertex property).

		 ]]></description>
</field>
<field name='TANGENT' fullname='flare.core:Surface3D/TANGENT' type='int' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 Vertex tangents attribute (float3).

		 ]]></description>
</field>
<field name='TARGET_NORMAL' fullname='flare.core:Surface3D/TARGET_NORMAL' type='int' isStatic='true' isConst='true' defaultValue='13' >
<description><![CDATA[

		 Vertex target normal attribute (float3).

		 ]]></description>
</field>
<field name='TARGET_POSITION' fullname='flare.core:Surface3D/TARGET_POSITION' type='int' isStatic='true' isConst='true' defaultValue='12' >
<description><![CDATA[

		 Vertex target position attribute (float3).

		 ]]></description>
</field>
<field name='UV0' fullname='flare.core:Surface3D/UV0' type='int' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Vertex primary uv channel attribute (flaot2).

		 ]]></description>
</field>
<field name='UV1' fullname='flare.core:Surface3D/UV1' type='int' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Vertex secondary uv channel attribute (float2).

		 ]]></description>
</field>
<field name='UV2' fullname='flare.core:Surface3D/UV2' type='int' isStatic='true' isConst='true' defaultValue='14' >
<description><![CDATA[

		 Vertex third uv channel attribute (float2).

		 ]]></description>
</field>
<field name='UV3' fullname='flare.core:Surface3D/UV3' type='int' isStatic='true' isConst='true' defaultValue='15' >
<description><![CDATA[

		 Vertex four uv channel attribute (float2).

		 ]]></description>
</field>
<field name='_indexVector' fullname='flare.core:Surface3D/private:_indexVector' type='Vector$uint' isStatic='false' isConst='false' >
</field>
<field name='_instanceOf' fullname='flare.core:Surface3D/private:_instanceOf' type='flare.core:Surface3D' isStatic='false' isConst='false' >
</field>
<field name='_material' fullname='flare.core:Surface3D/private:_material' type='flare.materials:Material3D' isStatic='false' isConst='false' >
</field>
<field name='_polys' fullname='flare.core:Surface3D/private:_polys' type='Vector$flare.core:Poly3D' isStatic='false' isConst='false' >
</field>
<field name='_vertexVector' fullname='flare.core:Surface3D/private:_vertexVector' type='Vector$Number' isStatic='false' isConst='false' >
</field>
<field name='bounds' fullname='flare.core:Surface3D/bounds' type='flare.core:Boundings3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Returns or sets a Boundings3D object with object properties, such as radius, dimensions, etc.

		 ]]></description>
<see><![CDATA[flare.core.Boundings3D

		 ]]></see>
</field>
<field name='firstIndex' fullname='flare.core:Surface3D/firstIndex' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 The index of the first vertex index selected to render.

		 ]]></description>
</field>
<field name='format' fullname='flare.core:Surface3D/format' type='Vector$String' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 The buffer format specified for each input.

		 ]]></description>
</field>
<field name='indexBuffer' fullname='flare.core:Surface3D/indexBuffer' type='flash.display3D:IndexBuffer3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Buffer of indices that reference to a vertex buffers of the Surface3D.

		 ]]></description>
</field>
<field name='indexBytes' fullname='flare.core:Surface3D/indexBytes' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
<description><![CDATA[

		 Vector of indices that reference to a vertex buffers of the Surface3D.

		 ]]></description>
</field>
<field name='name' fullname='flare.core:Surface3D/name' type='String' isStatic='false' isConst='false' >
<description><![CDATA[

		 The name of the surface.

		 ]]></description>
</field>
<field name='numTriangles' fullname='flare.core:Surface3D/numTriangles' type='int' isStatic='false' isConst='false' defaultValue='-1' >
<description><![CDATA[

		 Number of triangles that will be drawn.

		 ]]></description>
</field>
<field name='offset' fullname='flare.core:Surface3D/offset' type='Vector$int' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 The offset of data index in the vertexVector.

		 ]]></description>
</field>
<field name='scene' fullname='flare.core:Surface3D/scene' type='flare.basic:Scene3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Gets the scene context of the surface.

		 Do not change this property manually, to change the scene context, call to download() and then to upload() methods.

		 ]]></description>
</field>
<field name='sizePerVertex' fullname='flare.core:Surface3D/sizePerVertex' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 The number of data values associated with each vertex

		 ]]></description>
</field>
<field name='sources' fullname='flare.core:Surface3D/sources' type='Vector$flare.core:Surface3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 The surface sources of data index from where the input should be read. A null value means the same surface.

		 ]]></description>
</field>
<field name='vertexBuffer' fullname='flare.core:Surface3D/vertexBuffer' type='flash.display3D:VertexBuffer3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Buffer of vertices that reference to a vertex buffers of the Surface3D.

		 ]]></description>
</field>
<field name='vertexBytes' fullname='flare.core:Surface3D/vertexBytes' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
<description><![CDATA[

		 Vector of vertices that reference to a vertex buffers of the Surface3D.

		 ]]></description>
</field>
<field name='visible' fullname='flare.core:Surface3D/visible' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<classRec name='Texture3D' fullname='flare.core:Texture3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Texture3D.as' namespace='flare.core' access='public' baseclass='flash.events:EventDispatcher' interfaces='flare.system:ILibraryExternalItem' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Textrue3D class contains information on material textures.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Texture3D' fullname='flare.core:Texture3D/Texture3D' isStatic='false' isFinal='false' isOverride='false'  param_names='request;optimizeForRenderToTexture;format' param_types='*;Boolean;int' param_defaults='null;false;unknown' result_type='*'>
<description><![CDATA[

		 Creates a new texture. The 'request' parameter can be a url string path, URLRequest, BitmapData or a Point object to create a dynamic texture.

		 If a path is set for the texture, the Texture3D object will start its loading process. If no path is set for the texture,

		 a BitmapData object that has been directly loaded can be specified.

		 ]]></description>
<param><![CDATA[request It can be texture file path or BitmapData object.

		 ]]></param>
</method>
<method name='close' fullname='flare.core:Texture3D/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Terminates the loading proccess.

		 ]]></description>
</method>
<method name='completeEvent' fullname='flare.core:Texture3D/private:completeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='contextEvent' fullname='flare.core:Texture3D/private:contextEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='dispose' fullname='flare.core:Texture3D/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Eliminates all the resources associated to the texture.

		 The texture will be unusable after dispose.

		 ]]></description>
</method>
<method name='download' fullname='flare.core:Texture3D/download' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Download the texture from the graphics card.

		 ]]></description>
</method>
<method name='ioErrorEvent' fullname='flare.core:Texture3D/private:ioErrorEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='load' fullname='flare.core:Texture3D/load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Loads the texture if it is an external resource..

		 ]]></description>
</method>
<method name='progressEvent' fullname='flare.core:Texture3D/private:progressEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:ProgressEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='flare.core:Texture3D/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='uploadWithMipmaps' fullname='flare.core:Texture3D/private:uploadWithMipmaps' isStatic='false' isFinal='false' isOverride='false'  param_names='source;side' param_types='flash.display:BitmapData;int' param_defaults='null;0' result_type='void'>
</method>
<method name='upload' fullname='flare.core:Texture3D/upload' isStatic='false' isFinal='false' isOverride='false'  param_names='scene' param_types='flare.basic:Scene3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Upload the texture to the graphics card.

		 ]]></description>
<param><![CDATA[scene The scene to use as a context.

		 ]]></param>
<return><![CDATA[true if was uploaded, false otherwise.

		 ]]></return>
</method>
<method name='bytesLoaded' fullname='flare.core:Texture3D/bytesLoaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='bytesTotal' fullname='flare.core:Texture3D/bytesTotal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='loaded' fullname='flare.core:Texture3D/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns if the texture was succesfull loaded and ready to use.

		 ]]></description>
</method>
<method name='optimizeForRenderToTexture' fullname='flare.core:Texture3D/optimizeForRenderToTexture/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns whatever the texture is optimized for dynamic rendering.

		 ]]></description>
</method>
<method name='request' fullname='flare.core:Texture3D/request/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Gets a reference to the request object.

		 ]]></description>
</method>
<method name='loaded' fullname='flare.core:Texture3D/loaded/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='request' fullname='flare.core:Texture3D/request/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='FILTER_LINEAR' fullname='flare.core:Texture3D/FILTER_LINEAR' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='FILTER_NEAREST' fullname='flare.core:Texture3D/FILTER_NEAREST' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='FORMAT_COMPRESSED_ALPHA' fullname='flare.core:Texture3D/FORMAT_COMPRESSED_ALPHA' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='FORMAT_COMPRESSED' fullname='flare.core:Texture3D/FORMAT_COMPRESSED' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='FORMAT_CUBEMAP' fullname='flare.core:Texture3D/FORMAT_CUBEMAP' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='FORMAT_RGBA' fullname='flare.core:Texture3D/FORMAT_RGBA' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='MIP_LINEAR' fullname='flare.core:Texture3D/MIP_LINEAR' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='MIP_NEAREST' fullname='flare.core:Texture3D/MIP_NEAREST' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='MIP_NONE' fullname='flare.core:Texture3D/MIP_NONE' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='TYPE_2D' fullname='flare.core:Texture3D/TYPE_2D' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='TYPE_CUBE' fullname='flare.core:Texture3D/TYPE_CUBE' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='WRAP_CLAMP' fullname='flare.core:Texture3D/WRAP_CLAMP' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='WRAP_REPEAT' fullname='flare.core:Texture3D/WRAP_REPEAT' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='_bytesLoaded' fullname='flare.core:Texture3D/private:_bytesLoaded' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_bytesTotal' fullname='flare.core:Texture3D/private:_bytesTotal' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_data' fullname='flare.core:Texture3D/private:_data' type='' isStatic='false' isConst='false' >
</field>
<field name='_levels' fullname='flare.core:Texture3D/private:_levels' type='flash.display:BitmapData' isStatic='false' isConst='false' >
</field>
<field name='_loaded' fullname='flare.core:Texture3D/private:_loaded' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_loader' fullname='flare.core:Texture3D/private:_loader' type='flash.display:Loader' isStatic='false' isConst='false' >
</field>
<field name='_mips' fullname='flare.core:Texture3D/private:_mips' type='flash.display:BitmapData' isStatic='false' isConst='false' >
</field>
<field name='_optimizeForRenderToTexture' fullname='flare.core:Texture3D/private:_optimizeForRenderToTexture' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_request' fullname='flare.core:Texture3D/private:_request' type='' isStatic='false' isConst='false' >
</field>
<field name='_transparent' fullname='flare.core:Texture3D/private:_transparent' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_urlLoader' fullname='flare.core:Texture3D/private:_urlLoader' type='flash.net:URLLoader' isStatic='false' isConst='false' >
</field>
<field name='bias' fullname='flare.core:Texture3D/bias' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 Defines how the mip levels will be applied over the texture. Value should be between -127 and 127.

		 ]]></description>
</field>
<field name='bitmapData' fullname='flare.core:Texture3D/bitmapData' type='flash.display:BitmapData' isStatic='false' isConst='false' >
<description><![CDATA[

		 BitmapData object that contains the texture data.

		 ]]></description>
</field>
<field name='filterMode' fullname='flare.core:Texture3D/filterMode' type='int' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[

		 Defines how the texture will be sampled when it needs to be streched on the screen.

		 This property should be defined before the shader compilation.

		 Setting to Texture3D.FILTER_NEAREST will take the nearest pixel.

		 Setting to Texture3D.FILTER_LINEAR will take an interpolation between the nearest pixels.

		 ]]></description>
</field>
<field name='format' fullname='flare.core:Texture3D/format' type='int' isStatic='false' isConst='false' >
</field>
<field name='mipMode' fullname='flare.core:Texture3D/mipMode' type='int' isStatic='false' isConst='false' defaultValue='2' >
<description><![CDATA[

		 Defines if the texture will use mip mapping and how it will be applyied.

		 This property should be defined before the shader compilation.

		 Setting to Texture3D.MIP_NEAREST, uses the pixel from the nearest mipmap level.

		 Setting to Texture3D.MIP_LINEAR uses the pixel from two nearest mipmap levels, and interpolates linearly.

		 Setting to Texture3D.MIP_NONE will disable mip mode for the texture.

		 ]]></description>
</field>
<field name='name' fullname='flare.core:Texture3D/name' type='String' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[

		 The name of the texture.

		 ]]></description>
</field>
<field name='options' fullname='flare.core:Texture3D/options' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='scene' fullname='flare.core:Texture3D/scene' type='flare.basic:Scene3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Gets the scene context of the texture.

		 Do not change this property manually, to change the scene context, call to download() and then to upload() methods.

		 ]]></description>
</field>
<field name='texture' fullname='flare.core:Texture3D/texture' type='flash.display3D.textures:TextureBase' isStatic='false' isConst='false' >
<description><![CDATA[

		 Texture object that contains the texture data on graphics card.

		 ]]></description>
</field>
<field name='typeMode' fullname='flare.core:Texture3D/typeMode' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 Defines the type of the texture (2d/cube).

		 ]]></description>
</field>
<field name='uploadTexture' fullname='flare.core:Texture3D/uploadTexture' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[

		 Allow you to define a custom function to generate and upload the texture.

		 ]]></description>
</field>
<field name='wrapMode' fullname='flare.core:Texture3D/wrapMode' type='int' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[

		 Defines how the texture will be sampled outside the normalized coordinates (0-1).

		 This property should be defined before the shader compilation.

		 Setting to WRAP_REPEAT, the texture will repeat to the infinity.

		 Setting to WRAP_CLAMP, the last pixel of the texture image stretches to the infinity.

		 ]]></description>
</field>
<classRec name='Pivot3D' fullname='flare.core:Pivot3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Pivot3D.as' namespace='flare.core' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Pivot3D class is the most basic three-dimensional element.           

	 <p>Represents a point, its orientation and scale in the 3d space.</p>

	 <p>The Pivot3D object can also be parent or container of other 3d objects and can be animated.</p>

	 ]]></description>
<metadata>
	<Event owner='flare.core:Pivot3D' name='exitDrag' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs after drag the object.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='enterDrag' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs before drag the object.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='changeTransform' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs whatever the object changes his position, rotation or scale.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='unload' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs when the dispose method of the object itself or of a parent object is called. 

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='exitDraw' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs after draw the object.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='enterDraw' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs before draw the object.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='exitFrame' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs after updating every frame.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='enterFrame' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs before entering any frame.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='removed' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs when the object is removed from a scene or from any other object.         

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='removedFromScene' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs when the object is removed from a scene.            

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='addedToScene' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs when the object is added to a scene.            

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='added' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs when the object is added to a scene or to any other object.            

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Pivot3D' name='animationComplete' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs at the end of an animation.    

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='Pivot3D' fullname='flare.core:Pivot3D/Pivot3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='' result_type='*'>
<description><![CDATA[

		 Creates a new Pivot3D object.

		 ]]></description>
<param><![CDATA[name 3d object name.    

		 ]]></param>
</method>
<method name='addChild' fullname='flare.core:Pivot3D/addChild' isStatic='false' isFinal='false' isOverride='false'  param_names='pivot;useGlobalSpace' param_types='flare.core:Pivot3D;Boolean' param_defaults='undefined;false' result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 Add a new object as a child.        

		 ]]></description>
<param><![CDATA[pivot Object to be added.         

		 ]]></param>
<return><![CDATA[The object that has been added.

		 ]]></return>
<see><![CDATA[#parent

		 ]]></see>
</method>
<method name='addComponent' fullname='flare.core:Pivot3D/addComponent' isStatic='false' isFinal='false' isOverride='false'  param_names='component' param_types='flare.core:IComponent' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Adds a new component to the object.

		 ]]></description>
<param><![CDATA[component The component to add.

		 ]]></param>
<return><![CDATA['true' is the component was sucesfully added, 'false' otherwise.

		 ]]></return>
</method>
<method name='addEventListener' fullname='flare.core:Pivot3D/addEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addFrameScript' fullname='flare.core:Pivot3D/addFrameScript' isStatic='false' isFinal='false' isOverride='false'  param_names='frame;callback' param_types='int;Function' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='addLabel' fullname='flare.core:Pivot3D/addLabel' isStatic='false' isFinal='false' isOverride='false'  param_names='label;includeChildren' param_types='flare.core:Label3D;Boolean' param_defaults='undefined;true' result_type='flare.core:Label3D'>
<description><![CDATA[

		  Adds a label that refers to a given animation.                  

		 ]]></description>
<param><![CDATA[label Label3D object.

		 ]]></param>
<param><![CDATA[includeChildren true if labels are to be included in all the sub-objects.  

		 ]]></param>
<return><![CDATA[Returns same Label3D object that contains the label information.                       

		 ]]></return>
</method>
<method name='addedToScene' fullname='flare.core:Pivot3D/flare.core:addedToScene' isStatic='false' isFinal='false' isOverride='false'  param_names='scene' param_types='flare.basic:Scene3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clone' fullname='flare.core:Pivot3D/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 Creates a copy of the object and all its elements. 

		 ]]></description>
<return><![CDATA[A new Pivot3D object.

		 ]]></return>
</method>
<method name='copyFrom' fullname='flare.core:Pivot3D/copyFrom' isStatic='false' isFinal='false' isOverride='false'  param_names='pivot' param_types='flare.core:Pivot3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Copy basic pivot properties to anotheer pivot.

		 ]]></description>
</method>
<method name='copyTransformFrom' fullname='flare.core:Pivot3D/copyTransformFrom' isStatic='false' isFinal='false' isOverride='false'  param_names='source;local' param_types='flare.core:Pivot3D;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 Copies all transformations (position, rotation and scale) from another Pivot3D object.

		 ]]></description>
<param><![CDATA[source Source object from you want to copy.

		 ]]></param>
<param><![CDATA[local true to copy from/to local coordinates, false will take global space coordinates.

		 ]]></param>
</method>
<method name='dispose' fullname='flare.core:Pivot3D/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Disposes the pivot and all associated resources.

		 ]]></description>
</method>
<method name='download' fullname='flare.core:Pivot3D/download' isStatic='false' isFinal='false' isOverride='false'  param_names='includeChildren' param_types='Boolean' param_defaults='true' result_type='void'>
</method>
<method name='draw' fullname='flare.core:Pivot3D/draw' isStatic='false' isFinal='false' isOverride='false'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
<description><![CDATA[

		 Draws the object. This method is generally called by the scene that contains it and manages it. However, it is possible to manage the drawing process independently from a scene.

		 To do so, it is essential that the canvas and the camera be properly set in the Device3D class and that the calculateView method of the Camera3D class be previously called. 		

		 ]]></description>
<see><![CDATA[../system/Device3D.html#camera Device3D.camera

		 ]]></see>
<see><![CDATA[../system/Device3D.html#canvas Device3D.canvas

		 ]]></see>
<see><![CDATA[../core/Camera3D.html#calculateView() Camera3D calculateView()

		 ]]></see>
</method>
<method name='forEach' fullname='flare.core:Pivot3D/forEach' isStatic='false' isFinal='false' isOverride='false'  param_names='callback;filterClass;params;includeChildren' param_types='Function;Class;Object;Boolean' param_defaults='undefined;null;null;true' result_type='void'>
<description><![CDATA[

		 Excecutes a calback functions for each of his children. The callback should recibe a object:Pivot3D parameter.

		 ]]></description>
<param><![CDATA[callback

		 ]]></param>
<param><![CDATA[includeChildren

		 ]]></param>
</method>
<method name='getBackward' fullname='flare.core:Pivot3D/getBackward' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector that points to the back of the object.      

		 ]]></description>
<return><![CDATA[The new direction vector.   

		 ]]></return>
</method>
<method name='getChildByName' fullname='flare.core:Pivot3D/getChildByName' isStatic='false' isFinal='false' isOverride='false'  param_names='name;startIndex;includeChildren' param_types='String;int;Boolean' param_defaults='undefined;0;true' result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 Returns the first child that matches the specified name.          

		 ]]></description>
<param><![CDATA[name Name of the object to be searched for.

		 ]]></param>
<param><![CDATA[startIndex An optional integer specifying the starting index of the search.

		 ]]></param>
<param><![CDATA[includeChildren true to extend the search to all the hierarchy.   

		 ]]></param>
<return><![CDATA[The object that matches the specified name.    

		 ]]></return>
</method>
<method name='getDir' fullname='flare.core:Pivot3D/getDir' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector that points to the front of the object.      

		 ]]></description>
<return><![CDATA[The new direction vector.   

		 ]]></return>
</method>
<method name='getDown' fullname='flare.core:Pivot3D/getDown' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector that points to the bottom side of the object.   

		 ]]></description>
<return><![CDATA[The new direction vector.   

		 ]]></return>
</method>
<method name='getLeft' fullname='flare.core:Pivot3D/getLeft' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector that points to the left side of the object.  

		 ]]></description>
<return><![CDATA[The new direction vector.    

		 ]]></return>
</method>
<method name='getMaterialByName' fullname='flare.core:Pivot3D/getMaterialByName' isStatic='false' isFinal='false' isOverride='false'  param_names='name;includeChildren' param_types='String;Boolean' param_defaults='undefined;true' result_type='flare.materials:Material3D'>
<description><![CDATA[

		 Returns the first material that matches the specified name.        

		 ]]></description>
<param><![CDATA[name Name of the material to be searched for.

		 ]]></param>
<param><![CDATA[includeChildren true to extend the search to all the object hierarchy.    

		 ]]></param>
<return><![CDATA[The material that matches the specified name.     

		 ]]></return>
</method>
<method name='getPosition' fullname='flare.core:Pivot3D/getPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the current position of the object. 

		 ]]></description>
<return><![CDATA[A new vector with the current position of the object. 

		 ]]></return>
</method>
<method name='getRight' fullname='flare.core:Pivot3D/getRight' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector that points to the right side of the object.  

		 ]]></description>
<return><![CDATA[The new direction vector.    

		 ]]></return>
</method>
<method name='getRotation' fullname='flare.core:Pivot3D/getRotation' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the current rotation of the object in euler angles.      

		 ]]></description>
<return><![CDATA[A new vector with the current rotation of the object.

		 ]]></return>
</method>
<method name='getScale' fullname='flare.core:Pivot3D/getScale' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the current scale of the object. 

		 ]]></description>
<return><![CDATA[A new vector with the current scale of the object. 

		 ]]></return>
</method>
<method name='getScreenCoords' fullname='flare.core:Pivot3D/getScreenCoords' isStatic='false' isFinal='false' isOverride='false'  param_names='out;camera;viewPort' param_types='flash.geom:Vector3D;flare.core:Camera3D;flash.geom:Rectangle' param_defaults='null;null;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the coordinates of an object with respect to the screen. 

		 The returned values are relative to the viewPort size that is currently used.      

		 ]]></description>
<param><![CDATA[out If a vector is specified, this vector will be filled with the returned values.

		 ]]></param>
<return><![CDATA[The vector with the coordinates. 

		 ]]></return>
</method>
<method name='getUp' fullname='flare.core:Pivot3D/getUp' isStatic='false' isFinal='false' isOverride='false'  param_names='local;out' param_types='Boolean;flash.geom:Vector3D' param_defaults='true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction vector that points to the upper side of the object.   

		 ]]></description>
<return><![CDATA[The new direction vector.   

		 ]]></return>
</method>
<method name='globalToLocalVector' fullname='flare.core:Pivot3D/globalToLocalVector' isStatic='false' isFinal='false' isOverride='false'  param_names='vector;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Transforms a point of the global space of the object into a local space without translation. Useful to convert direction normals or vectors.        

		 ]]></description>
<param><![CDATA[point The point to be transformed.  

		 ]]></param>
<param><![CDATA[out Vector3D where the transformed point will be returned. If null, a new Vector3D is returned.            

		 ]]></param>
<return><![CDATA[Vector3D with the transformed point.

		 ]]></return>
</method>
<method name='globalToLocal' fullname='flare.core:Pivot3D/globalToLocal' isStatic='false' isFinal='false' isOverride='false'  param_names='point;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Transforms a point of the global space of the object into a local space.

		 ]]></description>
<param><![CDATA[point The point to be transformed.  

		 ]]></param>
<param><![CDATA[out Vector3D where the transformed point will be returned. If null, a new Vector3D is returned.                         

		 ]]></param>
<return><![CDATA[Vector3D with the transformed point.

		 ]]></return>
</method>
<method name='gotoAndPlay' fullname='flare.core:Pivot3D/gotoAndPlay' isStatic='false' isFinal='false' isOverride='false'  param_names='frame;blendFrames;animationMode' param_types='Object;Number;int' param_defaults='undefined;0;unknown' result_type='void'>
<description><![CDATA[

		 Starts playing the animation at the specified frame

		 ]]></description>
<param><![CDATA[frame Frame number at which animation will be started. Animation frames are zero-based.

		 ]]></param>
<param><![CDATA[blendFrames The number of frames to use to blend from the current state to the new animation frame.

		 ]]></param>
<param><![CDATA[animationMode The mode to use to play the animation. Should be one of the consntants ANIMATION_LOOP_MODE, ANIMATION_PING_PONG_MODE or ANIMATION_STOP_MODE from Pivot3D.

		 ]]></param>
<see><![CDATA[#ANIMATION_LOOP_MODE

		 ]]></see>
<see><![CDATA[#ANIMATION_PING_PONG_MODE

		 ]]></see>
<see><![CDATA[#ANIMATION_STOP_MODE

		 ]]></see>
</method>
<method name='gotoAndStop' fullname='flare.core:Pivot3D/gotoAndStop' isStatic='false' isFinal='false' isOverride='false'  param_names='frame;blendFrames' param_types='Object;Number' param_defaults='undefined;0' result_type='void'>
<description><![CDATA[

		 Stops the animation at the specified frame.         

		 ]]></description>
<param><![CDATA[frame Frame number at which animation will be stopped. Animation frames are zero-based.             

		 ]]></param>
</method>
<method name='hide' fullname='flare.core:Pivot3D/hide' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Sets whether the object is visible. Only affects the current object.

		 ]]></description>
<see><![CDATA[#visible

		 ]]></see>
</method>
<method name='localToGlobalVector' fullname='flare.core:Pivot3D/localToGlobalVector' isStatic='false' isFinal='false' isOverride='false'  param_names='vector;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Transforms a point of the local space of the object into a global space without translation. Useful to convert direction normals or vectors.                

		 ]]></description>
<param><![CDATA[point The point to be transformed.         

		 ]]></param>
<param><![CDATA[out Vector3D where the transformed point will be returned. If null, a new Vector3D is returned.                  

		 ]]></param>
<return><![CDATA[Vector3D with the transformed point.

		 ]]></return>
</method>
<method name='localToGlobal' fullname='flare.core:Pivot3D/localToGlobal' isStatic='false' isFinal='false' isOverride='false'  param_names='point;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Transforms a point of the local space into the global space.

		 ]]></description>
<param><![CDATA[point The point to be transformed.

		 ]]></param>
<param><![CDATA[out The Vector3D where the transformed point will be returned. If null, a new Vector3D is returned.            

		 ]]></param>
<return><![CDATA[If the “out” parameter is “null”, a new Vector3D object with the transformed point will be returned, or the same “out” vector.

		 ]]></return>
</method>
<method name='lookAt' fullname='flare.core:Pivot3D/lookAt' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z;up;smooth' param_types='Number;Number;Number;flash.geom:Vector3D;Number' param_defaults='undefined;undefined;undefined;null;1' result_type='void'>
<description><![CDATA[

		 Directs the object towards the specified position. Coordinates are related to the local space of the object.

		 ]]></description>
<param><![CDATA[x Position on x

		 ]]></param>
<param><![CDATA[y Position on Y

		 ]]></param>
<param><![CDATA[z Position on z

		 ]]></param>
<param><![CDATA[up Vector3D related to the direction of the upper side of the object. The default value is (0, 1, 0). 

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value towards final transformation (0-1).

		 ]]></param>
<see><![CDATA[../utils/Pivot3DUtils.html#lookAt() Pivot3DUtils.lookAt()

		 ]]></see>
<see><![CDATA[../utils/Pivot3DUtils.html#lookAtWithReference() Pivot3DUtils.lookAtWithReference()

		 ]]></see>
</method>
<method name='nextFrame' fullname='flare.core:Pivot3D/nextFrame' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='play' fullname='flare.core:Pivot3D/play' isStatic='false' isFinal='false' isOverride='false'  param_names='animationMode' param_types='int' param_defaults='0' result_type='void'>
</method>
<method name='prevFrame' fullname='flare.core:Pivot3D/prevFrame' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='rayPlanePosition' fullname='flare.core:Pivot3D/private:rayPlanePosition' isStatic='false' isFinal='false' isOverride='false'  param_names='pNormal;pCenter;rFrom;rDir' param_types='flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;undefined;undefined' result_type='flash.geom:Vector3D'>
</method>
<method name='removeChild' fullname='flare.core:Pivot3D/removeChild' isStatic='false' isFinal='false' isOverride='false'  param_names='pivot' param_types='flare.core:Pivot3D' param_defaults='undefined' result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 Removes a child of the object. 

		 ]]></description>
<param><![CDATA[pivot Object to be removed.       

		 ]]></param>
<return><![CDATA[The object that has been removed.

		 ]]></return>
</method>
<method name='removeComponent' fullname='flare.core:Pivot3D/removeComponent' isStatic='false' isFinal='false' isOverride='false'  param_names='component' param_types='flare.core:IComponent' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Removes a component from the object.

		 ]]></description>
<param><![CDATA[component The component to remove.

		 ]]></param>
<return><![CDATA['true' if the component was sucesfully removed, 'false' otherwise or if the components was in the components list..

		 ]]></return>
</method>
<method name='removeEventListener' fullname='flare.core:Pivot3D/removeEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeLabel' fullname='flare.core:Pivot3D/removeLabel' isStatic='false' isFinal='false' isOverride='false'  param_names='label;includeChildren' param_types='flare.core:Label3D;Boolean' param_defaults='undefined;true' result_type='flare.core:Label3D'>
<description><![CDATA[

		 Removes a label.    

		 ]]></description>
<param><![CDATA[label Label3D object to be removed.           

		 ]]></param>
<param><![CDATA[includeChildren true if the labels of all the sub-objects are to be removed.

		 ]]></param>
<return><![CDATA[The label has been removed.  

		 ]]></return>
</method>
<method name='removedFromScene' fullname='flare.core:Pivot3D/flare.core:removedFromScene' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='replaceMaterial' fullname='flare.core:Pivot3D/replaceMaterial' isStatic='false' isFinal='false' isOverride='false'  param_names='source;replaceFor;includeChildren' param_types='flare.materials:Material3D;flare.materials:Material3D;Boolean' param_defaults='undefined;undefined;true' result_type='void'>
<description><![CDATA[

		 Replaces an existing material of the object with another material.

		 ]]></description>
<param><![CDATA[source Material that is to be replaced.

		 ]]></param>
<param><![CDATA[replaceFor Material that is to replace the previous one.

		 ]]></param>
<param><![CDATA[includeChildren true if children are to be included. 

		 ]]></param>
<see><![CDATA[#setMaterial()

		 ]]></see>
<see><![CDATA[#getMaterialByName()

		 ]]></see>
</method>
<method name='resetTransforms' fullname='flare.core:Pivot3D/resetTransforms' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Resets the object position, rotation and scale.   

		 ]]></description>
</method>
<method name='rotateAxis' fullname='flare.core:Pivot3D/rotateAxis' isStatic='false' isFinal='false' isOverride='false'  param_names='angle;axis;pivotPoint' param_types='Number;flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='void'>
<description><![CDATA[

		 Rotates the object on the specified axis from its current position.              

		 The pivotPoint parameter can be used to rotate around a point.

		 ]]></description>
<param><![CDATA[angle Angles to be rotated

		 ]]></param>
<param><![CDATA[axis Direction vector or axis on which to rotate.          

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.

		 ]]></param>
</method>
<method name='rotateX' fullname='flare.core:Pivot3D/rotateX' isStatic='false' isFinal='false' isOverride='false'  param_names='angle;local;pivotPoint' param_types='Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;true;null' result_type='void'>
<description><![CDATA[

		 Rotates the object on the X axis from its current position.

		 The pivotPoint parameter can be used to rotate around a point.

		 ]]></description>
<param><![CDATA[angle Angles to be rotated.     

		 ]]></param>
<param><![CDATA[local true to rotate respecting current orientation, or false to rotate according to orientation relative to parent. 

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.                

		 ]]></param>
</method>
<method name='rotateY' fullname='flare.core:Pivot3D/rotateY' isStatic='false' isFinal='false' isOverride='false'  param_names='angle;local;pivotPoint' param_types='Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;true;null' result_type='void'>
<description><![CDATA[

		 Rotates the object on the Y axis from its current position. 

		 The pivotPoint parameter can be used to rotate around a point.         

		 ]]></description>
<param><![CDATA[angle Angles to be rotated.      

		 ]]></param>
<param><![CDATA[local true to rotate respecting current orientation, or false to rotate according to orientation relative to parent.     

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.              

		 ]]></param>
</method>
<method name='rotateZ' fullname='flare.core:Pivot3D/rotateZ' isStatic='false' isFinal='false' isOverride='false'  param_names='angle;local;pivotPoint' param_types='Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;true;null' result_type='void'>
<description><![CDATA[

		 Rotates the pivot on the Z axis from its current position.  

		 The pivotPoint parameter can be used to rotate around a point.

		 ]]></description>
<param><![CDATA[angle Angles to be rotated.      

		 ]]></param>
<param><![CDATA[local true to rotate respecting current orientation, or false to rotate according to orientation relative to parent.

		 ]]></param>
<param><![CDATA[pivotPoint Position vector that sets an anchoring point for rotation. The position must be expressed in local units.

		 ]]></param>
</method>
<method name='setLayer' fullname='flare.core:Pivot3D/setLayer' isStatic='false' isFinal='false' isOverride='false'  param_names='value;includeChildren' param_types='int;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 Sets the layer to render the object and all of his children.

		 ]]></description>
<param><![CDATA[value The layer index.

		 ]]></param>
<param><![CDATA[includeChildren true to apply the same value to all the object hierarchy.    

		 ]]></param>
</method>
<method name='setMaterial' fullname='flare.core:Pivot3D/setMaterial' isStatic='false' isFinal='false' isOverride='false'  param_names='material;includeChildren' param_types='flare.materials:Material3D;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 Sets a material for the object and, optionally, all its descendants. The material will only affect Mesh3D objects that contain the Pivot3D.

		 ]]></description>
<param><![CDATA[material Material that will be assigned.

		 ]]></param>
<param><![CDATA[includeChildren true if all the hierarchy is to be included.

		 ]]></param>
</method>
<method name='setNormalOrientation' fullname='flare.core:Pivot3D/setNormalOrientation' isStatic='false' isFinal='false' isOverride='false'  param_names='normal;smooth' param_types='flash.geom:Vector3D;Number' param_defaults='undefined;1' result_type='void'>
<description><![CDATA[

		 Aligns the object to a normal.

		 ]]></description>
<param><![CDATA[normal Normal used for alignment.                    

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value (0-1).

		 ]]></param>
</method>
<method name='setOrientation' fullname='flare.core:Pivot3D/setOrientation' isStatic='false' isFinal='false' isOverride='false'  param_names='dir;up;smooth' param_types='flash.geom:Vector3D;flash.geom:Vector3D;Number' param_defaults='undefined;null;1' result_type='void'>
<description><![CDATA[

		 Orients the object in a specific direction.  

		 ]]></description>
<param><![CDATA[dir Direction set for orientation.       

		 ]]></param>
<param><![CDATA[up Upper side of the object. The default value is (0,1,0).

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value (0-1).

		 ]]></param>
</method>
<method name='setPosition' fullname='flare.core:Pivot3D/setPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z;smooth;local' param_types='Number;Number;Number;Number;Boolean' param_defaults='undefined;undefined;undefined;1;true' result_type='void'>
<description><![CDATA[

		 Sets the position of the object.    

		 ]]></description>
<param><![CDATA[x Position on x

		 ]]></param>
<param><![CDATA[y Position on y

		 ]]></param>
<param><![CDATA[z Position on z

		 ]]></param>
<param><![CDATA[smooth Optional interpolation value towards final transformation (0-1).

		 ]]></param>
</method>
<method name='setRotation' fullname='flare.core:Pivot3D/setRotation' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Sets the object rotation using euler angles. Rotation is absolute, so any previous rotation will be ignored.  

		 ]]></description>
<param><![CDATA[x Rotation on x in angles. 

		 ]]></param>
<param><![CDATA[y Rotation on y in angles. 

		 ]]></param>
<param><![CDATA[z Rotation on z in angles. 

		 ]]></param>
</method>
<method name='setScale' fullname='flare.core:Pivot3D/setScale' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z;smooth' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;1' result_type='void'>
<description><![CDATA[

		 Sets the object scale. This method sets the scale in an absolute manner; therefore, any previous scale will be ignored.              

		 Default value is 1, use a value greater than one to increase or less than 1 to decrease the scale. 

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half of their original size.

		 ]]></description>
<param><![CDATA[x Scale on x

		 ]]></param>
<param><![CDATA[y Scale on y

		 ]]></param>
<param><![CDATA[z Scale on z

		 ]]></param>
</method>
<method name='setTranslation' fullname='flare.core:Pivot3D/setTranslation' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z;local' param_types='Number;Number;Number;Boolean' param_defaults='0;0;0;true' result_type='void'>
<description><![CDATA[

		 Translates the object from its current position to the specified distance.

		 ]]></description>
<param><![CDATA[x Distance in units to translate on X axis.         

		 ]]></param>
<param><![CDATA[y Distance in units to translate on Y axis.            

		 ]]></param>
<param><![CDATA[z Distance in units to translate on Z axis.            

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation or false to translate on the coordinates relative to the parent.         

		 ]]></param>
<see><![CDATA[#translateX()

		 ]]></see>
<see><![CDATA[#translateY()

		 ]]></see>
<see><![CDATA[#translateZ()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<method name='show' fullname='flare.core:Pivot3D/show' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Sets whether the object is visible. Only affects the current object.

		 ]]></description>
<see><![CDATA[#visible

		 ]]></see>
</method>
<method name='startDrag' fullname='flare.core:Pivot3D/startDrag' isStatic='false' isFinal='false' isOverride='false'  param_names='lockCenter;reference' param_types='Boolean;flash.geom:Vector3D' param_defaults='false;null' result_type='void'>
<description><![CDATA[

		 Lets the user drag the specified Pivot3D. The Pivot3D remains draggable until explicitly stopped through a call to the Pivot3D.stopDrag() method, or until another Pivot3D is made draggable. Only one Pivot3D is draggable at a time.

		 ]]></description>
<param><![CDATA[lockCenter 

		 ]]></param>
<param><![CDATA[reference

		 ]]></param>
</method>
<method name='stopDrag' fullname='flare.core:Pivot3D/stopDrag' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Ends the startDrag() method. A Pivot3D that was made draggable with the startDrag() method remains draggable until a stopDrag() method is added, or until another Pivot3D becomes draggable. Only one Pivot3D is draggable at a time.

		 ]]></description>
</method>
<method name='stop' fullname='flare.core:Pivot3D/stop' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='translateAxis' fullname='flare.core:Pivot3D/translateAxis' isStatic='false' isFinal='false' isOverride='false'  param_names='distance;axis' param_types='Number;flash.geom:Vector3D' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Translates the object on a certain axis from its current position.

		 ]]></description>
<param><![CDATA[distance Distance to translate. 

		 ]]></param>
<param><![CDATA[axis Direction vector or axis on which to translate.                     

		 ]]></param>
<see><![CDATA[#translateX()

		 ]]></see>
<see><![CDATA[#translateY()

		 ]]></see>
<see><![CDATA[#translateZ()

		 ]]></see>
<see><![CDATA[#setTranslation()

		 ]]></see>
</method>
<method name='translateX' fullname='flare.core:Pivot3D/translateX' isStatic='false' isFinal='false' isOverride='false'  param_names='distance;local' param_types='Number;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 Translates the object on the X axis from its current position.

		 ]]></description>
<param><![CDATA[distance Distance to translate.          

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation, or false to translate on the coordinates relative to parent.         

		 ]]></param>
<see><![CDATA[#setTranslation()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<method name='translateY' fullname='flare.core:Pivot3D/translateY' isStatic='false' isFinal='false' isOverride='false'  param_names='distance;local' param_types='Number;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 Translates the object on the Y axis from its current position.

		 ]]></description>
<param><![CDATA[distance Distance to translate.                     

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation, or false to translate on the coordinates relative to parent.              

		 ]]></param>
<see><![CDATA[#setTranslation()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<method name='translateZ' fullname='flare.core:Pivot3D/translateZ' isStatic='false' isFinal='false' isOverride='false'  param_names='distance;local' param_types='Number;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 Translates the object on the Z axis from its current position.

		 ]]></description>
<param><![CDATA[distance Distance to translate.       

		 ]]></param>
<param><![CDATA[local true to translate respecting current orientation, or false to translate on the coordinates relative to parent.

		 ]]></param>
<see><![CDATA[#setTranslation()

		 ]]></see>
<see><![CDATA[#translateAxis()

		 ]]></see>
</method>
<method name='updateDragEvent' fullname='flare.core:Pivot3D/private:updateDragEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='updateTransforms' fullname='flare.core:Pivot3D/updateTransforms' isStatic='false' isFinal='false' isOverride='false'  param_names='includeChildren' param_types='Boolean' param_defaults='false' result_type='void'>
<description><![CDATA[

		 This method is used to force the system to update the object in those cases where its matrices have been modified manually.        

		 ]]></description>
<param><![CDATA[includeChildren true to include all the hierarchy.    

		 ]]></param>
</method>
<method name='update' fullname='flare.core:Pivot3D/update' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='upload' fullname='flare.core:Pivot3D/upload' isStatic='false' isFinal='false' isOverride='false'  param_names='scene;includeChildren' param_types='flare.basic:Scene3D;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[scene

		 ]]></param>
<param><![CDATA[force

		 ]]></param>
<return><![CDATA[
		 ]]></return>
</method>
<method name='children' fullname='flare.core:Pivot3D/children/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$flare.core:Pivot3D'>
<description><![CDATA[ 

		 Returns a Pivot3D-type vector with its children. 

		 ]]></description>
</method>
<method name='currentFrame' fullname='flare.core:Pivot3D/currentFrame/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns or sets the frame number where the pivot is situated. Animation frames are zero-based.                         

		 ]]></description>
</method>
<method name='frameSpeed' fullname='flare.core:Pivot3D/frameSpeed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns or sets animation speed. The default value is 1.               

		 The frame number is increased by the “frameSpeed” value in each update (“update” event) and is directly related to the number of updates per second in Device3D.

		 ]]></description>
<see><![CDATA[../system/Device3D.html#setFPS() Device3D.setFPS()

		 ]]></see>
<see><![CDATA[#currentFrame

		 ]]></see>
</method>
<method name='inView' fullname='flare.core:Pivot3D/inView/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='invWorld' fullname='flare.core:Pivot3D/invWorld/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Matrix3D'>
<description><![CDATA[

		 Returns a matrix with the inverse global position, rotation and scale of the object.   

		 If the object is part of a hierarchy that has been moved, rotated, scaled, etc., this property will return the matrix

		 relative to the furthest parent that can be found. In general, this could be the scene.

		 ]]></description>
<see><![CDATA[#world

		 ]]></see>
<see><![CDATA[#global

		 ]]></see>
<see><![CDATA[#updateTransforms()

		 ]]></see>
</method>
<method name='isPlaying' fullname='flare.core:Pivot3D/isPlaying/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns true if an animation is being played.       

		 ]]></description>
</method>
<method name='lock' fullname='flare.core:Pivot3D/lock/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='parent' fullname='flare.core:Pivot3D/parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 Returns or sets the object’s parent.    

		 Setting the parent through the “parent” property has the same effect as establishing the “parent” property with the AddChild method of the Pivot3D that will be parent.    

		 It can remove parent object by setting the “parent” property to “null”.

		 ]]></description>
<see><![CDATA[#addChild()

		 ]]></see>
</method>
<method name='scaleX' fullname='flare.core:Pivot3D/scaleX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Increases or decreases the object scale on the X axis from its current scale. 

		 Use a value greater than one to increase or less than one to decrease.

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half of their original size.

		 ]]></description>
</method>
<method name='scaleY' fullname='flare.core:Pivot3D/scaleY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Increases or decreases the object scale on the Y axis from its current scale.

		 Use a value greater than one to increase or less than one to decrease.

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half of their original size.

		 ]]></description>
</method>
<method name='scaleZ' fullname='flare.core:Pivot3D/scaleZ/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Increases or decreases the object scale on the Z axis from its current scale.     

		 Use a value greater than one to increase or less than one to decrease.

		 Setting the scale to 2 means that objects will be scaled to twice their original size, whereas a value of 0.5 would scale objects to one half their original size.

		 ]]></description>
</method>
<method name='scene' fullname='flare.core:Pivot3D/scene/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.basic:Scene3D'>
<description><![CDATA[

		 Gets a reference to the scene that contains the object.

		 ]]></description>
</method>
<method name='sortMode' fullname='flare.core:Pivot3D/sortMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Gets ot sets the sorting mode for the object.

		 ]]></description>
</method>
<method name='updatable' fullname='flare.core:Pivot3D/updatable/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='visible' fullname='flare.core:Pivot3D/visible/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Sets or returns whether the object is visible. If the visible property is set false, the object will be hidden and so will all its descendants.

		 ]]></description>
<see><![CDATA[#show()

		 ]]></see>
<see><![CDATA[#hide()

		 ]]></see>
</method>
<method name='world' fullname='flare.core:Pivot3D/world/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Matrix3D'>
<description><![CDATA[

		 Returns a matrix with the global position, rotation and scale of the object.   

		 If the object is part of a hierarchy that has been moved, rotated, scaled, etc., this property will return the matrix

		 relative to the furthest parent that can be found. In general, this could be the scene.

		 The “world” matrix, instead, represents the local position, rotation and scale.             

		 If the “world” matrix has been manually modified, it will have to call the updateTransforms method to update the global matrix.         

		 ]]></description>
<see><![CDATA[#world

		 ]]></see>
<see><![CDATA[#invGlobal

		 ]]></see>
<see><![CDATA[#updateTransforms()

		 ]]></see>
</method>
<method name='x' fullname='flare.core:Pivot3D/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns or sets the position on the X axis.  

		 ]]></description>
</method>
<method name='y' fullname='flare.core:Pivot3D/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns or sets the position on the Y axis.  

		 ]]></description>
</method>
<method name='z' fullname='flare.core:Pivot3D/z/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns or sets the position on the Z axis. 

		 ]]></description>
</method>
<method name='currentFrame' fullname='flare.core:Pivot3D/currentFrame/set' isStatic='false' isFinal='false' isOverride='false'  param_names='frame' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='frameSpeed' fullname='flare.core:Pivot3D/frameSpeed/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='lock' fullname='flare.core:Pivot3D/lock/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='parent' fullname='flare.core:Pivot3D/parent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='pivot' param_types='flare.core:Pivot3D' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleX' fullname='flare.core:Pivot3D/scaleX/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleY' fullname='flare.core:Pivot3D/scaleY/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scaleZ' fullname='flare.core:Pivot3D/scaleZ/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='sortMode' fullname='flare.core:Pivot3D/sortMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='updatable' fullname='flare.core:Pivot3D/updatable/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='visible' fullname='flare.core:Pivot3D/visible/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='world' fullname='flare.core:Pivot3D/world/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Matrix3D' param_defaults='undefined' result_type='void'>
</method>
<method name='x' fullname='flare.core:Pivot3D/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='y' fullname='flare.core:Pivot3D/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='z' fullname='flare.core:Pivot3D/z/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='ADDED_EVENT' fullname='flare.core:Pivot3D/ADDED_EVENT' type='String' isStatic='true' isConst='true' defaultValue='added' >
<description><![CDATA[ 

		 Defines the value for the 'added' event. 

		 ]]></description>
</field>
<field name='ADDED_TO_SCENE_EVENT' fullname='flare.core:Pivot3D/ADDED_TO_SCENE_EVENT' type='String' isStatic='true' isConst='true' defaultValue='addedToScene' >
<description><![CDATA[ 

		 Defines the value for the 'addedToScene' event. 

		 ]]></description>
</field>
<field name='ANIMATION_COMPLETE_EVENT' fullname='flare.core:Pivot3D/ANIMATION_COMPLETE_EVENT' type='String' isStatic='true' isConst='true' defaultValue='animationComplete' >
<description><![CDATA[ 

		 Defines the value for the 'animationComplete' event. 

		 ]]></description>
</field>
<field name='ANIMATION_COMPLETE_FLAG' fullname='flare.core:Pivot3D/flare.core:ANIMATION_COMPLETE_FLAG' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='ANIMATION_LOOP_MODE' fullname='flare.core:Pivot3D/ANIMATION_LOOP_MODE' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='ANIMATION_PING_PONG_MODE' fullname='flare.core:Pivot3D/ANIMATION_PING_PONG_MODE' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='ANIMATION_STOP_MODE' fullname='flare.core:Pivot3D/ANIMATION_STOP_MODE' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='ENTER_DRAW_EVENT' fullname='flare.core:Pivot3D/ENTER_DRAW_EVENT' type='String' isStatic='true' isConst='true' defaultValue='enterDraw' >
<description><![CDATA[ 

		 Defines the value for the 'enterDraw' event. 

		 ]]></description>
</field>
<field name='ENTER_DRAW_FLAG' fullname='flare.core:Pivot3D/flare.core:ENTER_DRAW_FLAG' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='ENTER_FRAME_EVENT' fullname='flare.core:Pivot3D/ENTER_FRAME_EVENT' type='String' isStatic='true' isConst='true' defaultValue='enterFrame' >
<description><![CDATA[ 

		 Defines the value for the 'enterFrame' event. 

		 ]]></description>
</field>
<field name='ENTER_FRAME_FLAG' fullname='flare.core:Pivot3D/flare.core:ENTER_FRAME_FLAG' type='int' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='EXIT_DRAW_EVENT' fullname='flare.core:Pivot3D/EXIT_DRAW_EVENT' type='String' isStatic='true' isConst='true' defaultValue='exitDraw' >
<description><![CDATA[ 

		 Defines the value for the 'exitDraw' event. 

		 ]]></description>
</field>
<field name='EXIT_DRAW_FLAG' fullname='flare.core:Pivot3D/flare.core:EXIT_DRAW_FLAG' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='EXIT_FRAME_EVENT' fullname='flare.core:Pivot3D/EXIT_FRAME_EVENT' type='String' isStatic='true' isConst='true' defaultValue='exitFrame' >
<description><![CDATA[ 

		 Defines the value for the 'exitFrame' event. 

		 ]]></description>
</field>
<field name='EXIT_FRAME_FLAG' fullname='flare.core:Pivot3D/flare.core:EXIT_FRAME_FLAG' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='REMOVED_EVENT' fullname='flare.core:Pivot3D/REMOVED_EVENT' type='String' isStatic='true' isConst='true' defaultValue='removed' >
<description><![CDATA[ 

		 Defines the value for the 'removed' event. 

		 ]]></description>
</field>
<field name='REMOVED_FROM_SCENE_EVENT' fullname='flare.core:Pivot3D/REMOVED_FROM_SCENE_EVENT' type='String' isStatic='true' isConst='true' defaultValue='removedFromScene' >
<description><![CDATA[ 

		 Defines the value for the 'removedFromScene' event. 

		 ]]></description>
</field>
<field name='SORT_CENTER' fullname='flare.core:Pivot3D/SORT_CENTER' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='SORT_FAR' fullname='flare.core:Pivot3D/SORT_FAR' type='int' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='SORT_NEAR' fullname='flare.core:Pivot3D/SORT_NEAR' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='SORT_NONE' fullname='flare.core:Pivot3D/SORT_NONE' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='UNLOAD_EVENT' fullname='flare.core:Pivot3D/UNLOAD_EVENT' type='String' isStatic='true' isConst='true' defaultValue='unload' >
<description><![CDATA[ 

		 Defines the value for the 'unload' event. 

		 ]]></description>
</field>
<field name='UPDATE_TRANSFORM_EVENT' fullname='flare.core:Pivot3D/UPDATE_TRANSFORM_EVENT' type='String' isStatic='true' isConst='true' defaultValue='updateTransform' >
<description><![CDATA[ 

		 Defines the value for the 'updateTransform' event. 

		 ]]></description>
</field>
<field name='UPDATE_TRANSFORM_FLAG' fullname='flare.core:Pivot3D/flare.core:UPDATE_TRANSFORM_FLAG' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_animationCompleteEvent' fullname='flare.core:Pivot3D/flare.core:_animationCompleteEvent' type='flash.events:Event' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_blendFrames' fullname='flare.core:Pivot3D/private:_blendFrames' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_children' fullname='flare.core:Pivot3D/private:_children' type='Vector$flare.core:Pivot3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_currentFrame' fullname='flare.core:Pivot3D/private:_currentFrame' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_currentLabel' fullname='flare.core:Pivot3D/private:_currentLabel' type='flare.core:Label3D' isStatic='false' isConst='false' >
</field>
<field name='_dirtyInv' fullname='flare.core:Pivot3D/flare.core:_dirtyInv' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_dragOffset' fullname='flare.core:Pivot3D/private:_dragOffset' type='flash.geom:Vector3D' isStatic='true' isConst='false' >
</field>
<field name='_dragStartDir' fullname='flare.core:Pivot3D/private:_dragStartDir' type='flash.geom:Vector3D' isStatic='true' isConst='false' >
</field>
<field name='_dragStartPos' fullname='flare.core:Pivot3D/private:_dragStartPos' type='flash.geom:Vector3D' isStatic='true' isConst='false' >
</field>
<field name='_dragTarget' fullname='flare.core:Pivot3D/private:_dragTarget' type='flare.core:Pivot3D' isStatic='true' isConst='false' >
</field>
<field name='_enterDrawEvent' fullname='flare.core:Pivot3D/flare.core:_enterDrawEvent' type='flash.events:Event' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_enterFrameEvent' fullname='flare.core:Pivot3D/flare.core:_enterFrameEvent' type='flash.events:Event' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_eventFlags' fullname='flare.core:Pivot3D/flare.core:_eventFlags' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_exitDrawEvent' fullname='flare.core:Pivot3D/flare.core:_exitDrawEvent' type='flash.events:Event' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_exitFrameEvent' fullname='flare.core:Pivot3D/flare.core:_exitFrameEvent' type='flash.events:Event' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_frameNull' fullname='flare.core:Pivot3D/private:_frameNull' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_frameSpeed' fullname='flare.core:Pivot3D/private:_frameSpeed' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_frame' fullname='flare.core:Pivot3D/flare.core:_frame' type='flare.core:Frame3D' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_from' fullname='flare.core:Pivot3D/private:_from' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_inScene' fullname='flare.core:Pivot3D/flare.core:_inScene' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_invGlobal' fullname='flare.core:Pivot3D/private:_invGlobal' type='flash.geom:Matrix3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_isPlaying' fullname='flare.core:Pivot3D/private:_isPlaying' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_lastFrame' fullname='flare.core:Pivot3D/private:_lastFrame' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_lock' fullname='flare.core:Pivot3D/private:_lock' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[

		 Sets the pivot lock mode. When a pivot is locked, it will not be updated / played directly and will not dispatch events like enter and exit frame.

		 This is usually the case on bones, that they are updated trough an external controller.

		 ]]></description>
</field>
<field name='_parent' fullname='flare.core:Pivot3D/private:_parent' type='flare.core:Pivot3D' isStatic='false' isConst='false' >
</field>
<field name='_scene' fullname='flare.core:Pivot3D/flare.core:_scene' type='flare.basic:Scene3D' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_sortMode' fullname='flare.core:Pivot3D/flare.core:_sortMode' type='int' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_temp0' fullname='flare.core:Pivot3D/private:_temp0' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_temp1' fullname='flare.core:Pivot3D/private:_temp1' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_temp2' fullname='flare.core:Pivot3D/private:_temp2' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_to' fullname='flare.core:Pivot3D/private:_to' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_updatable' fullname='flare.core:Pivot3D/private:_updatable' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_updateTransformEvent' fullname='flare.core:Pivot3D/flare.core:_updateTransformEvent' type='flash.events:Event' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_vector' fullname='flare.core:Pivot3D/private:_vector' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
</field>
<field name='_visible' fullname='flare.core:Pivot3D/private:_visible' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_world' fullname='flare.core:Pivot3D/flare.core:_world' type='flash.geom:Matrix3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='animationEnabled' fullname='flare.core:Pivot3D/animationEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[

		 Activates or deactivates the animation. If the object is animated and this animation is being placed, the element will be blocked by the animation and will not be able to move or rotate manually; therefore, if an animated object is to be controlled, the animation must first be disabled by setting animationEnabled false.    

		 ]]></description>
</field>
<field name='animationMode' fullname='flare.core:Pivot3D/animationMode' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='blendValue' fullname='flare.core:Pivot3D/blendValue' type='Number' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='components' fullname='flare.core:Pivot3D/components' type='Vector$flare.core:IComponent' isStatic='false' isConst='false' >
<description><![CDATA[

		 A collection vector that contains all the components of the object.

		 ]]></description>
</field>
<field name='dirty' fullname='flare.core:Pivot3D/dirty' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[

		 Gets or sets when the object has changed his transform matrix by hand.

		 ]]></description>
<see><![CDATA[#updateTransforms()

		 ]]></see>
</field>
<field name='frames' fullname='flare.core:Pivot3D/frames' type='Vector$flare.core:Frame3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Vector that contains all the animation frames.            

		 ]]></description>
</field>
<field name='labels' fullname='flare.core:Pivot3D/labels' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Returns or sets an object that contains the Labels3D objects used to play and manage animations.

		 ]]></description>
<see><![CDATA[#addLabel()

		 ]]></see>
<see><![CDATA[#getLabel()

		 ]]></see>
<see><![CDATA[#playLabel()

		 ]]></see>
<see><![CDATA[#removeLabel()

		 ]]></see>
</field>
<field name='lastBlendFrame' fullname='flare.core:Pivot3D/lastBlendFrame' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='layer' fullname='flare.core:Pivot3D/layer' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 Gets or sets the layer to render the object.

		 ]]></description>
</field>
<field name='name' fullname='flare.core:Pivot3D/name' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ 

		 Sets or returns the object name. 

		 ]]></description>
</field>
<field name='priority' fullname='flare.core:Pivot3D/priority' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 This value is for internal use to calculate the priority acording the distance from the camera during the render.

		 ]]></description>
</field>
<field name='transform' fullname='flare.core:Pivot3D/transform' type='flash.geom:Matrix3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ 

		 Sets or returns the matrix of local position, rotation and scale. The world property corresponds to the local space of the object. 

		 ]]></description>
</field>
<field name='userData' fullname='flare.core:Pivot3D/userData' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ 

		 Sets or returns an object for free use by the user. The userData object may also contain variables included within the f3d files. 

		 ]]></description>
</field>
<classRec name='Light3D' fullname='flare.core:Light3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Light3D.as' namespace='flare.core' access='public' baseclass='flare.core:Pivot3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Light3D class represents a 3d light. 

	 Lights will have an effect on the materials that admit them. 

	 

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Light3D' fullname='flare.core:Light3D/Light3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name;type' param_types='String;int' param_defaults=';unknown' result_type='*'>
</method>
<method name='clone' fullname='flare.core:Light3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.core:Pivot3D'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='dispose' fullname='flare.core:Light3D/dispose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='draw' fullname='flare.core:Light3D/draw' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setColors' fullname='flare.core:Light3D/private:setColors' isStatic='false' isFinal='false' isOverride='false'  param_names='bmp;colors;alphas;ratios' param_types='flash.display:BitmapData;Array;Array;Array' param_defaults='undefined;undefined;null;null' result_type='void'>
</method>
<method name='setParams' fullname='flare.core:Light3D/setParams' isStatic='false' isFinal='false' isOverride='false'  param_names='color;radius;attenuation;multiplier;infinite' param_types='int;Number;Number;Number;Boolean' param_defaults='0xffffff;0;1;1;false' result_type='void'>
<description><![CDATA[

		 Sets the light properties. 

		 ]]></description>
</method>
<method name='inView' fullname='flare.core:Light3D/inView/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<field name='DIRECTIONAL' fullname='flare.core:Light3D/DIRECTIONAL' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ 

		 Constant that defines a directional light. 

		 ]]></description>
</field>
<field name='POINT' fullname='flare.core:Light3D/POINT' type='int' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ 

		 Constant that defines a point light. 

		 ]]></description>
</field>
<field name='_position' fullname='flare.core:Light3D/private:_position' type='flash.geom:Vector3D' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='attenuation' fullname='flare.core:Light3D/attenuation' type='Number' isStatic='false' isConst='false' defaultValue='100' >
<description><![CDATA[

		 Sets or returns light attenuation.

		 ]]></description>
</field>
<field name='color' fullname='flare.core:Light3D/color' type='flash.geom:Vector3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Sets or returns light color.

		 ]]></description>
</field>
<field name='infinite' fullname='flare.core:Light3D/infinite' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[

		 Sets and returns if the light is infinite or not. 

		 Set it to true for ambient lights. 

		 Directional lights are always infinite.

		 ]]></description>
</field>
<field name='multiplier' fullname='flare.core:Light3D/multiplier' type='Number' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[

		 Light color multipler.

		 ]]></description>
</field>
<field name='radius' fullname='flare.core:Light3D/radius' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[

		 Sets or returns light radius.

		 ]]></description>
</field>
<field name='sample' fullname='flare.core:Light3D/sample' type='flash.display:BitmapData' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 The BitmapData to use for light projections.

		 ]]></description>
</field>
<field name='type' fullname='flare.core:Light3D/type' type='int' isStatic='false' isConst='false' >
<description><![CDATA[

		 Type of light (point/directional)

		 ]]></description>
<see><![CDATA[#POINT_LIGHT

		 ]]></see>
<see><![CDATA[#DIRECTIONAL_LIGHT

		 ]]></see>
</field>
<classRec name='Mesh3D' fullname='flare.core:Mesh3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Mesh3D.as' namespace='flare.core' access='public' baseclass='flare.core:Pivot3D' interfaces='flare.core:IDrawable' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Mesh3D class contains the data (geometry, materials, modifiers) instances which can be drawn a 3d object.

	 

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
<metadata>
	<Event owner='flare.core:Mesh3D' name='mouseWheel' type='flare.events.MouseEvent3D' >
<description><![CDATA[

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Mesh3D' name='mouseUp' type='flare.events.MouseEvent3D' >
<description><![CDATA[

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Mesh3D' name='mouseOver' type='flare.events.MouseEvent3D' >
<description><![CDATA[

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Mesh3D' name='mouseOut' type='flare.events.MouseEvent3D' >
<description><![CDATA[

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Mesh3D' name='mouseMove' type='flare.events.MouseEvent3D' >
<description><![CDATA[

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Mesh3D' name='mouseDown' type='flare.events.MouseEvent3D' >
<description><![CDATA[

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.core:Mesh3D' name='click' type='flare.events.MouseEvent3D' >
<description><![CDATA[

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='Mesh3D' fullname='flare.core:Mesh3D/Mesh3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='' result_type='*'>
<description><![CDATA[

		 Creates a new Mesh3D object.

		 ]]></description>
<param><![CDATA[name Mesh name.

		 ]]></param>
<param><![CDATA[geometry Geometry3D instance.

		 ]]></param>
</method>
<method name='addEventListener' fullname='flare.core:Mesh3D/addEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clone' fullname='flare.core:Mesh3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.core:Pivot3D'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='dispose' fullname='flare.core:Mesh3D/dispose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='download' fullname='flare.core:Mesh3D/download' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='draw' fullname='flare.core:Mesh3D/draw' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getMaterialByName' fullname='flare.core:Mesh3D/getMaterialByName' isStatic='false' isFinal='false' isOverride='true'  param_names='name;includeChildren' param_types='String;Boolean' param_defaults='undefined;true' result_type='flare.materials:Material3D'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getScreenRect' fullname='flare.core:Mesh3D/getScreenRect' isStatic='false' isFinal='false' isOverride='false'  param_names='out;camera;viewPort' param_types='flash.geom:Rectangle;flare.core:Camera3D;flash.geom:Rectangle' param_defaults='null;null;null' result_type='flash.geom:Rectangle'>
</method>
<method name='projectCorner' fullname='flare.core:Mesh3D/private:projectCorner' isStatic='false' isFinal='false' isOverride='false'  param_names='i;m' param_types='int;flash.geom:Matrix3D' param_defaults='undefined;undefined' result_type='flash.geom:Vector3D'>
</method>
<method name='removeEventListener' fullname='flare.core:Mesh3D/removeEventListener' isStatic='false' isFinal='false' isOverride='true'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='replaceMaterial' fullname='flare.core:Mesh3D/replaceMaterial' isStatic='false' isFinal='false' isOverride='true'  param_names='source;replaceFor;includeChildren' param_types='flare.materials:Material3D;flare.materials:Material3D;Boolean' param_defaults='undefined;undefined;true' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setMaterial' fullname='flare.core:Mesh3D/setMaterial' isStatic='false' isFinal='false' isOverride='true'  param_names='material;includeChildren' param_types='flare.materials:Material3D;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateBoundings' fullname='flare.core:Mesh3D/updateBoundings' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Forces to update mesh boundings.

		 ]]></description>
</method>
<method name='updateTransforms' fullname='flare.core:Mesh3D/updateTransforms' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren' param_types='Boolean' param_defaults='false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='upload' fullname='flare.core:Mesh3D/upload' isStatic='false' isFinal='false' isOverride='true'  param_names='scene;includeChildren' param_types='flare.basic:Scene3D;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='bounds' fullname='flare.core:Mesh3D/bounds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Boundings3D'>
</method>
<method name='inView' fullname='flare.core:Mesh3D/inView/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='bounds' fullname='flare.core:Mesh3D/bounds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flare.core:Boundings3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Returns or sets a Boundings3D object with object properties, such as radius, dimensions, etc. 

		 ]]></description>
<see><![CDATA[flare.core.Boundings3D

		 ]]></see>
</method>
<field name='CLICK' fullname='flare.core:Mesh3D/private:CLICK' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='MOUSE_DOWN' fullname='flare.core:Mesh3D/private:MOUSE_DOWN' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='MOUSE_MOVE' fullname='flare.core:Mesh3D/private:MOUSE_MOVE' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='MOUSE_OUT' fullname='flare.core:Mesh3D/private:MOUSE_OUT' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='MOUSE_OVER' fullname='flare.core:Mesh3D/private:MOUSE_OVER' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='MOUSE_UP' fullname='flare.core:Mesh3D/private:MOUSE_UP' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='MOUSE_WHELL' fullname='flare.core:Mesh3D/private:MOUSE_WHELL' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_bCenter' fullname='flare.core:Mesh3D/private:_bCenter' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_bScale' fullname='flare.core:Mesh3D/private:_bScale' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_boundsCenter' fullname='flare.core:Mesh3D/private:_boundsCenter' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_boundsRadius' fullname='flare.core:Mesh3D/private:_boundsRadius' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_bounds' fullname='flare.core:Mesh3D/private:_bounds' type='flare.core:Boundings3D' isStatic='false' isConst='false' >
</field>
<field name='_inView' fullname='flare.core:Mesh3D/private:_inView' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_modifier' fullname='flare.core:Mesh3D/private:_modifier' type='flare.modifiers:Modifier' isStatic='true' isConst='false' >
</field>
<field name='_updateBoundsScale' fullname='flare.core:Mesh3D/private:_updateBoundsScale' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='modifier' fullname='flare.core:Mesh3D/modifier' type='flare.modifiers:Modifier' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Modifier instance used to process and project vertices.                   

		 ]]></description>
<see><![CDATA[flare.modifiers.Modifier

		 ]]></see>
</field>
<field name='mouseEnabled' fullname='flare.core:Mesh3D/mouseEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[

		 Enables the mouse interaction with the object. If any mouse related event is added trough addEventListener method, this property will automatically be seted to 'true'.

		 ]]></description>
</field>
<field name='surfaces' fullname='flare.core:Mesh3D/surfaces' type='Vector$flare.core:Surface3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Instance to the Surface3D class.

		 ]]></description>
</field>
<field name='useHandCursor' fullname='flare.core:Mesh3D/useHandCursor' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[

		 Value that defines whether the hand cursor is to display when events such as MouseEvent3D.MOUSE_OVER or MouseEvent3D.MOUSE_MOVE are defined. The default value is false. 

		 ]]></description>
</field>
<classRec name='Camera3D' fullname='flare.core:Camera3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Camera3D.as' namespace='flare.core' access='public' baseclass='flare.core:Pivot3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Camera3D class represents the point of view and orientation of the scene.

	 

	 <p>There can be as many cameras as required, but the one selected in the scene will do the rendering.</p>

	 

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
<see><![CDATA[../basic/Scene3D.html#camera Scene3D camera

	 ]]></see>
</classRec>
<method name='Camera3D' fullname='flare.core:Camera3D/Camera3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name;fieldOfView' param_types='String;Number' param_defaults=';75' result_type='*'>
</method>
<method name='clone' fullname='flare.core:Camera3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 ]]></description>
<return><![CDATA[
		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='dispose' fullname='flare.core:Camera3D/dispose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getPointDir' fullname='flare.core:Camera3D/getPointDir' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;out' param_types='Number;Number;flash.geom:Vector3D' param_defaults='undefined;undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns a global 3D direction vector relative to a 2D camera position.

		 ]]></description>
<param><![CDATA[x The x position over the camera viewport.

		 ]]></param>
<param><![CDATA[y The y position over the camera viewport.

		 ]]></param>
<param><![CDATA[out A reference vector to return the direction vector.

		 ]]></param>
<return><![CDATA[If the 'out' is 'null', a new vector will be returned. Otherwise, the same vector, passed to the 'out' parameter, will be returned.

		 ]]></return>
</method>
<method name='updateProjectionMatrix' fullname='flare.core:Camera3D/updateProjectionMatrix' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Updates the camera projection matrix.

		 ]]></description>
</method>
<method name='aspectRatio' fullname='flare.core:Camera3D/aspectRatio/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Sets or returns the aspect ratio of the camera.

		 ]]></description>
</method>
<method name='canvasSize' fullname='flare.core:Camera3D/canvasSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
</method>
<method name='far' fullname='flare.core:Camera3D/far/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Sets or returns the furthest clip plane from the camera. The higher the value, the further the camera will view.

		 This value corresponds to the distance between the camera and the plane. 

		 Everything beyond that distance is not to be rendered.       

		 For optimization purposes, complex scenes with a large number of polygons should not have a 

		 high value to avoid the unnecessary rendering of objects that are too far.                              

		 ]]></description>
<see><![CDATA[#near

		 ]]></see>
</method>
<method name='fieldOfView' fullname='flare.core:Camera3D/fieldOfView/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Sets and returns the camera’s angle of view. The angle of view is inversely proportional 

		 to the zoom. The wider the angle, the closer the projection plane and, therefore, the shorter the zoom.

		 ]]></description>
<see><![CDATA[#zoom

		 ]]></see>
</method>
<method name='near' fullname='flare.core:Camera3D/near/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Sets or returns the clip plane that is closest to the camera. Its value must be greater than zero.

		 Everything beyond this virtual plane is not to be rendered.

		 The value corresponds to the distance between the camera and the plane.

		 This value should be set at the furthest possible point from the camera. This is likely to result in improved performance, 

		 especially in those situations where objects go through the camera plane.

		 ]]></description>
<see><![CDATA[#far

		 ]]></see>
</method>
<method name='projection' fullname='flare.core:Camera3D/projection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Matrix3D'>
<description><![CDATA[

		 Returns the projection matrix.

		 ]]></description>
</method>
<method name='viewPort' fullname='flare.core:Camera3D/viewPort/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
</method>
<method name='viewProjection' fullname='flare.core:Camera3D/viewProjection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Matrix3D'>
<description><![CDATA[

		 Returns the viewProjection matrix.

		 ]]></description>
</method>
<method name='view' fullname='flare.core:Camera3D/view/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Matrix3D'>
<description><![CDATA[

		 Returns the view matrix.

		 ]]></description>
</method>
<method name='zoom' fullname='flare.core:Camera3D/zoom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Sets or returns the camera zoom. The zoom is the distance between the point of origin of the camera and the projection plane.

		 ]]></description>
<see><![CDATA[#fieldOfView

		 ]]></see>
</method>
<method name='aspectRatio' fullname='flare.core:Camera3D/aspectRatio/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='canvasSize' fullname='flare.core:Camera3D/canvasSize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='rect' param_types='flash.geom:Point' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Defines the projection area for the camera viewPort.

		 If no canvasSize is defined, the values from scene viewPort are used.

		 This property could be used in case where you need to render to a texture that has

		 different dimensions that the scene viewport.

		 ]]></description>
</method>
<method name='far' fullname='flare.core:Camera3D/far/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='fieldOfView' fullname='flare.core:Camera3D/fieldOfView/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='near' fullname='flare.core:Camera3D/near/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='viewPort' fullname='flare.core:Camera3D/viewPort/set' isStatic='false' isFinal='false' isOverride='false'  param_names='rect' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Defines the area where the camera will draw. This area is relative to the scene viewport or canvasSize if it is defined.

		 ]]></description>
</method>
<method name='zoom' fullname='flare.core:Camera3D/zoom/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_aspect' fullname='flare.core:Camera3D/private:_aspect' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_cachedAspectRatio' fullname='flare.core:Camera3D/private:_cachedAspectRatio' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_canvasSize' fullname='flare.core:Camera3D/private:_canvasSize' type='flash.geom:Point' isStatic='false' isConst='false' >
</field>
<field name='_far' fullname='flare.core:Camera3D/private:_far' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_fieldOfView' fullname='flare.core:Camera3D/private:_fieldOfView' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_inv' fullname='flare.core:Camera3D/private:_inv' type='flash.geom:Matrix3D' isStatic='true' isConst='false' >
</field>
<field name='_near' fullname='flare.core:Camera3D/private:_near' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_projection' fullname='flare.core:Camera3D/private:_projection' type='flash.geom:Matrix3D' isStatic='false' isConst='false' >
</field>
<field name='_viewProjection' fullname='flare.core:Camera3D/private:_viewProjection' type='flash.geom:Matrix3D' isStatic='false' isConst='false' >
</field>
<field name='_view' fullname='flare.core:Camera3D/private:_view' type='flash.geom:Matrix3D' isStatic='false' isConst='false' >
</field>
<field name='_viewport' fullname='flare.core:Camera3D/private:_viewport' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='_zoom' fullname='flare.core:Camera3D/private:_zoom' type='Number' isStatic='false' isConst='false' >
</field>
<field name='clipRectangle' fullname='flare.core:Camera3D/clipRectangle' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[

		 Define whatever the viewPort clip all pixels outside the viewPort.

		 ]]></description>
</field>
<field name='rawData' fullname='flare.core:Camera3D/private:rawData' type='Vector$Number' isStatic='false' isConst='true' defaultValue='unknown' >
</field>
<classRec name='Particles3D' fullname='flare.core:Particles3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Particles3D.as' namespace='flare.core' access='public' baseclass='flare.core:Pivot3D' interfaces='flare.core:IDrawable' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Particles3D class creates billboard particle effects.

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Particles3D' fullname='flare.core:Particles3D/Particles3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='particles' result_type='*'>
<description><![CDATA[

		 Creates a new particles emitter.

		 ]]></description>
<param><![CDATA[name The name of the particles object.

		 ]]></param>
</method>
<method name='build' fullname='flare.core:Particles3D/build' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Builds and initializes the particles buffers. You should not call to this method unless you explicity want to build the buffers manually.

		 ]]></description>
</method>
<method name='clone' fullname='flare.core:Particles3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 ]]></description>
<return><![CDATA[
		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='draw' fullname='flare.core:Particles3D/draw' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[includeChildren

		 ]]></param>
<param><![CDATA[material

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='initFunction' fullname='flare.core:Particles3D/private:initFunction' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter;index;init' param_types='flare.core:Particles3D;int;flare.core:ParticleInit3D' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='pause' fullname='flare.core:Particles3D/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Pauses the emission of particles. 

		 ]]></description>
<see><![CDATA[#resume()

		 ]]></see>
<see><![CDATA[#start()

		 ]]></see>
</method>
<method name='resume' fullname='flare.core:Particles3D/resume' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Resumes the emission of particles after being paused.

		 ]]></description>
<see><![CDATA[#pause()

		 ]]></see>
<see><![CDATA[#start()

		 ]]></see>
</method>
<method name='setAlphas' fullname='flare.core:Particles3D/setAlphas' isStatic='false' isFinal='false' isOverride='false'  param_names='alphas;ratios' param_types='Array;Array' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Sets the values to use as an alpha channel for all particles to use over the time.

		 ]]></description>
<param><![CDATA[alphas alphas: An array of alpha values for the corresponding colors in the colors array; valid values go from 0 to 1. The value will be clamped between 0 and 1.

		 ]]></param>
<param><![CDATA[ratios: An array of color distribution ratios; valid values go from 0 to 255. This value defines the percentage of the width where the color is sampled at 100%. The value 0 represents the initial position, and 255 represents the final position. 

		 ]]></param>
</method>
<method name='setColors' fullname='flare.core:Particles3D/setColors' isStatic='false' isFinal='false' isOverride='false'  param_names='colors;ratios' param_types='Array;Array' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Set the colors for the particles over the time.

		 ]]></description>
<param><![CDATA[colors An array of RGB hexadecimal color values to be used in the gradient; for example, red is 0xFF0000, blue is 0x0000FF, and so on. You can specify up to 15 colors. For each color, be sure you specify a corresponding value in the alphas and ratios parameters.

		 ]]></param>
<param><![CDATA[ratios An array of color distribution ratios; valid values are 0 to 255. This value defines the percentage of the width where the color is sampled at 100%. The value 0 represents the initial position, and 255 represents the final position.

		 ]]></param>
</method>
<method name='start' fullname='flare.core:Particles3D/start' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Starts the emission of particles. 

		 This method reinitializes the buffers when worldPositions or worldVelocities are set to true, and may affect performance when using it with large amount of particles.

		 ]]></description>
<see><![CDATA[#pause()

		 ]]></see>
<see><![CDATA[#resume()

		 ]]></see>
</method>
<method name='updateBuffers' fullname='flare.core:Particles3D/private:updateBuffers' isStatic='false' isFinal='false' isOverride='false'  param_names='count' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='updateParticles' fullname='flare.core:Particles3D/private:updateParticles' isStatic='false' isFinal='false' isOverride='false'  param_names='currTime' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='alphaRatios' fullname='flare.core:Particles3D/alphaRatios/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 Get the ratios used for the alpha channel.

		 ]]></description>
<see><![CDATA[#setAlphas()

		 ]]></see>
</method>
<method name='alphas' fullname='flare.core:Particles3D/alphas/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 Gets the alpha values of the alpha channel.

		 ]]></description>
<see><![CDATA[#setAlphas()

		 ]]></see>
</method>
<method name='area' fullname='flare.core:Particles3D/area/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Gets or sets the emitter area where the particles are born. Big values might be needed for the effect to be noticeable.

		 ]]></description>
</method>
<method name='blendMode' fullname='flare.core:Particles3D/blendMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Gets or sets the blend mode used for the particles. Should be one of the blending constants defined in Particle3D class.

		 ]]></description>
<see><![CDATA[#BLEND_NONE

		 ]]></see>
<see><![CDATA[#BLEND_ADDITIVE

		 ]]></see>
<see><![CDATA[#BLEND_ALPHA_BLENDED

		 ]]></see>
<see><![CDATA[#BLEND_MULTIPLY

		 ]]></see>
<see><![CDATA[#BLEND_SCREEN

		 ]]></see>
</method>
<method name='blendTexture' fullname='flare.core:Particles3D/blendTexture/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Texture3D'>
</method>
<method name='colorRatios' fullname='flare.core:Particles3D/colorRatios/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 Gets the color ratios used for the gradient color channel. 

		 ]]></description>
<see><![CDATA[#setColors();

		 ]]></see>
</method>
<method name='colorTexture' fullname='flare.core:Particles3D/private:colorTexture/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Texture3D'>
</method>
<method name='colors' fullname='flare.core:Particles3D/colors/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 Gets the colors used for the gradient color channel.

		 ]]></description>
<see><![CDATA[#setColors();

		 ]]></see>
</method>
<method name='delay' fullname='flare.core:Particles3D/delay/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets a delay interval for the particles creation, expressed in seconds.

		 ]]></description>
</method>
<method name='endSize' fullname='flare.core:Particles3D/endSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
<description><![CDATA[

		 Gets or sets the final size of the particle.

		 ]]></description>
</method>
<method name='energy' fullname='flare.core:Particles3D/energy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Gets or sets the starting velocity of the particles, working as a range value. 

		 For example a value of 100, 0, 0 means that particles will be dispatched in a range of -100 to 100 in x-axis.

		 ]]></description>
<see><![CDATA[#area

		 ]]></see>
<see><![CDATA[#hemisphere

		 ]]></see>
</method>
<method name='gravityPower' fullname='flare.core:Particles3D/gravityPower/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='gravity' fullname='flare.core:Particles3D/gravity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Gets or sets the gravity vector of the emitter.

		 ]]></description>
<see><![CDATA[#gravityPower

		 ]]></see>
</method>
<method name='hemisphere' fullname='flare.core:Particles3D/hemisphere/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Gets or sets whatever the particles energy should dispatch in all directions or only up to the floor plane.

		 ]]></description>
<see><![CDATA[#energy

		 ]]></see>
</method>
<method name='inView' fullname='flare.core:Particles3D/inView/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='loops' fullname='flare.core:Particles3D/loops/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets ot sets the number of cylces for the emitter.

		 ]]></description>
</method>
<method name='material' fullname='flare.core:Particles3D/private:material/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.flsl:FLSLMaterial'>
</method>
<method name='numParticles' fullname='flare.core:Particles3D/numParticles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Gets or sets the number of particles to be used.

		 ]]></description>
</method>
<method name='randomFrame' fullname='flare.core:Particles3D/randomFrame/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Gets or sets whether the particles should use a random frame from the textureFrams property.

		 ]]></description>
<see><![CDATA[#textureFrames

		 ]]></see>
</method>
<method name='randomScale' fullname='flare.core:Particles3D/randomScale/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets a random scale range value for each particle.

		 ]]></description>
</method>
<method name='randomSpin' fullname='flare.core:Particles3D/randomSpin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets a random spin range value for each particle.

		 ]]></description>
</method>
<method name='randomVelocity' fullname='flare.core:Particles3D/randomVelocity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets a random velocity range value for each particle. 

		 ]]></description>
</method>
<method name='reverse' fullname='flare.core:Particles3D/reverse/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='shots' fullname='flare.core:Particles3D/shots/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Gets or sets the number of particles interval to emit trough the emitter duration. 

		 A value of zero means that particles are dispatched continuously. 

		 ]]></description>
</method>
<method name='sortMode' fullname='flare.core:Particles3D/sortMode/get' isStatic='false' isFinal='false' isOverride='true'  result_type='int'>
<description><![CDATA[

		 Gets or sets the sorting mode for the particles. Should be one of the constants defined in Particles3D. 

		 ]]></description>
<see><![CDATA[#SORT_NONE

		 ]]></see>
<see><![CDATA[#SORT_YOUNGEST_FIRST

		 ]]></see>
<see><![CDATA[#SORT_OLDEST_FIRST

		 ]]></see>
</method>
<method name='spin' fullname='flare.core:Particles3D/spin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets a start spin value for all particles.

		 ]]></description>
</method>
<method name='startSize' fullname='flare.core:Particles3D/startSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
<description><![CDATA[

		 Gets or sets the start size of all particles.

		 ]]></description>
</method>
<method name='textureFrames' fullname='flare.core:Particles3D/textureFrames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
<description><![CDATA[

		 Gets or sets the number of frames in x and y axis of the texture.

		 ]]></description>
<see><![CDATA[#randomFrame

		 ]]></see>
</method>
<method name='texture' fullname='flare.core:Particles3D/texture/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Texture3D'>
<description><![CDATA[

		 Gets or sets the base particle texture to use for all particles. 

		 ]]></description>
</method>
<method name='time' fullname='flare.core:Particles3D/time/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets the current emitter time, expressed in seconds. 

		 ]]></description>
</method>
<method name='useRandomColors' fullname='flare.core:Particles3D/useRandomColors/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Gets or sets whether the particles should use any random color based on the range provided in setColors method.

		 ]]></description>
<see><![CDATA[#setColors()

		 ]]></see>
</method>
<method name='velocity' fullname='flare.core:Particles3D/velocity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Gets or sets the initial velocity for all particles.

		 ]]></description>
</method>
<method name='worldPositions' fullname='flare.core:Particles3D/worldPositions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Gets or sets if the particles positions should be linked to the emitter as a regular child or they're parented the world coordinates. 

		 ]]></description>
</method>
<method name='worldVelocities' fullname='flare.core:Particles3D/worldVelocities/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Gets or sets if the particles velocities should be linked to the emitter as a regular child or they are parented the world coordinates.

		 ]]></description>
</method>
<method name='area' fullname='flare.core:Particles3D/area/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Vector3D' param_defaults='undefined' result_type='void'>
</method>
<method name='blendMode' fullname='flare.core:Particles3D/blendMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='blendTexture' fullname='flare.core:Particles3D/blendTexture/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flare.core:Texture3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Gets or sets a blending texture to use trough the particle's life.

		 ]]></description>
</method>
<method name='delay' fullname='flare.core:Particles3D/delay/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='endSize' fullname='flare.core:Particles3D/endSize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Point' param_defaults='undefined' result_type='void'>
</method>
<method name='energy' fullname='flare.core:Particles3D/energy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Vector3D' param_defaults='undefined' result_type='void'>
</method>
<method name='gravityPower' fullname='flare.core:Particles3D/gravityPower/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Gets or sets the curve intensity to use for the gravity parameter.

		 ]]></description>
<see><![CDATA[#gravity

		 ]]></see>
</method>
<method name='gravity' fullname='flare.core:Particles3D/gravity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Vector3D' param_defaults='undefined' result_type='void'>
</method>
<method name='hemisphere' fullname='flare.core:Particles3D/hemisphere/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='loops' fullname='flare.core:Particles3D/loops/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='numParticles' fullname='flare.core:Particles3D/numParticles/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='randomFrame' fullname='flare.core:Particles3D/randomFrame/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='randomScale' fullname='flare.core:Particles3D/randomScale/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='randomSpin' fullname='flare.core:Particles3D/randomSpin/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='randomVelocity' fullname='flare.core:Particles3D/randomVelocity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='reverse' fullname='flare.core:Particles3D/reverse/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='shots' fullname='flare.core:Particles3D/shots/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='sortMode' fullname='flare.core:Particles3D/sortMode/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='spin' fullname='flare.core:Particles3D/spin/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='startSize' fullname='flare.core:Particles3D/startSize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Point' param_defaults='undefined' result_type='void'>
</method>
<method name='textureFrames' fullname='flare.core:Particles3D/textureFrames/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Point' param_defaults='undefined' result_type='void'>
</method>
<method name='texture' fullname='flare.core:Particles3D/texture/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flare.core:Texture3D' param_defaults='undefined' result_type='void'>
</method>
<method name='time' fullname='flare.core:Particles3D/time/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='useRandomColors' fullname='flare.core:Particles3D/useRandomColors/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='velocity' fullname='flare.core:Particles3D/velocity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Vector3D' param_defaults='undefined' result_type='void'>
</method>
<method name='worldPositions' fullname='flare.core:Particles3D/worldPositions/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='worldVelocities' fullname='flare.core:Particles3D/worldVelocities/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='BLEND_ADDITIVE' fullname='flare.core:Particles3D/BLEND_ADDITIVE' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='BLEND_ALPHA_BLENDED' fullname='flare.core:Particles3D/BLEND_ALPHA_BLENDED' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='BLEND_MULTIPLY' fullname='flare.core:Particles3D/BLEND_MULTIPLY' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='BLEND_NONE' fullname='flare.core:Particles3D/BLEND_NONE' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='BLEND_SCREEN' fullname='flare.core:Particles3D/BLEND_SCREEN' type='int' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='COLOR_SAMPLES' fullname='flare.core:Particles3D/private:COLOR_SAMPLES' type='int' isStatic='true' isConst='true' defaultValue='256' >
</field>
<field name='SORT_NONE' fullname='flare.core:Particles3D/SORT_NONE' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='SORT_OLDEST_FIRST' fullname='flare.core:Particles3D/SORT_OLDEST_FIRST' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='SORT_YOUNGEST_FIRST' fullname='flare.core:Particles3D/SORT_YOUNGEST_FIRST' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='_alphaRatios' fullname='flare.core:Particles3D/private:_alphaRatios' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_alphas' fullname='flare.core:Particles3D/private:_alphas' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_area' fullname='flare.core:Particles3D/private:_area' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_blendMode' fullname='flare.core:Particles3D/private:_blendMode' type='int' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_buildQueued' fullname='flare.core:Particles3D/private:_buildQueued' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_colorRatios' fullname='flare.core:Particles3D/private:_colorRatios' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_colorTexture' fullname='flare.core:Particles3D/private:_colorTexture' type='flare.core:Texture3D' isStatic='false' isConst='false' >
</field>
<field name='_colors' fullname='flare.core:Particles3D/private:_colors' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_currIndex' fullname='flare.core:Particles3D/private:_currIndex' type='int' isStatic='false' isConst='false' >
</field>
<field name='_delay' fullname='flare.core:Particles3D/private:_delay' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_destFactor' fullname='flare.core:Particles3D/private:_destFactor' type='String' isStatic='false' isConst='false' defaultValue='one' >
</field>
<field name='_endSize' fullname='flare.core:Particles3D/private:_endSize' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_energy' fullname='flare.core:Particles3D/private:_energy' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_gravity' fullname='flare.core:Particles3D/private:_gravity' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_hemisphere' fullname='flare.core:Particles3D/private:_hemisphere' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_init' fullname='flare.core:Particles3D/private:_init' type='flare.core:ParticleInit3D' isStatic='false' isConst='false' >
</field>
<field name='_lastCountOffset' fullname='flare.core:Particles3D/private:_lastCountOffset' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_lastTime' fullname='flare.core:Particles3D/private:_lastTime' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_material' fullname='flare.core:Particles3D/private:_material' type='flare.flsl:FLSLMaterial' isStatic='false' isConst='false' >
</field>
<field name='_matrix' fullname='flare.core:Particles3D/private:_matrix' type='flash.geom:Matrix' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_numParticles' fullname='flare.core:Particles3D/private:_numParticles' type='int' isStatic='false' isConst='false' >
</field>
<field name='_paused' fullname='flare.core:Particles3D/private:_paused' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_posBytes' fullname='flare.core:Particles3D/private:_posBytes' type='flash.utils:ByteArray' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_positionSurface' fullname='flare.core:Particles3D/private:_positionSurface' type='flare.core:Surface3D' isStatic='false' isConst='false' >
</field>
<field name='_prevTime' fullname='flare.core:Particles3D/private:_prevTime' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_randomFrame' fullname='flare.core:Particles3D/private:_randomFrame' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_randomScale' fullname='flare.core:Particles3D/private:_randomScale' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_randomSpin' fullname='flare.core:Particles3D/private:_randomSpin' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_randomVelocity' fullname='flare.core:Particles3D/private:_randomVelocity' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_reverse' fullname='flare.core:Particles3D/private:_reverse' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_shape' fullname='flare.core:Particles3D/private:_shape' type='flash.display:Shape' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_shots' fullname='flare.core:Particles3D/private:_shots' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_sortParticleMode' fullname='flare.core:Particles3D/private:_sortParticleMode' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_spin' fullname='flare.core:Particles3D/private:_spin' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_srcFactor' fullname='flare.core:Particles3D/private:_srcFactor' type='String' isStatic='false' isConst='false' defaultValue='one' >
</field>
<field name='_startSize' fullname='flare.core:Particles3D/private:_startSize' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_started' fullname='flare.core:Particles3D/private:_started' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_surface' fullname='flare.core:Particles3D/private:_surface' type='flare.core:Surface3D' isStatic='false' isConst='false' >
</field>
<field name='_temp' fullname='flare.core:Particles3D/private:_temp' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_textureFrames' fullname='flare.core:Particles3D/private:_textureFrames' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_time' fullname='flare.core:Particles3D/private:_time' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_useRandomColors' fullname='flare.core:Particles3D/private:_useRandomColors' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_velBytes' fullname='flare.core:Particles3D/private:_velBytes' type='flash.utils:ByteArray' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_velocitySurface' fullname='flare.core:Particles3D/private:_velocitySurface' type='flare.core:Surface3D' isStatic='false' isConst='false' >
</field>
<field name='_velocity' fullname='flare.core:Particles3D/private:_velocity' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_worldPositions' fullname='flare.core:Particles3D/private:_worldPositions' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_worldVelocities' fullname='flare.core:Particles3D/private:_worldVelocities' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='data' fullname='flare.core:Particles3D/private:data' type='Class' isStatic='true' isConst='false' >
</field>
<field name='duration' fullname='flare.core:Particles3D/duration' type='Number' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[

		 Gets or sets the cycle length of the emitter. In seconds.

		 ]]></description>
</field>
<field name='flsl' fullname='flare.core:Particles3D/private:flsl' type='flash.utils:ByteArray' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='initParticleFunction' fullname='flare.core:Particles3D/initParticleFunction' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[

		 Gets or sets a custom callback function to initializate the particles.

		 The function should receive the emitter, the particle index and the init properties objects.

		 For example: myCustomParticles( emitter:Particles3D, index:int, init:ParticleInit3D ):void

		 Inside the function, you can change the init particle properties such as position, velocity, etc.

		 ]]></description>
</field>
<classRec name='Shape3D' fullname='flare.core:Shape3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Shape3D.as' namespace='flare.core' access='public' baseclass='flare.core:Pivot3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Shape3D class represents a set of splines (Spline3D).

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Shape3D' fullname='flare.core:Shape3D/Shape3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='' result_type='*'>
<description><![CDATA[

		 Creates a new set of splines.             

		 ]]></description>
<param><![CDATA[name Object name.      

		 ]]></param>
</method>
<method name='clone' fullname='flare.core:Shape3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.core:Pivot3D'>
</method>
<method name='getPoint' fullname='flare.core:Shape3D/getPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='value;global;out' param_types='Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the position on the spline depending on the “value” parameter. 

		 This method will take into consideration all the splines (Spline3D) that are contained in the Shape3D. 

		 For example, if two Spline3D objects are contained, a value ranging from 0.0 to 0.5 in the “value” parameter will locate the resulting

		 position on the first spline, whereas a value ranging from 0.5 to 1.0 will locate the resulting  position on the second spline.  

		 ]]></description>
<param><![CDATA[value 0 to 1 value that represents the position in time on the spline.               

		 ]]></param>
<param><![CDATA[global Sets whether the value will be returned in the global space or local space of the Shape3D. The default value is 'true'.

		 ]]></param>
<param><![CDATA[out Vector where the position will be returned. 

		 ]]></param>
<return><![CDATA[If an 'out' value has been specified, the same object is returned. Otherwise, a new vector with the position is returned.

		 ]]></return>
</method>
<method name='getTangent' fullname='flare.core:Shape3D/getTangent' isStatic='false' isFinal='false' isOverride='false'  param_names='value;global;out' param_types='Number;Boolean;flash.geom:Vector3D' param_defaults='undefined;true;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the direction on the spline in a given position.          

		 This method will take into consideration all the splines (Spline3D) that are contained in the Shape3D. 

		 For example, if two Spline3D objects are contained, a value ranging from 0.0 to 0.5 in the “value” parameter will locate the resulting

		 position on the first spline, whereas a value ranging from 0.5 to 1.0 will locate the resulting  position on the second spline.

		 ]]></description>
<param><![CDATA[value 0 to 1 value that represents the position in time on the spline.               

		 ]]></param>
<param><![CDATA[global Sets whether the value will be returned in the global space or local space of the Shape3D. The default value is 'true'.

		 ]]></param>
<param><![CDATA[out Vector where the direction will be returned. 

		 ]]></param>
<return><![CDATA[If an 'out' value has been specified, the same object is returned. Otherwise, a new vector with the position is returned.

		 ]]></return>
<see><![CDATA[Pivot3D#setOrientation() Pivot3D setOrientation()

		 ]]></see>
</method>
<method name='toString' fullname='flare.core:Shape3D/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='color' fullname='flare.core:Shape3D/color' type='uint' isStatic='false' isConst='false' defaultValue='0xffffff' >
<description><![CDATA[

		 Gets or sets the shape line color.

		 ]]></description>
</field>
<field name='splines' fullname='flare.core:Shape3D/splines' type='Vector$flare.core:Spline3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Spline3D-type vector with the splines contained in the Shape3D.

		 ]]></description>
</field>
<classRec name='Lines3D' fullname='flare.core:Lines3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\core\Lines3D.as' namespace='flare.core' access='public' baseclass='flare.core:Mesh3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Lines3D class is a helper to work with 3D pixel thickness lines.

	 ]]></description>
</classRec>
<method name='Lines3D' fullname='flare.core:Lines3D/Lines3D' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='lines' result_type='*'>
</method>
<method name='clear' fullname='flare.core:Lines3D/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clone' fullname='flare.core:Lines3D/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.core:Pivot3D'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='contextEvent' fullname='flare.core:Lines3D/private:contextEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='dispose' fullname='flare.core:Lines3D/dispose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='download' fullname='flare.core:Lines3D/download' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='draw' fullname='flare.core:Lines3D/draw' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lineStyle' fullname='flare.core:Lines3D/lineStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='thickness;color;alpha' param_types='Number;uint;Number' param_defaults='1;0xffffff;1' result_type='void'>
</method>
<method name='lineTo' fullname='flare.core:Lines3D/lineTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='moveTo' fullname='flare.core:Lines3D/moveTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;z' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='upload' fullname='flare.core:Lines3D/upload' isStatic='false' isFinal='false' isOverride='true'  param_names='scene;includeChildren' param_types='flare.basic:Scene3D;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_alpha' fullname='flare.core:Lines3D/private:_alpha' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_b' fullname='flare.core:Lines3D/private:_b' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_color' fullname='flare.core:Lines3D/private:_color' type='uint' isStatic='false' isConst='false' defaultValue='0xffffff' >
</field>
<field name='_colors' fullname='flare.core:Lines3D/private:_colors' type='Vector$Vector$Number' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_g' fullname='flare.core:Lines3D/private:_g' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_lastSize' fullname='flare.core:Lines3D/private:_lastSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_lx' fullname='flare.core:Lines3D/private:_lx' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_ly' fullname='flare.core:Lines3D/private:_ly' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_lz' fullname='flare.core:Lines3D/private:_lz' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_material' fullname='flare.core:Lines3D/private:_material' type='flare.flsl:FLSLMaterial' isStatic='false' isConst='false' >
</field>
<field name='_r' fullname='flare.core:Lines3D/private:_r' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_surf' fullname='flare.core:Lines3D/private:_surf' type='flare.core:Surface3D' isStatic='false' isConst='false' >
</field>
<field name='_thickness' fullname='flare.core:Lines3D/private:_thickness' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_uploaded' fullname='flare.core:Lines3D/private:_uploaded' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='data' fullname='flare.core:Lines3D/private:data' type='flash.utils:ByteArray' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='flsl' fullname='flare.core:Lines3D/private:flsl' type='Class' isStatic='true' isConst='false' >
</field>
<field name='materials' fullname='flare.core:Lines3D/private:materials' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='size' fullname='flare.core:Lines3D/private:size' type='flare.flsl:FLSLParam' isStatic='true' isConst='false' >
</field>
<classRec name='Scene3D' fullname='flare.basic:Scene3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\basic\Scene3D.as' namespace='flare.basic' access='public' baseclass='flare.core:Pivot3D' isFinal='false' isDynamic='false' >
<description><![CDATA[	

	 The Scene3D class is the main element, container and manager of all the 3d resources and objects.

	 

	 <p>The Scene3D class also has a Clock3D instance that manages update and render cycles. The update event indicates the need to update scene elements and the render and

	 postRender events allow full control before and after the render process.</p>

	 

	 <p>Once the scene has been created, use addChild or addChildFromFile to include 3d objects. This will dispatch the progress 

	 and complete events to control the loading process for external files.</p>

	 

	 <p>The scene also creates a Camera3D object to view the scene.

	 The canvas size will take Stage size values by default. To change the rendering area size, use the setViewport method.</p>	  

	 

	 ]]></description>
<example><![CDATA[

	 This example shows the basic creation process of a scene:

	 This example shows how to load external 3d objects into the scene.     

	 <listing version="3.0">

import flare.basic.~~

   

// creates the scene.

var scene:Scene3D = new Scene3D( this )



// adds the events to manage the object loading process.  

scene.addEventListener( Scene3D.PROGRESS_EVENT, progressEvent )

scene.addEventListener( Scene3D.COMPLETE_EVENT, completeEvent )



// loads 3d models from external files.

scene.addChildFromFile( "myModel1.f3d" )

scene.addChildFromFile( "myModel2.f3d" )

scene.addChildFromFile( "myModel3.f3d" )



function progressEvent( e:Event ):void

{

    // shows loading progress (0-100).

    trace( scene.loadProgress )

}



function completeEvent( e:Event ):void

{

    // once the scene loading process has been completed, elements can be accessed and the scene can be updated.

    scene.addEventListener( Scene3D.UPDATE_EVENT, updateEvent )

}



function updateEvent( e:Event ):void

{

    // update scene here.

}

	 </listing>

	 

	 ]]></example>
<see><![CDATA[../core/Pivot3D.html#addChild() addChild()

	 ]]></see>
<see><![CDATA[Scene3D.html#addChildFromFile() addChildFromFile()

	 ]]></see>
<see><![CDATA[flare.core.Camera3D

	 ]]></see>
<metadata>
	<Event owner='flare.basic:Scene3D' name='ioError' type='flash.events.IOErrorEvent' >
<description><![CDATA[

	 Dispatched if a call to load() results in a fatal error that terminates the download.

	 ]]></description>
<eventType><![CDATA[flash.events.IOErrorEvent.IO_ERROR

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.basic:Scene3D' name='progress' type='flash.events.ProgressEvent' >
<description><![CDATA[

	 This event occurs whenever the loading progress of the elements of a scene is modified.                 

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.basic:Scene3D' name='complete' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs once the loading process of all the scene elements has been completed.               

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.basic:Scene3D' name='postRender' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs after rendering the scene.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.basic:Scene3D' name='render' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs before rendering the scene.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='flare.basic:Scene3D' name='update' type='flash.events.Event' >
<description><![CDATA[

	 This event occurs whenever the program must be updated. This event is synchronized with the frames-per-second rate defined in Device3D and bit rate is constant.

	 ]]></description>
<eventType><![CDATA[flash.events.Event

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='Scene3D' fullname='flare.basic:Scene3D/Scene3D' isStatic='false' isFinal='false' isOverride='false'  param_names='container;file' param_types='flash.display:DisplayObjectContainer;String' param_defaults='undefined;' result_type='*'>
<description><![CDATA[

		 Create a new Scene3D object.

		 ]]></description>
<param><![CDATA[container Object that will serve as container to render the scene. Preferably, it should be an empty MovieClip or Sprite. It must not be rotated or scaled.   

		 ]]></param>
<param><![CDATA[file Optional name of the ~~.f3d file to be loaded into the scene. The file parameter is optional. If null, an empty scene is created. More ~~.f3d files can be subsequently added using the addChild or addChildFromFile method.

		 ]]></param>
</method>
<method name='addChildFromFile' fullname='flare.basic:Scene3D/addChildFromFile' isStatic='false' isFinal='false' isOverride='false'  param_names='request;parent;loaderClass' param_types='*;flare.core:Pivot3D;Class' param_defaults='undefined;null;null' result_type='flare.core:Pivot3D'>
<description><![CDATA[

		 Loads and adds a Flare3D (~~.f3d) file from an external file.  

		 ]]></description>
<param><![CDATA[file File path.

		 ]]></param>
<param><![CDATA[parent pivot that will serve as container for the objects in the file. 

		 If ‘parent’ is null, a container with the name of the file to be added to the scene is created.

		 ]]></param>
<return><![CDATA[The Flare3DLoader object that loads the file. The loaded elements will become available only after the “complete” event of the scene.

		 ]]></return>
</method>
<method name='addTextureFromFile' fullname='flare.basic:Scene3D/addTextureFromFile' isStatic='false' isFinal='false' isOverride='false'  param_names='request;optimizeForRenderToTexture;format' param_types='*;Boolean;int' param_defaults='undefined;false;0' result_type='flare.core:Texture3D'>
<description><![CDATA[

		 Loads a texture from an external file.       

		 ]]></description>
<param><![CDATA[file File path.       

		 ]]></param>
<return><![CDATA[The loaded texture. The texture will become available after the “complete” event of the scene. 

		 ]]></return>
</method>
<method name='addedToStageEvent' fullname='flare.basic:Scene3D/private:addedToStageEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='completeResourceEvent' fullname='flare.basic:Scene3D/private:completeResourceEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='flare.basic:Scene3D/dispose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='drawQuadTexture' fullname='flare.basic:Scene3D/drawQuadTexture' isStatic='false' isFinal='false' isOverride='false'  param_names='texture;x;y;width;height;material' param_types='flare.core:Texture3D;Number;Number;Number;Number;flare.materials:Material3D' param_defaults='undefined;undefined;undefined;undefined;undefined;null' result_type='void'>
</method>
<method name='draw' fullname='flare.basic:Scene3D/draw' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='endFrame' fullname='flare.basic:Scene3D/endFrame' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='enterFrameEvent' fullname='flare.basic:Scene3D/private:enterFrameEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='freeMemory' fullname='flare.basic:Scene3D/freeMemory' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Forces to free all unused memory.

		 When you upload multiple files, textures, materials into the GPU, those resources will remain active until you release them.

		 ]]></description>
</method>
<method name='getPointScreenCoords' fullname='flare.basic:Scene3D/getPointScreenCoords' isStatic='false' isFinal='false' isOverride='false'  param_names='point;out' param_types='flash.geom:Vector3D;flash.geom:Vector3D' param_defaults='undefined;null' result_type='flash.geom:Vector3D'>
<description><![CDATA[

		 Returns the coordinates of an arbitrary world point respect to the screen. 

		 The returned values are relative to the viewPort size that is currently used.      

		 ]]></description>
<param><![CDATA[out If a vector is specified, this vector will be filled with the returned values.

		 ]]></param>
<return><![CDATA[The vector with the coordinates. 

		 ]]></return>
</method>
<method name='insertIntoScene' fullname='flare.basic:Scene3D/insertIntoScene' isStatic='false' isFinal='false' isOverride='false'  param_names='pivot;update;render;interactive' param_types='flare.core:Pivot3D;Boolean;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseDownEvent' fullname='flare.basic:Scene3D/private:mouseDownEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseMoveEvent' fullname='flare.basic:Scene3D/private:mouseMoveEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseUpEvent' fullname='flare.basic:Scene3D/private:mouseUpEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseWheelEvent' fullname='flare.basic:Scene3D/private:mouseWheelEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='pause' fullname='flare.basic:Scene3D/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Pauses the “update” event and starts shooting the “paused” event.

		 ]]></description>
<see><![CDATA[#resume()

		 ]]></see>
</method>
<method name='registerClass' fullname='flare.basic:Scene3D/registerClass' isStatic='false' isFinal='false' isOverride='false'  param_names='rest' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='removeFromScene' fullname='flare.basic:Scene3D/removeFromScene' isStatic='false' isFinal='false' isOverride='false'  param_names='pivot;update;render;interactive' param_types='flare.core:Pivot3D;Boolean;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removedFromStageEvent' fullname='flare.basic:Scene3D/private:removedFromStageEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='render' fullname='flare.basic:Scene3D/render' isStatic='false' isFinal='false' isOverride='false'  param_names='camera;clearDepth;target' param_types='flare.core:Camera3D;Boolean;flare.core:Texture3D' param_defaults='null;false;null' result_type='void'>
<description><![CDATA[

		 Renders the current scene frame. This method is called by the scene automatically but can force the rendering if necessary or if the scene is paused.

		 This method also will dispatch the scene 'render' event but not the 'postRender' event.

		 ]]></description>
</method>
<method name='resizeStageEvent' fullname='flare.basic:Scene3D/private:resizeStageEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='resume' fullname='flare.basic:Scene3D/resume' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Exits pause mode.

		 ]]></description>
<see><![CDATA[#pause()

		 ]]></see>
</method>
<method name='setLayerSortMode' fullname='flare.basic:Scene3D/setLayerSortMode' isStatic='false' isFinal='false' isOverride='false'  param_names='layer;mode' param_types='int;int' param_defaults='undefined;unknown' result_type='void'>
<description><![CDATA[

		 Specifies a layer to be sorted per object on each frame. This is very useful to draw correctly alpha objects that needs to be sorted.

		 This property is property is used in conjunction with Pivot3D sortMode property.

		 ]]></description>
<param><![CDATA[layer Index of the layer to be sorted.

		 ]]></param>
<param><![CDATA[mode The sort mode should be one of the constants SORT_FRONT_TO_BACK, SORT_BACK_TO_FRONT or SORT_NONE.

		 ]]></param>
</method>
<method name='setViewport' fullname='flare.basic:Scene3D/setViewport' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;width;height;antialias' param_types='Number;Number;Number;Number;int' param_defaults='0;0;640;480;0' result_type='void'>
<description><![CDATA[

		 Sets the dimensions of the canvas rendering area. 

		 ]]></description>
<param><![CDATA[x left maring of rendering area in pixels.

		 ]]></param>
<param><![CDATA[y Top maring of rendering area in pixels.

		 ]]></param>
<param><![CDATA[width Width of rendering area in pixels.

		 ]]></param>
<param><![CDATA[height Height of rendering area in pixels.

		 ]]></param>
<param><![CDATA[antialias an int selecting anti-aliasing quality. 0 is no anti-aliasing. Correlates to the number of sub-samples; a value of 2 is generally the minimum, although some systems with anti-alias with a value of one. More anti-aliasing is more depanding on the GPU and may impact performance.

		 ]]></param>
</method>
<method name='setupConstants' fullname='flare.basic:Scene3D/setupConstants' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Updates global constants for each frame.

		 ]]></description>
</method>
<method name='setupFrame' fullname='flare.basic:Scene3D/setupFrame' isStatic='false' isFinal='false' isOverride='false'  param_names='camera' param_types='flare.core:Camera3D' param_defaults='null' result_type='void'>
<description><![CDATA[

		 This method prepares the scene to be rendered. 

		 The render method call to this before render. You should only use this function if you want to

		 draw manually specific objects.

		 ]]></description>
<param><![CDATA[camera

		 ]]></param>
</method>
<method name='sortByPriorityAsc' fullname='flare.basic:Scene3D/private:sortByPriorityAsc' isStatic='false' isFinal='false' isOverride='false'  param_names='data;left;right' param_types='Vector$flare.core:Pivot3D;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='sortByPriorityDesc' fullname='flare.basic:Scene3D/private:sortByPriorityDesc' isStatic='false' isFinal='false' isOverride='false'  param_names='data;left;right' param_types='Vector$flare.core:Pivot3D;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='stageContextEvent' fullname='flare.basic:Scene3D/private:stageContextEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='updateMouseEvents' fullname='flare.basic:Scene3D/updateMouseEvents' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 This method forces to update mouse events for all 3D objects in the scene.

		 ]]></description>
</method>
<method name='update' fullname='flare.basic:Scene3D/update' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[

		 Forces to update the scene and animations and will dispatch the scene 'update' event.

		 ]]></description>
</method>
<method name='antialias' fullname='flare.basic:Scene3D/antialias/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 An int selecting anti-aliasing quality. 0 is no anti-aliasing. Correlates to the number of sub-samples; a value of 2 is generally the minimum, although some systems with anti-alias with a value of one. More anti-aliasing is more depanding on the GPU and may impact performance.

		 ]]></description>
</method>
<method name='autoResize' fullname='flare.basic:Scene3D/autoResize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='backgroundColor' fullname='flare.basic:Scene3D/backgroundColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='camera' fullname='flare.basic:Scene3D/camera/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Camera3D'>
<description><![CDATA[

		 Sets or returns the camera to be used for rendering.

		 ]]></description>
<see><![CDATA[flare.core.Camera3D

		 ]]></see>
</method>
<method name='context' fullname='flare.basic:Scene3D/context/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display3D:Context3D'>
<description><![CDATA[

		 Returns the context used for rendering.  

		 ]]></description>
</method>
<method name='enableUpdateAndRender' fullname='flare.basic:Scene3D/enableUpdateAndRender/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Enables or disable the automatic update, render and postRender events of the scene.

		 Seting this property to false will allow you to manage your own update and render loop, calling to those methods manually.

		 ]]></description>
<see><![CDATA[#update()

		 ]]></see>
<see><![CDATA[#render()

		 ]]></see>
</method>
<method name='frameRate' fullname='flare.basic:Scene3D/frameRate/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets and sets the frame rate of the 3d scene only for the "update" event. The frame rate is defined as frames per second.

		 ]]></description>
</method>
<method name='loadProgress' fullname='flare.basic:Scene3D/loadProgress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets the global loading process of the scene.

		 The returned value is a percent value between 0 and 100.

		 ]]></description>
</method>
<method name='mouseEnabled' fullname='flare.basic:Scene3D/mouseEnabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='parent' fullname='flare.basic:Scene3D/parent/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.core:Pivot3D'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='paused' fullname='flare.basic:Scene3D/paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns 'true' if the scene is paused.

		 ]]></description>
</method>
<method name='profile' fullname='flare.basic:Scene3D/profile/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='renderList' fullname='flare.basic:Scene3D/renderList/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$flare.core:Pivot3D'>
<description><![CDATA[

		 Gets access to the render list.

		 ]]></description>
</method>
<method name='renderTime' fullname='flare.basic:Scene3D/renderTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns time taken to render the scene, including lights, object occlusion, drawing, etc.., in milliseconds.

		 The returned time, does not include the present call.

		 ]]></description>
</method>
<method name='rendersPerSecond' fullname='flare.basic:Scene3D/rendersPerSecond/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the rendering frame rate for statistical purposes.

		 ]]></description>
</method>
<method name='scene' fullname='flare.basic:Scene3D/scene/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flare.basic:Scene3D'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='stageIndex' fullname='flare.basic:Scene3D/stageIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Gets the associated Stage3D index.

		 ]]></description>
</method>
<method name='targetTexture' fullname='flare.basic:Scene3D/targetTexture/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flare.core:Texture3D'>
</method>
<method name='updateList' fullname='flare.basic:Scene3D/updateList/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$flare.core:Pivot3D'>
<description><![CDATA[

		 Gets access to the update list.

		 ]]></description>
</method>
<method name='updateTime' fullname='flare.basic:Scene3D/updateTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the time taken to update the scene in milliseconds.   

		 ]]></description>
</method>
<method name='updatesPerSecond' fullname='flare.basic:Scene3D/updatesPerSecond/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the update frame rate for statistical purposes.

		 ]]></description>
</method>
<method name='viewPort' fullname='flare.basic:Scene3D/viewPort/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
<description><![CDATA[

		 Gets the viewport area associated to the Stage3D.

		 ]]></description>
</method>
<method name='visible' fullname='flare.basic:Scene3D/visible/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='antialias' fullname='flare.basic:Scene3D/antialias/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='autoResize' fullname='flare.basic:Scene3D/autoResize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 This property forces to the scene to take the stage dimensions when the stage is resized if is setted to true.

		 Also changes the stage.align to topLeft and sets the stage.scaleMode to noScale.

		 ]]></description>
</method>
<method name='backgroundColor' fullname='flare.basic:Scene3D/backgroundColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='camera' fullname='flare.basic:Scene3D/camera/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flare.core:Camera3D' param_defaults='undefined' result_type='void'>
</method>
<method name='enableUpdateAndRender' fullname='flare.basic:Scene3D/enableUpdateAndRender/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='frameRate' fullname='flare.basic:Scene3D/frameRate/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='mouseEnabled' fullname='flare.basic:Scene3D/mouseEnabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Enables or disable all mouse scene events.

		 ]]></description>
</method>
<method name='parent' fullname='flare.basic:Scene3D/parent/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='flare.core:Pivot3D' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='profile' fullname='flare.basic:Scene3D/profile/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='showLogo' fullname='flare.basic:Scene3D/showLogo/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Shows or hides the Flare3D watermak logo for debugging purposes.

		 This property only works on comercial versions of Flare3D or if the content is running using a Flash Player Debugger version.

		 If the library is a trial version and the content is runnung under a Flash Player release version, this property will not take any effect.

		 ]]></description>
</method>
<method name='showMenu' fullname='flare.basic:Scene3D/showMenu/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Shows or hides the Flare3D version on the right click menu.

		 This property should be setted inmediaelly after the scene creation.

		 ]]></description>
</method>
<method name='targetTexture' fullname='flare.basic:Scene3D/targetTexture/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flare.core:Texture3D' param_defaults='undefined' result_type='void'>
</method>
<method name='visible' fullname='flare.basic:Scene3D/visible/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='COMPLETE_EVENT' fullname='flare.basic:Scene3D/COMPLETE_EVENT' type='String' isStatic='true' isConst='true' defaultValue='complete' >
<description><![CDATA[ Defines the value for the “complete” event. ]]></description>
</field>
<field name='PAUSED_EVENT' fullname='flare.basic:Scene3D/PAUSED_EVENT' type='String' isStatic='true' isConst='true' defaultValue='paused' >
<description><![CDATA[ Defines the value for the “paused” event. ]]></description>
</field>
<field name='POSTRENDER_EVENT' fullname='flare.basic:Scene3D/POSTRENDER_EVENT' type='String' isStatic='true' isConst='true' defaultValue='postRender' >
<description><![CDATA[ Defines the value for the “postRender” event. ]]></description>
</field>
<field name='PROGRESS_EVENT' fullname='flare.basic:Scene3D/PROGRESS_EVENT' type='String' isStatic='true' isConst='true' defaultValue='progress' >
<description><![CDATA[ Defines the value for the “progress” event. ]]></description>
</field>
<field name='RENDER_EVENT' fullname='flare.basic:Scene3D/RENDER_EVENT' type='String' isStatic='true' isConst='true' defaultValue='render' >
<description><![CDATA[ Defines the value for the “render” event. ]]></description>
</field>
<field name='SORT_BACK_TO_FRONT' fullname='flare.basic:Scene3D/SORT_BACK_TO_FRONT' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='SORT_FRONT_TO_BACK' fullname='flare.basic:Scene3D/SORT_FRONT_TO_BACK' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='SORT_NONE' fullname='flare.basic:Scene3D/SORT_NONE' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='UPDATE_EVENT' fullname='flare.basic:Scene3D/UPDATE_EVENT' type='String' isStatic='true' isConst='true' defaultValue='update' >
<description><![CDATA[ Defines the value for the update” event. ]]></description>
</field>
<field name='_antialias' fullname='flare.basic:Scene3D/private:_antialias' type='int' isStatic='false' isConst='false' defaultValue='2' >
</field>
<field name='_autoResize' fullname='flare.basic:Scene3D/private:_autoResize' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_camera' fullname='flare.basic:Scene3D/private:_camera' type='flare.core:Camera3D' isStatic='false' isConst='false' >
</field>
<field name='_clipped' fullname='flare.basic:Scene3D/private:_clipped' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_container' fullname='flare.basic:Scene3D/private:_container' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='_context3D' fullname='flare.basic:Scene3D/private:_context3D' type='flash.display3D:Context3D' isStatic='false' isConst='false' >
</field>
<field name='_currTime' fullname='flare.basic:Scene3D/private:_currTime' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_dispatchRenderEvent' fullname='flare.basic:Scene3D/private:_dispatchRenderEvent' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_down' fullname='flare.basic:Scene3D/private:_down' type='flare.core:Mesh3D' isStatic='false' isConst='false' >
</field>
<field name='_enableUpdateAndRender' fullname='flare.basic:Scene3D/private:_enableUpdateAndRender' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_fist' fullname='flare.basic:Scene3D/private:_fist' type='' isStatic='false' isConst='false' >
</field>
<field name='_frameCount' fullname='flare.basic:Scene3D/private:_frameCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_frameRate' fullname='flare.basic:Scene3D/private:_frameRate' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_info' fullname='flare.basic:Scene3D/private:_info' type='flare.collisions:CollisionInfo' isStatic='false' isConst='false' >
</field>
<field name='_input' fullname='flare.basic:Scene3D/private:_input' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_interactive' fullname='flare.basic:Scene3D/private:_interactive' type='flare.collisions:MouseCollision' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_last' fullname='flare.basic:Scene3D/private:_last' type='flare.collisions:CollisionInfo' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_layers' fullname='flare.basic:Scene3D/private:_layers' type='Vector$Scene3D.as$32:LayerSort' isStatic='false' isConst='false' >
</field>
<field name='_lights' fullname='flare.basic:Scene3D/private:_lights' type='Vector$flare.core:Light3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_mouseEnabled' fullname='flare.basic:Scene3D/private:_mouseEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_pausedEvent' fullname='flare.basic:Scene3D/private:_pausedEvent' type='flash.events:Event' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_paused' fullname='flare.basic:Scene3D/private:_paused' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_prEvent' fullname='flare.basic:Scene3D/private:_prEvent' type='flash.events:Event' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_profile' fullname='flare.basic:Scene3D/private:_profile' type='String' isStatic='false' isConst='false' >
</field>
<field name='_quadMaterial' fullname='flare.basic:Scene3D/private:_quadMaterial' type='flare.materials:QuadMaterial' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_renderCount' fullname='flare.basic:Scene3D/private:_renderCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_renderEvent' fullname='flare.basic:Scene3D/private:_renderEvent' type='flash.events:Event' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_renderIndex' fullname='flare.basic:Scene3D/private:_renderIndex' type='int' isStatic='false' isConst='false' >
</field>
<field name='_renderLength' fullname='flare.basic:Scene3D/private:_renderLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_renderList' fullname='flare.basic:Scene3D/private:_renderList' type='Vector$flare.core:Pivot3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_renderTime' fullname='flare.basic:Scene3D/private:_renderTime' type='int' isStatic='false' isConst='false' >
</field>
<field name='_rendersPerSecond' fullname='flare.basic:Scene3D/private:_rendersPerSecond' type='int' isStatic='false' isConst='false' >
</field>
<field name='_secondTargetTexture' fullname='flare.basic:Scene3D/private:_secondTargetTexture' type='flare.core:Texture3D' isStatic='false' isConst='false' >
</field>
<field name='_showLogo' fullname='flare.basic:Scene3D/private:_showLogo' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_showMenu' fullname='flare.basic:Scene3D/private:_showMenu' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_stage3D' fullname='flare.basic:Scene3D/private:_stage3D' type='flash.display:Stage3D' isStatic='false' isConst='false' >
</field>
<field name='_stageIndex' fullname='flare.basic:Scene3D/private:_stageIndex' type='int' isStatic='false' isConst='false' >
</field>
<field name='_stages3d' fullname='flare.basic:Scene3D/private:_stages3d' type='int' isStatic='true' isConst='false' >
</field>
<field name='_startTime' fullname='flare.basic:Scene3D/private:_startTime' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_targetMaterial' fullname='flare.basic:Scene3D/private:_targetMaterial' type='flare.materials:Material3D' isStatic='false' isConst='false' >
</field>
<field name='_targetQuad' fullname='flare.basic:Scene3D/private:_targetQuad' type='flare.primitives:Quad' isStatic='false' isConst='false' >
</field>
<field name='_targetTexture' fullname='flare.basic:Scene3D/private:_targetTexture' type='flare.core:Texture3D' isStatic='false' isConst='false' >
</field>
<field name='_temp' fullname='flare.basic:Scene3D/private:_temp' type='flash.geom:Vector3D' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_tick' fullname='flare.basic:Scene3D/private:_tick' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_time' fullname='flare.basic:Scene3D/private:_time' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_timer' fullname='flare.basic:Scene3D/private:_timer' type='int' isStatic='false' isConst='false' >
</field>
<field name='_updateCount' fullname='flare.basic:Scene3D/private:_updateCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_updateEvent' fullname='flare.basic:Scene3D/private:_updateEvent' type='flash.events:Event' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_updateIndex' fullname='flare.basic:Scene3D/private:_updateIndex' type='int' isStatic='false' isConst='false' >
</field>
<field name='_updateLength' fullname='flare.basic:Scene3D/private:_updateLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_updateList' fullname='flare.basic:Scene3D/private:_updateList' type='Vector$flare.core:Pivot3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_updateStaticIndex' fullname='flare.basic:Scene3D/private:_updateStaticIndex' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_updateTime' fullname='flare.basic:Scene3D/private:_updateTime' type='int' isStatic='false' isConst='false' >
</field>
<field name='_updated' fullname='flare.basic:Scene3D/private:_updated' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_updatesPerSecond' fullname='flare.basic:Scene3D/private:_updatesPerSecond' type='int' isStatic='false' isConst='false' >
</field>
<field name='_viewPort' fullname='flare.basic:Scene3D/private:_viewPort' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<field name='clearColor' fullname='flare.basic:Scene3D/clearColor' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[

		 Color to use to clear the back buffer.

		 ]]></description>
</field>
<field name='ignoreInvisibleUnderMouse' fullname='flare.basic:Scene3D/ignoreInvisibleUnderMouse' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[

		 Allow to detect mouse events with non visible objects such as references or simplified geometry.

		 ]]></description>
</field>
<field name='library' fullname='flare.basic:Scene3D/library' type='flare.system:Library3D' isStatic='false' isConst='false' >
<description><![CDATA[

		 Library3D instance that manages all scene resources.

		 ]]></description>
</field>
<field name='lights' fullname='flare.basic:Scene3D/lights' type='flare.materials.filters:LightFilter' isStatic='false' isConst='false' >
<description><![CDATA[

		 A reference to a LightFilter that manage all scene lights.

		 ]]></description>
</field>
<field name='materials' fullname='flare.basic:Scene3D/materials' type='Vector$flare.materials:Material3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='skipFrames' fullname='flare.basic:Scene3D/skipFrames' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[

		 When is set to true, the scene will maintain a constant 

		 update framerate (based on scene.frameRate property), but render frames could be skipped to 

		 keep the framerate constant (recommended for games).

		 Otherwise, theh update and render will be synchronized with the enterFrame event (better sittuated for simple visualizations).

		 By default is true.

		 ]]></description>
</field>
<field name='surfaces' fullname='flare.basic:Scene3D/surfaces' type='Vector$flare.core:Surface3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='targetFilters' fullname='flare.basic:Scene3D/targetFilters' type='Vector$flare.materials:Material3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='textures' fullname='flare.basic:Scene3D/textures' type='Vector$flare.core:Texture3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='Viewer3D' fullname='flare.basic:Viewer3D' sourcefile='Z:\projects\flare3d 2.5\src\flare\basic\Viewer3D.as' namespace='flare.basic' access='public' baseclass='flare.basic:Scene3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Viewer3D class adds basic functionalities to the scene for camera control and easier 3d object viewing.                                         

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
</classRec>
<method name='Viewer3D' fullname='flare.basic:Viewer3D/Viewer3D' isStatic='false' isFinal='false' isOverride='false'  param_names='container;file;smooth;speedFactor' param_types='flash.display:DisplayObjectContainer;String;Number;Number' param_defaults='undefined;;1;0.5' result_type='*'>
</method>
<method name='updateEvent' fullname='flare.basic:Viewer3D/private:updateEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<field name='_drag' fullname='flare.basic:Viewer3D/private:_drag' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_out' fullname='flare.basic:Viewer3D/private:_out' type='flash.geom:Vector3D' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_spinX' fullname='flare.basic:Viewer3D/private:_spinX' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_spinY' fullname='flare.basic:Viewer3D/private:_spinY' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_spinZ' fullname='flare.basic:Viewer3D/private:_spinZ' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='smooth' fullname='flare.basic:Viewer3D/smooth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='speedFactor' fullname='flare.basic:Viewer3D/speedFactor' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='Logo' fullname='flare.basic:Logo' sourcefile='Z:\projects\flare3d 2.5\src\flare\basic\Logo.as' namespace='flare.basic' access='internal' baseclass='flare.core:Mesh3D' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<author><![CDATA[Ariel Nehmad

	 ]]></author>
<private><![CDATA[]]></private>
</classRec>
<method name='Logo' fullname='flare.basic:Logo/Logo' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='draw' fullname='flare.basic:Logo/draw' isStatic='false' isFinal='false' isOverride='true'  param_names='includeChildren;material' param_types='Boolean;flare.materials:Material3D' param_defaults='true;null' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setRectangle' fullname='flare.basic:Logo/private:setRectangle' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;width;height' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<field name='Flare3DImage' fullname='flare.basic:Logo/private:Flare3DImage' type='Class' isStatic='true' isConst='false' >
</field>
<field name='_height' fullname='flare.basic:Logo/private:_height' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_material' fullname='flare.basic:Logo/private:_material' type='flare.flsl:FLSLMaterial' isStatic='false' isConst='false' >
</field>
<field name='_surf' fullname='flare.basic:Logo/private:_surf' type='flare.core:Surface3D' isStatic='false' isConst='false' >
</field>
<field name='_width' fullname='flare.basic:Logo/private:_width' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_x' fullname='flare.basic:Logo/private:_x' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_y' fullname='flare.basic:Logo/private:_y' type='Number' isStatic='false' isConst='false' >
</field>
<field name='flsl' fullname='flare.basic:Logo/private:flsl' type='Class' isStatic='true' isConst='false' >
</field>
</asdoc>
